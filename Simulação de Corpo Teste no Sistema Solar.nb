(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1022407,      20393]
NotebookOptionsPosition[   1021622,      20373]
NotebookOutlinePosition[   1021995,      20389]
CellTagsIndexPosition[   1021952,      20386]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "SIMULA\[CapitalCCedilla]\[CapitalATilde]O", " ", "DE", " ", "CORPO", " ", 
    "NO", " ", "SISTEMA", " ", "SOLAR", " ", "COM", " ", 
    "VISUALIZA\[CapitalCCedilla]\[CapitalATilde]O", " ", "TRIDIMENSIONAL"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "PAR\[CapitalAHat]METROS", " ", "DO", " ", "CORPO", " ", "DE", " ", 
    "TESTE"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"m10", "=", 
     RowBox[{"6", "*", 
      RowBox[{"10", "^", "24"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x10o", "=", 
     RowBox[{"1.5", "*", 
      RowBox[{"10", "^", "11"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y10o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z10o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx10o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy10o", "=", "29871"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz10o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Par\[AHat]metros", " ", "de", " ", "Defini\[CCedilla]\[ATilde]o"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ms", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "30"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rs", "=", "696340000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ua", "=", 
     RowBox[{"1.5", "*", 
      RowBox[{"10", "^", "11"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ano", "=", 
     RowBox[{"60", "*", "60", "*", "24", "*", "365"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"graus", "=", 
     RowBox[{"Pi", "/", "180"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u", "=", 
     RowBox[{"6.67", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "11"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Configura\[CCedilla]\[OTilde]es", " ", "Gerais", " ", "da", " ", 
     "Simula\[CCedilla]\[ATilde]o"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
      "Input", "[", "\"\<Escreva o tempo decorrido em anos.\>\"", "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempo", "=", 
     RowBox[{"temp", "*", "ano"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"escv", "=", "4503443661000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"escp", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Par\[AHat]metros", " ", "dos", " ", "Oito", " ", "Corpos", " ", "do", 
     " ", "Sistem", " ", "Solar"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r1", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r2", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r3", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r4", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r5", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r6", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r7", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r8", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r9", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r10", "=", "rs"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m1", "=", 
     RowBox[{"2", "*", 
      RowBox[{"10", "^", "30"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m2", "=", 
     RowBox[{"3.3", "*", 
      RowBox[{"10", "^", "23"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m3", "=", 
     RowBox[{"4.9", "*", 
      RowBox[{"10", "^", "24"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m4", "=", 
     RowBox[{"6", "*", 
      RowBox[{"10", "^", "24"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m5", "=", 
     RowBox[{"6.4", "*", 
      RowBox[{"10", "^", "24"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m6", "=", 
     RowBox[{"1.9", "*", 
      RowBox[{"10", "^", "27"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m7", "=", 
     RowBox[{"5.7", "*", 
      RowBox[{"10", "^", "26"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m8", "=", 
     RowBox[{"8.7", "*", 
      RowBox[{"10", "^", "25"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m9", "=", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", "26"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2o", "=", "69816900000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x3o", "=", "108942000000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x4o", "=", "152098232000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x5o", "=", "249209300000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x6o", "=", "816520800000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x7o", "=", "1513325783000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x8o", "=", "3004419704000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x9o", "=", "4503443661000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y2o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y3o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y4o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y5o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y6o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y7o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y8o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"y9o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z2o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z3o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z4o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z5o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z6o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z7o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z8o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"z9o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx2o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx3o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx4o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx5o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx6o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx7o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx8o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vx9o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy2o", "=", "47362"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy3o", "=", "35020"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy4o", "=", "29780"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy5o", "=", "24077"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy6o", "=", "13070"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy7o", "=", "9690"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy8o", "=", "6810"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vy9o", "=", "5430"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz1o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz2o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz3o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz4o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz5o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz6o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz7o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz8o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vz9o", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Corpo", " ", "da", " ", "Simula\[CCedilla]\[ATilde]o"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trajetoria", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y1", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x3", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y3", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y2", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x3", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y3", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x3", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y3", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x4", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y4", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x5", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y5", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x6", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y6", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x7", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y7", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x8", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y8", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z2", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x9", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x10", "[", "t", "]"}], "-", 
                 RowBox[{"x9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y9", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z2", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y10", "[", "t", "]"}], "-", 
                 RowBox[{"y9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x10", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x1", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x2", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x3", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x4", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x5", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x6", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x7", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x8", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x9", "[", "t", "]"}], "-", 
                 RowBox[{"x10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y10", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y1", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y2", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y3", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y4", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y5", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y6", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y7", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y8", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"y9", "[", "t", "]"}], "-", 
                 RowBox[{"y10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z1", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z1", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z2", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x3", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y3", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z2", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y2", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z3", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z3", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z4", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y4", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z4", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z5", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x5", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y5", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z5", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z6", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y6", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z6", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z7", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x7", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y7", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z7", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z8", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z1", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"x8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y8", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z8", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z9", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z9", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z3", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z4", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z5", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z6", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x9", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y9", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z7", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z8", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m10", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z10", "[", "t", "]"}], "-", 
                 RowBox[{"z9", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z10", "''"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"u", "*", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{"m1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z1", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x1", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y1", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z1", "[", "t", "]"}], "-", 
                    RowBox[{"z10", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z2", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x2", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y2", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z2", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m3", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z3", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y3", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z3", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z4", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x4", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y4", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z4", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m5", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z5", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y5", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z5", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m6", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z6", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x6", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y6", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z6", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m7", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z7", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y7", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z7", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m8", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z8", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x8", "[", "t", "]"}], "-", 
                    RowBox[{"x10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y8", "[", "t", "]"}], "-", 
                    RowBox[{"y10", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z8", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]], "+", 
             FractionBox[
              RowBox[{"m9", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"z9", "[", "t", "]"}], "-", 
                 RowBox[{"z10", "[", "t", "]"}]}], ")"}]}], 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"x10", "[", "t", "]"}], "-", 
                    RowBox[{"x9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"y10", "[", "t", "]"}], "-", 
                    RowBox[{"y9", "[", "t", "]"}]}], ")"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"z10", "[", "t", "]"}], "-", 
                    RowBox[{"z9", "[", "t", "]"}]}], ")"}], "^", "2"}]}], 
                "]"}], "^", "3"}]]}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "x1o"}], ",", 
         RowBox[{
          RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "x2o"}], ",", 
         RowBox[{
          RowBox[{"x3", "[", "0", "]"}], "\[Equal]", "x3o"}], ",", 
         RowBox[{
          RowBox[{"x4", "[", "0", "]"}], "\[Equal]", "x4o"}], ",", 
         RowBox[{
          RowBox[{"x5", "[", "0", "]"}], "\[Equal]", "x5o"}], ",", 
         RowBox[{
          RowBox[{"x6", "[", "0", "]"}], "\[Equal]", "x6o"}], ",", 
         RowBox[{
          RowBox[{"x7", "[", "0", "]"}], "\[Equal]", "x7o"}], ",", 
         RowBox[{
          RowBox[{"x8", "[", "0", "]"}], "\[Equal]", "x8o"}], ",", 
         RowBox[{
          RowBox[{"x9", "[", "0", "]"}], "\[Equal]", "x9o"}], ",", 
         RowBox[{
          RowBox[{"x10", "[", "0", "]"}], "\[Equal]", "x10o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x1", "'"}], "[", "0", "]"}], "\[Equal]", "vx1o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x2", "'"}], "[", "0", "]"}], "\[Equal]", "vx2o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x3", "'"}], "[", "0", "]"}], "\[Equal]", "vx3o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x4", "'"}], "[", "0", "]"}], "\[Equal]", "vx4o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x5", "'"}], "[", "0", "]"}], "\[Equal]", "vx5o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x6", "'"}], "[", "0", "]"}], "\[Equal]", "vx6o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x7", "'"}], "[", "0", "]"}], "\[Equal]", "vx7o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x8", "'"}], "[", "0", "]"}], "\[Equal]", "vx8o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x9", "'"}], "[", "0", "]"}], "\[Equal]", "vx9o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x10", "'"}], "[", "0", "]"}], "\[Equal]", "vx10o"}], ",", 
         RowBox[{
          RowBox[{"y1", "[", "0", "]"}], "\[Equal]", "y1o"}], ",", 
         RowBox[{
          RowBox[{"y2", "[", "0", "]"}], "\[Equal]", "y2o"}], ",", 
         RowBox[{
          RowBox[{"y3", "[", "0", "]"}], "\[Equal]", "y3o"}], ",", 
         RowBox[{
          RowBox[{"y4", "[", "0", "]"}], "\[Equal]", "y4o"}], ",", 
         RowBox[{
          RowBox[{"y5", "[", "0", "]"}], "\[Equal]", "y5o"}], ",", 
         RowBox[{
          RowBox[{"y6", "[", "0", "]"}], "\[Equal]", "y6o"}], ",", 
         RowBox[{
          RowBox[{"y7", "[", "0", "]"}], "\[Equal]", "y7o"}], ",", 
         RowBox[{
          RowBox[{"y8", "[", "0", "]"}], "\[Equal]", "y8o"}], ",", 
         RowBox[{
          RowBox[{"y9", "[", "0", "]"}], "\[Equal]", "y9o"}], ",", 
         RowBox[{
          RowBox[{"y10", "[", "0", "]"}], "\[Equal]", "y10o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y1", "'"}], "[", "0", "]"}], "\[Equal]", "vy1o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y2", "'"}], "[", "0", "]"}], "\[Equal]", "vy2o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y3", "'"}], "[", "0", "]"}], "\[Equal]", "vy3o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y4", "'"}], "[", "0", "]"}], "\[Equal]", "vy4o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y5", "'"}], "[", "0", "]"}], "\[Equal]", "vy5o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y6", "'"}], "[", "0", "]"}], "\[Equal]", "vy6o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y7", "'"}], "[", "0", "]"}], "\[Equal]", "vy7o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y8", "'"}], "[", "0", "]"}], "\[Equal]", "vy8o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y9", "'"}], "[", "0", "]"}], "\[Equal]", "vy9o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y10", "'"}], "[", "0", "]"}], "\[Equal]", "vy10o"}], ",", 
         RowBox[{
          RowBox[{"z1", "[", "0", "]"}], "\[Equal]", "z1o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z1", "'"}], "[", "0", "]"}], "\[Equal]", "vz1o"}], ",", 
         RowBox[{
          RowBox[{"z2", "[", "0", "]"}], "\[Equal]", "z2o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z2", "'"}], "[", "0", "]"}], "\[Equal]", "vz2o"}], ",", 
         RowBox[{
          RowBox[{"z3", "[", "0", "]"}], "\[Equal]", "z3o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z3", "'"}], "[", "0", "]"}], "\[Equal]", "vz3o"}], ",", 
         RowBox[{
          RowBox[{"z4", "[", "0", "]"}], "\[Equal]", "z4o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z4", "'"}], "[", "0", "]"}], "\[Equal]", "vz4o"}], ",", 
         RowBox[{
          RowBox[{"z5", "[", "0", "]"}], "\[Equal]", "z5o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z5", "'"}], "[", "0", "]"}], "\[Equal]", "vz5o"}], ",", 
         RowBox[{
          RowBox[{"z6", "[", "0", "]"}], "\[Equal]", "z6o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z6", "'"}], "[", "0", "]"}], "\[Equal]", "vz6o"}], ",", 
         RowBox[{
          RowBox[{"z7", "[", "0", "]"}], "\[Equal]", "z7o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z7", "'"}], "[", "0", "]"}], "\[Equal]", "vz7o"}], ",", 
         RowBox[{
          RowBox[{"z8", "[", "0", "]"}], "\[Equal]", "z8o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z8", "'"}], "[", "0", "]"}], "\[Equal]", "vz8o"}], ",", 
         RowBox[{
          RowBox[{"z9", "[", "0", "]"}], "\[Equal]", "z9o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z9", "'"}], "[", "0", "]"}], "\[Equal]", "vz9o"}], ",", 
         RowBox[{
          RowBox[{"z10", "[", "0", "]"}], "\[Equal]", "z10o"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"z10", "'"}], "[", "0", "]"}], "\[Equal]", "vz10o"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "[", "t", "]"}], ",", 
         RowBox[{"y1", "[", "t", "]"}], ",", 
         RowBox[{"x2", "[", "t", "]"}], ",", 
         RowBox[{"y2", "[", "t", "]"}], ",", 
         RowBox[{"z1", "[", "t", "]"}], ",", 
         RowBox[{"z2", "[", "t", "]"}], ",", 
         RowBox[{"x3", "[", "t", "]"}], ",", 
         RowBox[{"y3", "[", "t", "]"}], ",", 
         RowBox[{"z3", "[", "t", "]"}], ",", 
         RowBox[{"x4", "[", "t", "]"}], ",", 
         RowBox[{"y4", "[", "t", "]"}], ",", 
         RowBox[{"z4", "[", "t", "]"}], ",", 
         RowBox[{"x5", "[", "t", "]"}], ",", 
         RowBox[{"y5", "[", "t", "]"}], ",", 
         RowBox[{"z5", "[", "t", "]"}], ",", 
         RowBox[{"x6", "[", "t", "]"}], ",", 
         RowBox[{"y6", "[", "t", "]"}], ",", 
         RowBox[{"z6", "[", "t", "]"}], ",", 
         RowBox[{"x7", "[", "t", "]"}], ",", 
         RowBox[{"y7", "[", "t", "]"}], ",", 
         RowBox[{"z7", "[", "t", "]"}], ",", 
         RowBox[{"x8", "[", "t", "]"}], ",", 
         RowBox[{"y8", "[", "t", "]"}], ",", 
         RowBox[{"z8", "[", "t", "]"}], ",", 
         RowBox[{"x9", "[", "t", "]"}], ",", 
         RowBox[{"y9", "[", "t", "]"}], ",", 
         RowBox[{"z9", "[", "t", "]"}], ",", 
         RowBox[{"x10", "[", "t", "]"}], ",", 
         RowBox[{"y10", "[", "t", "]"}], ",", 
         RowBox[{"z10", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt1", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x1", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt1", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y1", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt2", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x2", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt2", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y2", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt3", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x3", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt3", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y3", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt4", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x4", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt4", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y4", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt5", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x5", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt5", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y5", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt6", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x6", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt6", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y6", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt7", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x7", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt7", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y7", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt8", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x8", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt8", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y8", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt9", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x9", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt9", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y9", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xt10", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"x10", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yt10", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"y10", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt1", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z1", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt2", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z2", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt3", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z3", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt4", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z4", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt5", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z5", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt6", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z6", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt7", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z7", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt8", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z8", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt9", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z9", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zt10", "[", "t_", "]"}], ":=", 
     RowBox[{
      RowBox[{"z10", "[", "t", "]"}], "/.", 
      RowBox[{"trajetoria", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Corpo", " ", "da", " ", "Visualiza\[CCedilla]\[ATilde]o", " ", "do", " ",
      "Gr\[AAcute]fico", " ", "Tridimensional"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt1", "[", "t", "]"}], ",", 
         RowBox[{"yt1", "[", "t", "]"}], ",", 
         RowBox[{"zt1", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g2", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt2", "[", "t", "]"}], ",", 
         RowBox[{"yt2", "[", "t", "]"}], ",", 
         RowBox[{"zt2", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g3", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt3", "[", "t", "]"}], ",", 
         RowBox[{"yt3", "[", "t", "]"}], ",", 
         RowBox[{"zt3", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g4", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt4", "[", "t", "]"}], ",", 
         RowBox[{"yt4", "[", "t", "]"}], ",", 
         RowBox[{"zt4", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g5", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt5", "[", "t", "]"}], ",", 
         RowBox[{"yt5", "[", "t", "]"}], ",", 
         RowBox[{"zt5", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g6", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt6", "[", "t", "]"}], ",", 
         RowBox[{"yt6", "[", "t", "]"}], ",", 
         RowBox[{"zt6", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g7", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt7", "[", "t", "]"}], ",", 
         RowBox[{"yt7", "[", "t", "]"}], ",", 
         RowBox[{"zt7", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g8", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt8", "[", "t", "]"}], ",", 
         RowBox[{"yt8", "[", "t", "]"}], ",", 
         RowBox[{"zt8", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g9", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt9", "[", "t", "]"}], ",", 
         RowBox[{"yt9", "[", "t", "]"}], ",", 
         RowBox[{"zt9", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g10", "=", 
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xt10", "[", "t", "]"}], ",", 
         RowBox[{"yt10", "[", "t", "]"}], ",", 
         RowBox[{"zt10", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.03", "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "escv"}], "]"}]}], 
       "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Corpo", " ", "da", " ", "Visualiza\[CCedilla]\[ATilde]o", " ", "dos", 
     " ", "Corpos"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt1", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt1", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt1", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt2", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt2", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt2", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt3", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt3", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz3", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt3", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt4", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt4", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz4", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt4", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt5", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt5", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt5", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt6", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt6", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz6", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt6", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx7", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt7", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty7", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt7", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz7", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt7", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx8", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt8", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty8", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt8", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz8", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt8", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx9", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt9", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty9", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt9", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz9", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt9", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tx10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xt10", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ty10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"yt10", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tz10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zt10", "[", "t", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"tempo", "-", "1"}], ",", "tempo"}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t1", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t2", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty2", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t3", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx3", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty3", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz3", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t4", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx4", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty4", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz4", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t5", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx5", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty5", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz5", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t6", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx6", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty6", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz6", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t7", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx7", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty7", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz7", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t8", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx8", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty8", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz8", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t9", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx9", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty9", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz9", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t10", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"tx10", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"ty10", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"tz10", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Yellow"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t1", ",", 
          RowBox[{"r1", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Green"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t2", ",", 
          RowBox[{"r2", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Blue"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t3", ",", 
          RowBox[{"r3", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p4", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "White"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t4", ",", 
          RowBox[{"r4", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p5", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Gray"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t5", ",", 
          RowBox[{"r5", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p6", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Pink"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t6", ",", 
          RowBox[{"r6", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p7", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Orange"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t7", ",", 
          RowBox[{"r7", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p8", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Brown"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t8", ",", 
          RowBox[{"r8", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p9", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Purple"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t9", ",", 
          RowBox[{"r9", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p10", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Opacity", "[", 
         RowBox[{"1", ",", "Red"}], "]"}], ",", 
        RowBox[{"Sphere", "[", 
         RowBox[{"t10", ",", 
          RowBox[{"r10", "*", "escp"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"s1", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
       "g", ",", "g1", ",", "g2", ",", "g3", ",", "g4", ",", "g5", ",", "g6", 
        ",", "g7", ",", "g8", ",", "g9", ",", "g10", ",", "p1", ",", "p2", 
        ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", ",",
         "p9", ",", "p10", ",", 
        RowBox[{"Background", "\[Rule]", " ", "Black"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "800"}], ",", 
        RowBox[{"Boxed", "\[Rule]", " ", "False"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "temp", "]"}], " ", "\"\<anos\>\"", 
           "\"\<- Gr\[AAcute]fico Tridimensional\>\""}], "]"}]}]}], "]"}], 
      ",", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Yellow", ",", "Green", ",", "Blue", ",", "White", ",", "Gray", ",", 
          "Pink", ",", "Orange", ",", "Brown", ",", "Purple", ",", "Red"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sun\>\"", ",", "\"\<Mercury\>\"", ",", "\"\<Venus\>\"", ",", 
          "\"\<Earth\>\"", ",", "\"\<Mars\>\"", ",", "\"\<Jupiter\>\"", ",", 
          "\"\<Saturn\>\"", ",", "\"\<Uranus\>\"", ",", "\"\<Neptune\>\"", 
          ",", "\"\<Main\>\""}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Corpo", " ", "de", " ", "Visualiza\[CCedilla]\[ATilde]o", " ", "do", " ",
      "Gr\[AAcute]fico", " ", "2", "D", " ", 
     RowBox[{"(", "XY", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"s2", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "escv"}], "]"}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt1", "[", "t", "]"}], ",", 
            RowBox[{"yt1", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt2", "[", "t", "]"}], ",", 
            RowBox[{"yt2", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt3", "[", "t", "]"}], ",", 
            RowBox[{"yt3", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt4", "[", "t", "]"}], ",", 
            RowBox[{"yt4", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt5", "[", "t", "]"}], ",", 
            RowBox[{"yt5", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt6", "[", "t", "]"}], ",", 
            RowBox[{"yt6", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Pink"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt7", "[", "t", "]"}], ",", 
            RowBox[{"yt7", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt8", "[", "t", "]"}], ",", 
            RowBox[{"yt8", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt9", "[", "t", "]"}], ",", 
            RowBox[{"yt9", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt10", "[", "t", "]"}], ",", 
            RowBox[{"yt10", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"Background", "\[Rule]", " ", "Black"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "800"}], ",", 
        RowBox[{"Axes", "\[Rule]", " ", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "temp", "]"}], " ", "\"\<anos\>\"", 
           "\"\<- Gr\[AAcute]fico dos Eixos XY\>\""}], "]"}]}]}], "]"}], ",", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Yellow", ",", "Green", ",", "Blue", ",", "White", ",", "Gray", ",", 
          "Pink", ",", "Orange", ",", "Brown", ",", "Purple", ",", "Red"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sun\>\"", ",", "\"\<Mercury\>\"", ",", "\"\<Venus\>\"", ",", 
          "\"\<Earth\>\"", ",", "\"\<Mars\>\"", ",", "\"\<Jupiter\>\"", ",", 
          "\"\<Saturn\>\"", ",", "\"\<Uranus\>\"", ",", "\"\<Neptune\>\""}], 
         "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Corpo", " ", "de", " ", "Visualiza\[CCedilla]\[ATilde]o", " ", "do", " ",
      "Gr\[AAcute]fico", " ", "2", "D", " ", 
     RowBox[{"(", "XZ", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"s3", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "escv"}], "]"}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt1", "[", "t", "]"}], ",", 
            RowBox[{"zt1", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt2", "[", "t", "]"}], ",", 
            RowBox[{"zt2", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt3", "[", "t", "]"}], ",", 
            RowBox[{"zt3", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt4", "[", "t", "]"}], ",", 
            RowBox[{"zt4", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt5", "[", "t", "]"}], ",", 
            RowBox[{"zt5", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt6", "[", "t", "]"}], ",", 
            RowBox[{"zt6", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Pink"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt7", "[", "t", "]"}], ",", 
            RowBox[{"zt7", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt8", "[", "t", "]"}], ",", 
            RowBox[{"zt8", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt9", "[", "t", "]"}], ",", 
            RowBox[{"zt9", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xt10", "[", "t", "]"}], ",", 
            RowBox[{"zt10", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"Background", "\[Rule]", " ", "Black"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "800"}], ",", 
        RowBox[{"Axes", "\[Rule]", " ", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "temp", "]"}], " ", "\"\<anos\>\"", 
           "\"\<- Gr\[AAcute]fico dos Eixos XZ\>\""}], "]"}]}]}], "]"}], ",", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Yellow", ",", "Green", ",", "Blue", ",", "White", ",", "Gray", ",", 
          "Pink", ",", "Orange", ",", "Brown", ",", "Purple", ",", "Red"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sun\>\"", ",", "\"\<Mercury\>\"", ",", "\"\<Venus\>\"", ",", 
          "\"\<Earth\>\"", ",", "\"\<Mars\>\"", ",", "\"\<Jupiter\>\"", ",", 
          "\"\<Saturn\>\"", ",", "\"\<Uranus\>\"", ",", "\"\<Neptune\>\""}], 
         "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Corpo", " ", "de", " ", "Visualiza\[CCedilla]\[ATilde]o", " ", "do", " ",
      "Gr\[AAcute]fico", " ", "2", "D", " ", 
     RowBox[{"(", "YZ", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"s4", "=", 
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Graphics", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "escv"}], "]"}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt1", "[", "t", "]"}], ",", 
            RowBox[{"zt1", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Yellow"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt2", "[", "t", "]"}], ",", 
            RowBox[{"zt2", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt3", "[", "t", "]"}], ",", 
            RowBox[{"zt3", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt4", "[", "t", "]"}], ",", 
            RowBox[{"zt4", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "White"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt5", "[", "t", "]"}], ",", 
            RowBox[{"zt5", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt6", "[", "t", "]"}], ",", 
            RowBox[{"zt6", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Pink"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt7", "[", "t", "]"}], ",", 
            RowBox[{"zt7", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt8", "[", "t", "]"}], ",", 
            RowBox[{"zt8", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Brown"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt9", "[", "t", "]"}], ",", 
            RowBox[{"zt9", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}], ",", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"yt10", "[", "t", "]"}], ",", 
            RowBox[{"zt10", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tempo"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"Background", "\[Rule]", " ", "Black"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "800"}], ",", 
        RowBox[{"Axes", "\[Rule]", " ", "True"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "temp", "]"}], " ", "\"\<anos\>\"", 
           "\"\<- Gr\[AAcute]fico dos Eixos YZ\>\""}], "]"}]}]}], "]"}], ",", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Yellow", ",", "Green", ",", "Blue", ",", "White", ",", "Gray", ",", 
          "Pink", ",", "Orange", ",", "Brown", ",", "Purple", ",", "Red"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Sun\>\"", ",", "\"\<Mercury\>\"", ",", "\"\<Venus\>\"", ",", 
          "\"\<Earth\>\"", ",", "\"\<Mars\>\"", ",", "\"\<Jupiter\>\"", ",", 
          "\"\<Saturn\>\"", ",", "\"\<Uranus\>\"", ",", "\"\<Neptune\>\""}], 
         "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Configura\[CCedilla]\[OTilde]es", " ", "de", " ", "Limpeza"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8772707555587573`*^9, 3.877270757292251*^9}, {
   3.877270822348489*^9, 3.877270825141549*^9}, {3.8772708707454753`*^9, 
   3.877270923905239*^9}, {3.8772709701059113`*^9, 3.877270973516263*^9}, {
   3.877271041881603*^9, 3.877271120228017*^9}, {3.8772714129695573`*^9, 
   3.8772714162570653`*^9}, {3.8772714909153748`*^9, 
   3.8772716246176424`*^9}, {3.8772719702232876`*^9, 
   3.8772720745258026`*^9}, {3.8772721584963417`*^9, 
   3.8772721865970845`*^9}, {3.877272286684042*^9, 3.87727244920387*^9}, {
   3.877272485106879*^9, 3.877272550537736*^9}, {3.8772725952438164`*^9, 
   3.8772726488292685`*^9}, {3.87727364168997*^9, 3.877273765762333*^9}, {
   3.877273801943015*^9, 3.8772738974535103`*^9}, {3.877274029740651*^9, 
   3.877274031461626*^9}, {3.8772740881760607`*^9, 3.8772741301763897`*^9}, 
   3.877274161767784*^9, {3.8772742471233573`*^9, 3.877274314670645*^9}, {
   3.8772744371048217`*^9, 3.877274472980302*^9}, {3.8772745233042927`*^9, 
   3.877274557747551*^9}, {3.8772746003815556`*^9, 3.877274656288175*^9}, {
   3.877274961257189*^9, 3.877274977612522*^9}, {3.8772750705709944`*^9, 
   3.87727507500039*^9}, {3.8772751531353045`*^9, 3.877275191398473*^9}, {
   3.8772752609863234`*^9, 3.877275294961581*^9}, {3.877275398653881*^9, 
   3.877275413970024*^9}, {3.8772757677252607`*^9, 3.8772758114699497`*^9}, {
   3.8772758504169073`*^9, 3.8772758546830645`*^9}, {3.877275918735609*^9, 
   3.877276012054216*^9}, {3.877276054675694*^9, 3.877276059243534*^9}, {
   3.8772761195479336`*^9, 3.877276125016326*^9}, {3.8772761790510483`*^9, 
   3.8772764200283213`*^9}, {3.877277920156949*^9, 3.8772779409239655`*^9}, {
   3.8772780261126566`*^9, 3.877278069538745*^9}, {3.8772783182566404`*^9, 
   3.8772783968606863`*^9}, 3.877348920167743*^9, {3.877348955124003*^9, 
   3.8773494144246054`*^9}, {3.8773495272920046`*^9, 3.8773495593035*^9}, {
   3.8773496585012255`*^9, 3.8773496585702295`*^9}, {3.877349693127269*^9, 
   3.877349701794071*^9}, {3.8773497331692696`*^9, 3.8773497460458603`*^9}, {
   3.8773498040848074`*^9, 3.8773498115725665`*^9}, {3.8773498713545847`*^9, 
   3.8773499181229267`*^9}, {3.8773503875487843`*^9, 
   3.8773503878024035`*^9}, {3.8773610672552958`*^9, 3.877361118786363*^9}, {
   3.8773611821209984`*^9, 3.877361214644781*^9}, {3.8773613738036714`*^9, 
   3.8773613740248117`*^9}, {3.8773614968804226`*^9, 
   3.8773615014550605`*^9}, {3.8773615699120007`*^9, 
   3.8773615959526844`*^9}, {3.877361790603262*^9, 3.8773618454036736`*^9}, 
   3.8773618796031895`*^9, {3.8773761967907085`*^9, 3.8773763522324085`*^9}, {
   3.877376491115369*^9, 3.877376535040265*^9}, {3.8773765668762684`*^9, 
   3.8773767186321497`*^9}, {3.8773767660231595`*^9, 
   3.8773770281310635`*^9}, {3.8773770714352455`*^9, 3.877377114241908*^9}, 
   3.877377298009577*^9, {3.8773775196326075`*^9, 3.8773775719443474`*^9}, {
   3.8773776129869576`*^9, 3.877377614430071*^9}, {3.8773780258775764`*^9, 
   3.877378026080492*^9}, {3.877378056103864*^9, 3.877378122888543*^9}, {
   3.8773781764104567`*^9, 3.8773782005460925`*^9}, {3.877378342721158*^9, 
   3.877378499952509*^9}, {3.877378598761033*^9, 3.8773786024746447`*^9}, {
   3.8773786819995995`*^9, 3.877378775873101*^9}, {3.877378837907158*^9, 
   3.8773788380617275`*^9}, {3.877378873289343*^9, 3.877378894669464*^9}, {
   3.87738861047443*^9, 3.877388774526718*^9}, {3.8773901658360586`*^9, 
   3.8773902351477947`*^9}, {3.8773902699797935`*^9, 
   3.8773905550741706`*^9}, {3.877390588304676*^9, 3.8773908321833396`*^9}, {
   3.8773913817320504`*^9, 3.8773914439138155`*^9}, {3.877391477387802*^9, 
   3.8773916345390472`*^9}, {3.877401944436022*^9, 3.8774021162923174`*^9}, {
   3.8774021524713235`*^9, 3.8774024503654118`*^9}, {3.8774024842750516`*^9, 
   3.8774026395483646`*^9}, {3.8774027354125605`*^9, 3.877402767983095*^9}, {
   3.8774028139878635`*^9, 3.8774028140659733`*^9}, {3.8774028679075985`*^9, 
   3.877402868016949*^9}, 3.877402916340322*^9, 3.8774029816320734`*^9, {
   3.87740301810788*^9, 3.877403057522346*^9}, {3.877403088992859*^9, 
   3.8774031120811057`*^9}, {3.877403146595791*^9, 3.8774032441132216`*^9}, {
   3.87740331752842*^9, 3.877403321793054*^9}, {3.877403371027486*^9, 
   3.877403372839563*^9}, {3.8774034286641135`*^9, 3.87740343066363*^9}, {
   3.877403603669057*^9, 3.877403636020835*^9}, {3.8774038098442373`*^9, 
   3.8774038573385925`*^9}, {3.877403896579339*^9, 3.877403896751213*^9}, {
   3.8774077755556774`*^9, 3.8774078589580183`*^9}, {3.877409106204775*^9, 
   3.877409239112773*^9}, {3.87740944863315*^9, 3.8774096033320913`*^9}, {
   3.8774096372772465`*^9, 3.877409851736166*^9}, {3.8774098902896566`*^9, 
   3.8774099949168787`*^9}, {3.87741002941999*^9, 3.877410226426652*^9}, {
   3.8774102589722214`*^9, 3.8774103899921055`*^9}, {3.87741042025062*^9, 
   3.877410474441065*^9}, {3.8774393012994213`*^9, 3.877439438415799*^9}, {
   3.877439900862383*^9, 3.8774404396973057`*^9}, {3.877440498633062*^9, 
   3.8774406916268015`*^9}, {3.8774416232899694`*^9, 
   3.8774417338163657`*^9}, {3.87744177273772*^9, 3.8774417953066216`*^9}, {
   3.87744784977759*^9, 3.8774488669597063`*^9}, {3.8774489385417757`*^9, 
   3.8774490155348606`*^9}, {3.877473674111431*^9, 3.877473797108451*^9}, {
   3.8774983163149877`*^9, 3.877499044215083*^9}, {3.877499077235473*^9, 
   3.8774991056662965`*^9}, {3.877500846723194*^9, 3.877500847176222*^9}, {
   3.8775183931602736`*^9, 3.8775187518153634`*^9}, {3.877518787525773*^9, 
   3.8775187966017237`*^9}, {3.877518831113612*^9, 3.877518837221558*^9}, 
   3.877518923462962*^9, {3.877519063585901*^9, 3.877519122329493*^9}, 
   3.877519351108068*^9, {3.877519498475297*^9, 3.877519517429937*^9}, {
   3.8775195799420013`*^9, 3.8775195892474527`*^9}, {3.877519643312886*^9, 
   3.8775199006004725`*^9}, {3.877519981394006*^9, 3.877520018411092*^9}, {
   3.877520060323168*^9, 3.877520083263877*^9}, {3.8775201480790806`*^9, 
   3.877520229060068*^9}, {3.8775202609996924`*^9, 3.877520263092904*^9}, 
   3.8775203391717024`*^9, {3.8775204023070946`*^9, 3.8775204129764996`*^9}, {
   3.877520578292899*^9, 3.877520578386668*^9}, {3.877520613560486*^9, 
   3.8775206277758646`*^9}, {3.8775207889304295`*^9, 3.877520792054695*^9}, {
   3.8775208347634687`*^9, 3.877520861330386*^9}, {3.8775210309241595`*^9, 
   3.877521541007223*^9}, 3.877521607471119*^9, {3.877521714443966*^9, 
   3.8775217245821657`*^9}, {3.877521786600418*^9, 3.8775217867565846`*^9}, {
   3.877522532841441*^9, 3.877522574327264*^9}, {3.87752300264752*^9, 
   3.8775231102569675`*^9}, {3.8775232803910923`*^9, 3.877523281140877*^9}, {
   3.8775234708793936`*^9, 3.877523477393482*^9}, {3.8775235257213316`*^9, 
   3.877523536875*^9}, 3.8775235798961616`*^9, {3.8775236286246443`*^9, 
   3.8775236514318275`*^9}, {3.877523688094863*^9, 3.8775237045441236`*^9}, {
   3.8775238884121633`*^9, 3.8775238908803744`*^9}, {3.8775240986034107`*^9, 
   3.877524129486785*^9}, {3.8775241638962593`*^9, 3.8775241897963824`*^9}, {
   3.8775242203659306`*^9, 3.8775242208813896`*^9}, {3.8775242607939386`*^9, 
   3.8775242871470833`*^9}, {3.877524321014176*^9, 3.8775243212796946`*^9}, {
   3.877524351918929*^9, 3.8775243912017145`*^9}, {3.8775244283961062`*^9, 
   3.8775244580707006`*^9}, {3.8775246421104193`*^9, 
   3.8775247204089346`*^9}, {3.8775247552132635`*^9, 
   3.8775247585562644`*^9}, {3.8775247908299465`*^9, 3.877524835137116*^9}, {
   3.877524895141442*^9, 3.877524898578171*^9}, 3.877524958886574*^9, {
   3.877525024189968*^9, 3.877525024877346*^9}, {3.877525061942144*^9, 
   3.87752506433226*^9}, {3.8775252247016726`*^9, 3.877525319705547*^9}, {
   3.8775253625339746`*^9, 3.8775255715990334`*^9}, {3.877525645807621*^9, 
   3.8775257051944466`*^9}, {3.8775258096352673`*^9, 
   3.8775259228579383`*^9}, {3.8775259803654346`*^9, 
   3.8775259992984896`*^9}, {3.877526037768405*^9, 3.877526190170813*^9}, {
   3.8775262667411575`*^9, 3.8775262853304973`*^9}, {3.8775263245379906`*^9, 
   3.8775264811831517`*^9}, {3.8775265222315626`*^9, 3.877526593578925*^9}, {
   3.8775290940774016`*^9, 3.8775291029815226`*^9}, {3.8775293828929567`*^9, 
   3.8775293887822027`*^9}, {3.8776884870669312`*^9, 3.877688767916872*^9}, {
   3.8776888004046135`*^9, 3.877689065850625*^9}, {3.87768912556896*^9, 
   3.8776894696392393`*^9}, {3.8776895105557923`*^9, 
   3.8776896643508387`*^9}, {3.8776897887282076`*^9, 
   3.8776900597625523`*^9}, {3.8776900961399126`*^9, 3.877690159192551*^9}, {
   3.877690207466461*^9, 3.877690266221093*^9}, {3.877690358209301*^9, 
   3.8776903641574774`*^9}, {3.877695501022746*^9, 3.8776959894513726`*^9}, {
   3.877696128502505*^9, 3.877696282173361*^9}, {3.8776963493980713`*^9, 
   3.8776963865522223`*^9}, {3.8776964188954706`*^9, 3.877696419324113*^9}, {
   3.877696495923256*^9, 3.8776966651950893`*^9}, {3.877714839636368*^9, 
   3.877714915211805*^9}, {3.8777149608358493`*^9, 3.877715024753392*^9}, {
   3.8777150987507734`*^9, 3.8777152142330055`*^9}, {3.877715275336508*^9, 
   3.877715702201861*^9}, {3.877716052828583*^9, 3.8777161151608567`*^9}, {
   3.877716204910781*^9, 3.8777162077042866`*^9}, {3.8777162868216844`*^9, 
   3.877716334147052*^9}, 3.8777165381494255`*^9, {3.877716636907976*^9, 
   3.877716636998188*^9}, {3.877727636341472*^9, 3.8777276373881044`*^9}, {
   3.8777276748455505`*^9, 3.8777277358775496`*^9}, {3.8777278389130774`*^9, 
   3.877727846050724*^9}, {3.8777279023123097`*^9, 3.8777279037106647`*^9}, {
   3.8777280006694202`*^9, 3.877728114419591*^9}, {3.8777281525142393`*^9, 
   3.8777282209890394`*^9}, {3.8777283252070065`*^9, 
   3.8777283685237236`*^9}, {3.8777284293963566`*^9, 3.877728522701001*^9}, {
   3.8777290327975855`*^9, 3.8777290402754903`*^9}, 3.877729152992795*^9, {
   3.877729888697621*^9, 3.8777299057912292`*^9}, {3.8777311572081423`*^9, 
   3.8777311869673233`*^9}, {3.8777313800345902`*^9, 
   3.8777315933275423`*^9}, {3.8777316539115095`*^9, 
   3.8777316550122433`*^9}, {3.8777317485051126`*^9, 
   3.8777317497025766`*^9}, {3.8777318070005245`*^9, 
   3.8777318232459297`*^9}, {3.877731870868664*^9, 3.8777319277411985`*^9}, {
   3.8777320595505333`*^9, 3.8777320796361113`*^9}, {3.877732138201541*^9, 
   3.877732178730132*^9}, {3.8777322325681934`*^9, 3.8777322407765355`*^9}, {
   3.877732277955145*^9, 3.8777323011593103`*^9}, {3.8777327513259034`*^9, 
   3.8777327626709995`*^9}, {3.8777328638716288`*^9, 
   3.8777329074777813`*^9}, {3.877732981520177*^9, 3.877732999986557*^9}, {
   3.877733056138715*^9, 3.8777330562642355`*^9}, {3.8777330901700587`*^9, 
   3.877733122927415*^9}, {3.877733153736929*^9, 3.877733159008316*^9}, {
   3.877733214898782*^9, 3.8777332741532106`*^9}, {3.8777333267471285`*^9, 
   3.8777333312922783`*^9}, {3.877733389030161*^9, 3.8777334320689845`*^9}, {
   3.8777335045962205`*^9, 3.877733509844699*^9}, {3.8777336473521833`*^9, 
   3.8777336687276807`*^9}, {3.877733727615641*^9, 3.877733769085375*^9}, {
   3.8777338664685645`*^9, 3.8777339737406297`*^9}, {3.877734036562092*^9, 
   3.8777340380259185`*^9}, {3.877734149261037*^9, 3.87773415160079*^9}, {
   3.877734392575135*^9, 3.877734399995274*^9}, {3.877734503251416*^9, 
   3.877734605208843*^9}, {3.877734662191946*^9, 3.877734663519759*^9}, {
   3.877734736429611*^9, 3.877734736570199*^9}, {3.8777348431573935`*^9, 
   3.8777348553054247`*^9}, {3.8777348979985657`*^9, 
   3.8777349007791624`*^9}, {3.8777349324957995`*^9, 
   3.8777349646601505`*^9}, {3.877735064049197*^9, 3.8777351468285437`*^9}, {
   3.877735213009336*^9, 3.8777352785406513`*^9}, {3.8777353750416994`*^9, 
   3.877735377572358*^9}, {3.8777355358388405`*^9, 3.877735561467019*^9}, {
   3.8777356030702887`*^9, 3.8777356203319116`*^9}, {3.8777356756139617`*^9, 
   3.877735695734255*^9}, {3.8777357285365953`*^9, 3.877735730020625*^9}, {
   3.8777357642470336`*^9, 3.8777358301186943`*^9}, 3.8777358612694664`*^9, {
   3.877735936288814*^9, 3.8777360263377*^9}, {3.8777360795062838`*^9, 
   3.8777362497846365`*^9}, {3.8777362988734365`*^9, 
   3.8777363250079165`*^9}, {3.8777363663463936`*^9, 
   3.8777363966205654`*^9}, {3.877736438536401*^9, 3.8777364709018283`*^9}, {
   3.877736515219583*^9, 3.877736572158859*^9}, {3.8777769947261972`*^9, 
   3.877777000872959*^9}, {3.8777770438595314`*^9, 3.8777770439774227`*^9}, {
   3.8777770929441347`*^9, 3.877777127894183*^9}, {3.8777771773549848`*^9, 
   3.8777771867198563`*^9}, {3.8777773483009253`*^9, 3.877777441170849*^9}, {
   3.877777528837721*^9, 3.8777775609561815`*^9}, {3.8777776619093933`*^9, 
   3.877777673776581*^9}, {3.8779161435247912`*^9, 3.877916344372202*^9}, {
   3.8779163957907596`*^9, 3.8779163977434645`*^9}, {3.877916436723484*^9, 
   3.877916443050169*^9}, {3.8779164739960155`*^9, 3.87791649692815*^9}, {
   3.8779166367462177`*^9, 3.877916656788407*^9}, {3.8779167238351855`*^9, 
   3.877916733061516*^9}, {3.877917567291366*^9, 3.8779176403095355`*^9}, {
   3.8779177111849737`*^9, 3.877917779380311*^9}, {3.877917946016824*^9, 
   3.877917968561468*^9}, {3.8779180038526707`*^9, 3.8779180062754755`*^9}, {
   3.877918040428852*^9, 3.877918066251703*^9}, 3.877918186143485*^9, {
   3.8779182255751963`*^9, 3.877918240253852*^9}, {3.877918310088723*^9, 
   3.877918318685785*^9}, {3.87791835228335*^9, 3.877918359630622*^9}, {
   3.8779184625706744`*^9, 3.8779184635881605`*^9}, {3.8779185104773407`*^9, 
   3.8779185122176723`*^9}, {3.877918600210526*^9, 3.877918624796666*^9}, {
   3.877918876555301*^9, 3.877918890589216*^9}, {3.877949146450946*^9, 
   3.877949509475213*^9}, {3.8779496253091903`*^9, 3.877949722565178*^9}, {
   3.8779498084761124`*^9, 3.8779498102462454`*^9}, {3.877998274452015*^9, 
   3.8779984078688264`*^9}, {3.877998456076334*^9, 3.877998511094719*^9}, {
   3.8779985595990286`*^9, 3.87799855970841*^9}, {3.877998631176072*^9, 
   3.877998633456745*^9}, 3.8779986965357423`*^9, {3.877998819590558*^9, 
   3.8779988497397547`*^9}, {3.877998939144844*^9, 3.8779989705281672`*^9}, {
   3.877999028883989*^9, 3.8779990290557833`*^9}, 3.8779990858086777`*^9, {
   3.877999223869523*^9, 3.877999239695794*^9}, {3.8781347770281367`*^9, 
   3.8781348791789227`*^9}, {3.8786523084137135`*^9, 3.878652405073987*^9}, {
   3.880463772573635*^9, 3.880463777787471*^9}, {3.8860918566034865`*^9, 
   3.886092056482154*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cfa9ee3e-55df-47b3-bde7-1ff18751cc2e"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      Opacity[0.03], 
      SphereBox[{0, 0, 0}, 4503443661000]}, {{}, {}, 
      TagBox[{
        RGBColor[1, 1, 0], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1:eJwNl3k0lH8UxomKkAgtNLZIthnLIMR7jSUKEUk1v7JvyRolUVQKIWuSSIqZ
EZlhEPN+o0UoUbSgshayRmQpP3/cfz7nnnOf+9x77jlX1jXA3mMNFxfXk9Xg
WY2Zo8yKa3bJRoL5I0uqN9btLanSfqC/OFitOLig4HrUCiucnMs8s5JjbLhQ
dotX3qbu2f7taNTZF+twsZss/tdinKw91rEkm1R3WkIpY7bwAjbSPc1IvPvD
eFjndZWFCKsuoa7zcJ5zPBZ1fBf3/N8l46XUIt5A2dY6Cy6fv1MZ6djROW1x
pqMA1l2iUtXh1l8XtLtV+E5hLqa0t9ukMncL9o5H2IxXZKbuyJczxz1UCzGi
RHjZCJLD/PB8qf00bk6FfMknfWc6puah+zdgWQUjtNtdEpTdyFkw2azgUfIY
i5EOpkiNaWFtMz3FR2S3ck6clDsbl1GBSb/p17x4yAAjbBg8k+4mx3GbNORv
v8/BZtWqU4RyLDBpZ3JC9SYtzuURM9Fz7vVYT7jN/pA1Nlh0T5RQqIk+p+lS
WvNjledYQ5TYXgmOPVaad/b2n2LgeCpvkdh4pBkTUOMqWZw7hh38oDfvLmPD
iXhcEk3kvMF4m5pER56fxHL5e/3cNA9xLJujesMZbdidil2EPT/csBm/3Npq
mSOcZ7K0C7LpHZgTU+I4Zb8fdqr5yQqPmyunSLVty2z+F2yhSWi+NyUcu2Bw
XeGncAiHkhBsNS7ai3HvV4lNuheBtbDYJI+gMI6jq/r5GNc+7HojS81u5gLm
4Sm+Rg0iODWTRlrCuwex+oW2WSVmDLaSSPNbLrrEif5sV511aBQT4Mviae1L
wNznimYMCEmcvKptF7hWfmLXvgQsKKcmYXxNfL/n19/k+BSkusVWjWO2Zo2R
d9kpGIYkBj+S0jiLfIqJI0VTmH2f3HNKRxrmTdcSTSLc4uRT7l2tS5rFgsO6
VE+o5GA+1Gsi/04WcGYGTph8y/iLvWP+dmryKcI8d/DvmhBkcUzUP9Zs6/iH
yZVXd/0dKsZiKOmCGx5XcKoLpO38BLmgcDSN0hpEx2RLjwpk+rM5+vNch0aP
csNv0832YTWPsI98o9VUwyec/ePjoUMEXtD+/lwy7xoTo2rd/GZcWM9pk1de
CTTZAKmkW5sPp9ZiwTzduX/EWznZ5eijwy4BiCyq+Bm7VIf1+0Y3nJJo43xS
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
kWoSYjyc7hmPZoGHaJZcnzkD4lw2dJ/HSSih3drW+ioLHr5PY09SVvNp48v3
m0joA0mXQEhjweTGaLbOXgZ8HtSe5+0lIUp+OOVPCQtM+K7GJqoxgPbx4hK/
kAYK+sFzMeoxC5jiKQ5mKgy4k2wxqLJZA91o92OtrWBBqcZ7rXklBvB67Am1
3aaB7KINP0jUskAumuyzb3U/10u8i89R0EAj5oFbKU0sQJLFI4+2M6CXzyjH
wkgDaWOkBs7Qqv4j+vfb1jFg5pVE4mSABspRy14hSFfAVoP8t/Vf6MCibnx5
sUMD0RXC2bvSKuDuUFv+4Xg6cBnt9Kop0ETTrb8bLQIqgXeGwG0xTQO5sBCO
mo42WlaKUFUKqQQdy01U2gQNHLaOewfs1UZe5kd7+cIrQeRLgYngGA166vby
sUy10SZ0jdwSVQlrCQMl77/T4Ilqkzx2SBsJlCjePJRUCU//8Aj59NBARM7m
U1CgNhoOKBwNflQJ2lHj/qWNNFD1dLiixdBGl253En7+rFy9b0KdD+/S4Lzn
nKumHBmRHTrlOycrIeiRo73kHRrslP+ow9pNRgyF2BA0Uwn7C6y8UrJpEDD3
gl9Hg4zqbF1+pS9VghclwTkynQbbKnVKASOjk9NnfCkCbPg7Hep9LJ4GPGtM
lwL/IyPOl07FUmU27KwcCNUJo8GBAdnfxBwyeqa6rvGOOhsIDy+lVoTQwNHN
cLCtYFXPnndlCZpsSLmRd0AriAYbywQ+hdDJqFWHc9RXnw2Q6ZeleYoGTVSt
t6iGjKJYJ0VVrNjAp3gjSc+VBv2MtLWBn8iI6Dc1I2nDhnzDs1m1J1brDmM7
ZXvJaPr0jh1C9mw4emTSyJhKgzmpc1YdP8hIurzdbMqZDRsNzvnuO0KDEbG5
UmyejISDtpv1U9nQqb928o0jDbbiU+ML/8joSEhsQocLGxqXhTc7HFqdo0o/
uXKdDuIqHd/a6MEGacuOD10HaRDnqhAXvFEHmavrj9f4sOGEQqK+qw0NtILE
+zUkdND/bYt6eg==
         "]]}, Annotation[#, "Charting`Private`Tag$25796#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[0, 1, 0], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$25855#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[0, 0, 1], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1:eJwUmXk4Vc8fx+172fd9X7Nd172HVHdKWVJI2fct2hVJRIjIEsoXKcqSRIkk
xRx3UsqSPZI9JDuR7L/7e5771+uZ5zPv85k57/eZubIeF6y9Gejo6MwY6eho
P7qcrfCdAGcMZL1jjSpgmDjAoZ+/K/TCr7dnoq0nrWm8t1+/oES7nkJODH53
s9uy5oSzecGSEwamDCQFfbW7KD9t6hOnuu7WNGCuJGsaH/1Ujg6ZDFKSthVs
dCwqa27/Usy95IiBU43Dk1NaY5RTawFjSV1tNeFH+0YsHTCwtlLtFGH4m3L0
q0rtyTtjNYtuDjvzdhgY3Nz81314jmKq73kIP7pSM66svHnMFgNqnISw+aJF
ypbrfqmOd4y1xwu8+s+dxMAw897jRzSXKb/7OrtlunhqX3/7nn/0BAaqXL7w
nq34Szmk1TyVuSxWa/54wWHaEgMWc6letuQ1ytN6N7PCeIXavk+VTGbHMODx
d/QXQ+0G5eKtQL8lPs3aqG+9RafNaXqOF+49TdmmLN2cXW81J9ZeFy05dsQE
A9yK+yPrPOgAx0PsZJ+NUe3Nmwrb44cwkOw5eTEvnx6Ua1zaLK8+WNtwjPmh
pxEG0p45EIeVmcARrnLyVIdl7SuR6ByAYcDQFL4k+DGD76ePn8+6eLLWNKOr
fUQPA4oFCtuWxSzA8lzQHq0lh1rRKzx/3NQxIEuc9+5XZwf6BwcWfG571fJm
yK8fUMLAcZ3DKofOcgBwvmi7Y/l0rfikrfuIDAb6B+7z+JVwAjEme9ud3edr
jWx9Yz0FMfDCVb1kQH03+En8MxlhElg79OaqpzE3BiIC6nYpn+EGGnmRK+G7
r9U+e8nf94sNA1rJ28E8J3nANfZO3tjjYbXfGQ73nt8gg1feTZ0JabwAu81p
kVwZVRsXqMgcO0AGcsLNzp67BUA21+24E1/v1oYovHt4oZsMDJVKeR6VCACD
s1ZBZ+jTag/w93qKtpCBvE95YL6ZIMiiD37F6H+/lmrO/bXsPRnELIwK744R
Al4x75KmJrNqT9V/S128Twa1x1hVVNdFwKmXKVhleH6th8EHzok7ZJBsU9h5
P10UlK/tNurNKazVzRI7l32TDDTu1H+g6ooBNbFWS+3fRbXJ/AbWx8+SwbsJ
p8NW/uLguovI8yc7pbXqXBNFbfvIwEVMpEX+myTI2tVUlm5YWZvrHO3Zo0sG
OuMud10vSgF7unJ3md1VtcoXvk/mKpGBrw2dzTEOaSBL0Tdk3n5b2zbm0Ra6
iwyen1TwypGSAS45Xl4VBrW1IjcmHjr2ksDiVxSZe1wWfP3k9tGh4ENtcnZI
ZKcHCZjte2xp9EwehFQqtDnVtNX+zKshUK1I4A1Pf0PPmjz4SDihSBlvr53x
/XnP7wAJXPcbGtA3UwCS7OU2xpKdtRHPkf60BAkQzSQ09k8pAOvYyZWXNd21
x4emu6o69EHPx68eLspKwNGmveBuw4/aP5Jrf5/q6IN9Xfv3cdxXAb+/MDYx
14/XCirTP3OQ0Aey2/ecI0ZUgPMPDsnnixO1gUluhU0s+qBz4fqdkj2qYCnu
7Jyt+mStxB3s1u8+Iljzu39H/qMq8JL/+I21fqr2M5MVl0QEEfye+pl1eUEN
vHZSkegzXah966QcmgH1QJjI9HQfaQ+4dYClJ+j6aq2p8n8vjxfoAbW22+um
4XvAn/rv6wYx/2qd4zQTv9zRA62r0Nv90x7w+dvYw7eZa7Xy5kzBLHZ6QKi6
lTXmhCZ443Tjx8MfG7VJdXwJpbMEMHhO60WynxaYX9f8pH6aDl7dv7b4dxcB
PJ/z7v5H1QYBRQshWTYsMESs6l+Tgg5w9Gi+Z/ZGF5gQRD8revLD2mMLnDks
OqDcXXSxs10XBL5t7mxb44dLa867Dk9qgxWGjfsas7pgrG+Vvi9NAHIahArx
PtcGpmtzOWbyBCBYs0MhdwjCzvqGjTxNbXCyc1RSN5EA8JdHhyOviUCWiaBU
NidNQO3+UH3ZVg/8q7pfGBkmBQkCCvMb0mrAYQcMMtUTQVwD77t9/Uqw4bKU
3NB3VdCSu1zzr5cIZpoZwmT9laF8bHNweBqNaxWIvJ4lAqGXbW/j15Wh3XPq
mXVmVWCTnBgQIaQPxuSDO3fJq8Inx0RiZn8pg+e3X9H7e+uD7yr//clPU4d8
rumJZ3IVwc31EoaT//SBSUjbhY5Qbaj4xOvO1qQMKH5xJtlikQQqT5aJ32Ql
wRvWgx8DH8qAxtmwvynbJJCztldt9DoJCqvp1dRbyYBjRgIfsjjJAIW2JS4u
kuBuXvHszsvS4NN69K41BTJ4P720rPaTTJvX71wjjyTw/aO8a9yGDAp0Lf2D
+gwg1YuQmGwkAgoOvmh3f0YG/KUk9xnp/VDt44dM9ifCIJeZYWCwnAymy+68
2v1qP/waULFhwiIMOLO670nVkIFXuUAFt9wBmHykoVnyqyDYkQoqG6f5TaPe
jMHutwegn/g1CTNHflDfdvHw3TmanoOdDzfnKZAtXTmGuY8L+F+3djqsgIGJ
drLJlZRDMCdb2on3ISeIyPo+P6ZK4z5I/PLUIVi0WVnW68oBLu0P5jbWwoC5
44HO+EPG8GvlFcXCMVbw6z5znSnN70+Tb6ft2jSGw69L4lOnGYCEU36epxkG
Lkk+xB4GH4HL/4U/aiuhBxUes5a7aLnkVNxMn9t3BJ6NFBwcPUcHtNL26AVb
YQCovJBrMTKBjuNy4TJDGxSfYP6wFFpOap3yOfKS1RQW/Vd7rnF0kaIkLurS
7oYBiXUnr/ZnZvD3eYlD5z7NUWJKrm9GeWAA2/+fpregOczUrbu09uk3hdWv
7PGqJwYc6rs0iJHmMPr+fKNxwxhFKS/FTMMbA67iLx8fXDCHQY9Mz9UmDVHa
/95flvXBwKy8XXuq61EotWJPfpzUTfE3bXvYS+O3mbLoFduOQgUP+YQciQaK
5Zf5Q5a+GLjJ23Ntk2IBI/zL7aUGMyi+s/t/36bxnxXsUeKVFtBx5zdBeryO
mn2lKD6SxgMt632jVY/BBIXB39MBHdST3qWqRjSuoa1zBcs5BrVVZgzFLvdT
55guNLylzfuige/vXqHjsFTUYSQC+0mtb3rmvULTv7z6YW9K0nH4eXO29xA2
SX3m8YbljxetD/0PjkowWcKMt2o5zeRZ6s79uNJXtD68eLr5IotiCXWdCn8x
SyxS64+8dtah9U3naPp8fbglVM21v4CL/aW2fXKdvuyCgUXZd1Wy25ZwVveq
23LrP+oD+hVHRtr3kejN199aD1rBYvH578PRG9SEVpuvJva0+h5NXRbxVjB3
ksVvOIgObY1c+rFiTetbIzEIF7WGvA8DmN0GmFHPnPb77wADnWfDP+SBE7BI
+VHwm2M8iN7QN6BLAAP2n6Z/NNSehL0tpytW1njQe8Ltb192YSDff1ZZnfcU
FC9n8mUs4EV04+9Ug1gwsHmUZznI+xR8Uu51IXKdD5UoD678+UsGFJeTTl95
bOE9abenvU8EUTw/hsd0kQFd3fD3ogA7eHXfFXHiLzEUkxP/QCaSDGwTg19f
9nKEdjNB7y4niaMmFRmWlCAyUA/Oq5RqoHGhOjoPogTSnD0j+86fDBgsC9ab
1JzgsVe8M8aRkigZSa3qW5OBRdjIb8KKEzxV/kR1g1MGfb/2XWlIkgwaPMo6
fdNd4B7MBBVnyKHYm++DuIpIoCwksmaa2R0efDF9KD1WGXlRfdTF4/SB3oGa
Dr9fXjDiJxfn4VZlNPSwgHQ8SB/AKvI7NiVvqJ/N41ctpII2Rb1NzTz1AeED
M6+2tzdsjB4WncxXQdH0rgfS9+oDYUuvTbFxb1issq/UCqoi4dH9C/EzRJAj
mxEYNO0Ds+zfFb8bU0e1m0c/CQAi4KPG003z+cEct3t22hta6BwKWNP5SAAP
hR/NSHWcg6kHAiGdpDay/Pn+zMvnBOChkfGdIn8e3v5AuHpgrzY6VVhNv5FC
ywW1jLfMgedh9VS/zKEQbWQmxpyz5UwAtcqxkZfFLkDWAqGmE8vaiCxsP171
Rxew/dRduKF/ETqmWiRbDesg4YkSr71CuuCuKa1hGZdgXMvwnU/3CWhknNX3
OqYNTvu8dBfJuQKn+sgZRa8IKOtVg1WhsDYYJf006/12BYaybHNYthAQN/nI
WzCtBVKSmONYuANhXm5I/yyjHtLV32zi89ACZ6w9D5ZFBML6d9c9nM7rofcT
vrz25pog7ld4jIlfEBwbfDRcRyKilXvi2sRdGqDKUvIul2UwXB3PKynJ0kfp
XdtIxEYZeGcuhe5cDYUShpo+xS/00bHhT778LMpAOyGNuxiGQn3F9GIvpI+8
7xikf6lSAhc7b/3qZg6DAQrrU7t+66ObuziJZ8WUgHiLzO+K+2HQjswsvIdA
Qs95gpTz+xXAoYkDQ1nvb8CejBPSF96RkJjslxcvTsqBY8daZ63uRsAnfCci
XqeREWWG3TSHIgaIxLOvJdWioE9Kz8kXj8hIeHtYW+eBKIhJiNuyPxkFjc25
H9FyCNnIsdRcWxYBUY/iGgYjouARoLFruZaMRn3s9fQLhcH1rHe6H3qj4HKW
7YGPP8kIdErJprAIAs3axk90CdFwPuyED4Mchp5ez3n9O5gbCFSdWMqii4E7
X4XbYlQwZNZnzFOgsBv86F/rjtWOgSF/JuU+aGJojzDi52jjAv3b3WXILQaK
h+0z8jTA0O1WoRPDihy0dV98LY9ioO+vx9H7j2Go5NH2M5WvTKDF3W0i+3Ys
rE0SvXTTGkO7mRX0sq8yAr4gyUuM72PhubvPvoacwlC9reFWjwwDqDyu3PJu
NhbOdJ8vS3PGkGJOitmF8W2KxP2os5I2t6FBgi+j82mazsiNCmbVZYr/zV1R
NQpx8MGPDl97fwwVnPL4fOTaIiVGPratwj4OijlKrnGdxdDHZ0xlL1NnKaXm
c4PbSXEwp9+7/Oo5DMWv9apf152keEd/2PWoPg4OrGUlZ57H0LDbyTP0HaOU
+HvDNSnrcVBc5npiwAUMXch6WpI32kc5+i34aJ92PJzPvPeM4SKGMpJTildl
2iiriaKSwb7xUCPdeNSUxkNu4beDQisp/geKk888iocFGjX6JjR+lLX2tOad
Smo6+znmyu54SHT/W7hFq/9jbhe5QKGN+n1pe8hm1x3Iq4AI/jTOmSrobTnR
R/1jYnfT3PgOvHe8djCRpvM7T5VyT+codWOx2Twz7A4Myj9ZfJr2XBFPOfgt
9SapMh+4nux7cweGfficuX4GQ0IdWQlR92ap8t/kfxnO34E3FRReHaT1bcI/
R0gnZJFaNhhyI0UlATqG9p7Z8MaQQsBqwaXvf6mOOU6EI9kJcEjVUdzfk1Yf
hUVU3F6jptXGixZ9S4BG3qKcd90wJCr9TrGEtEktPnzgpwdvImT1jW2md8BQ
bndjrFUjHbo6kfrmV2wiPB5pNBtmiqE6egHVSQUW9OFiRwx2LQl+Z+jY+imG
oa+K37ge+vAgH3myRon+XXiy2TPBRABDFoZ1KhtMvOjUSJ5Ols1dmBYdknp+
F4b4zgl1aubxoghDN/nygLuw+k296c42GT2ZD3zGM8SHjiVwhbi9vAvXrqX5
EIfI6K5AhHWajSAKjzpc914tBSoz/HRnuUdGU/KevUZEMaTFJZqUppoKkwMq
2adbSahffmjzyIgs8n/hJsBqeg96H6mvVM4gogOkUa6AATXkey3RI1g0Eyre
Wpilu0lEW4+9P2gpq6ODY6/O/zicCU/YV+x+4EdE/157tj28qI6WPV6z3riS
CbPyVSX4DYjITbkyOZZBA90Ze7oU2ZYJUTxht1ivHvpYkXwoRG4PGtiEWNqd
LHj00Z4fiE0PMZInShWstZBBxxPIsTsbiicdj87dp4v6XB/33KzUQSYmUhXm
h3OgoNbp0ZPSGihdYF+5/B4iMvJnGj9ilgfdT4B0zx/qyFXkp37oQSKKSfTM
mfPNg8bWO39U/1NH6TsdZo/siWjjAcm6+lYe9JCu9vm5Sx3Fiqoa7btFRLaO
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
B80ENRY=
         "]]}, Annotation[#, "Charting`Private`Tag$25871#1"]& ]}, {{}, {}, 
      TagBox[{
        GrayLevel[1], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
zjf4mToKZzPeCfyogf8PsuohWw==
         "]]}, Annotation[#, "Charting`Private`Tag$25887#1"]& ]}, {{}, {}, 
      TagBox[{
        GrayLevel[0.5], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
Sc4UX3VEutqFN+sYdOH/AJfMyJA=
         "]]}, Annotation[#, "Charting`Private`Tag$25903#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[1, 0.5, 0.5], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
         "]]}, Annotation[#, "Charting`Private`Tag$25919#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[1, 0.5, 0], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
+1nk/wGsM3Fd
         "]]}, Annotation[#, "Charting`Private`Tag$25935#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[0.6, 0.4, 0.2], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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

         "]]}, Annotation[#, "Charting`Private`Tag$25951#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[0.5, 0, 0.5], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
U/m+PXDsqyr9uORFxLg4cKw4MQAj/XR3gggKTvD5Zey64EO8udj2Kwr6zRHf
1NIoFGz3uZjexedLCFA73p2FfuZ6Ue3xaBTQWpHny0K+BMfsje4z0OP2lY0q
xKKAfjbxnaiEL2HRcP/mKehXZzgVi+NRMJQ41Rus5Ev0lP6tHkCu/0GsueAy
CuT3a59WN/clzDtoLq7QDTti3udkoeChStqR7fG+RPnuhnht6Ic797Kn1qCA
SWk+ZbLhS7QF1vkchB4cpqtgVYuCz6rXf5T89CWOMxKMNaHbOvKb8dSjYN00
4AzfFjrhHPQXmyr0ggb+pJTHKBB7dlZ/XJBOZMR6XlSAft3DjZLchIJP11Ch
bHU6wcn2I0oYemiB4GLsvyh4dvyrpV8QnTgn8sVFELpsahKn0UsUjDPqfsxF
0InBLS1aAtCtvDH5n69Q0EU0FQVF0wn6+Y7PvNCjq2Ldzw+iIMpMqD/6Kp3I
bWHQ2aB7WJk/jxxDATa7QdSU0QlhjBv8Af3Dwuy01jgKQthP7jatphPlGQ5S
FOh9lja/1pkoiFzrT3jTQCdMR52HvjsygJxGoEbENArShYYVODvheS0Fajah
mzyUs9J8h4J7hyWDC3vpRH5WTuoX6Bpv8ukr71GwVe1+ldFrOrGnafXEOvSO
kunY6jkUNH8amhsbpxPL7RImq9AnRRazQz+g4FHaukTMezrxPyjAYU8=
         "]]}, Annotation[#, "Charting`Private`Tag$25967#1"]& ]}, {{}, {}, 
      TagBox[{
        RGBColor[1, 0, 0], 
        AbsoluteThickness[2], 
        Line3DBox[CompressedData["
1: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
cOoO8PCfGNvvegwMzUbbf5JhI/YZH5nO8KIB368J3N35BQPLD07KNGmzEVb3
j0TF+vzFj4YOfWJuJPcfj8v7TpyNkHnCev5jzjru5xdm39aEgSv7psXWXdkI
vyVjy1cCc/gtHd0+z28Y8BV20QrLYCPCgv89cfSewU8EHVlsI106Xlc29w0b
IUS35LUn8xfuNWpdodqCge1G6YHOSjaC69gHBq7eYVz33DXVANIFp3ydWBvZ
iNefOvjuy/Xie58YWb0g3STkeJZFDxvh/0aQeSjlO25S+k+gkvRXidKFMZNs
hPS+Q/IRktW4wVvv+5D0iGGx6IZVNmJlOUvDTC+HuiKu+v4t6eXP74tzM7IT
X4UoMd+VG6jDLmLXY0l3TENRLvzsRPtHywP8OZ3Uo0Gq64dID1Gje1skx05U
O0p/zNX+Se0R8RLbJL/L2eH5C0Y9diKmxl0gQ2GK+v2ViLcQ6cJhyiO1x9gJ
yVimK4l/Zql3X2D3b3/FgOYViqaSJzuhkSOeW+gwT107OOIx0oyBR8ZLBx5e
YidObZss6EmtUK90KvGcJOPMgL3svpzITujC9g+vHdeoj374TVwj84LL51T9
es5O5P0E3+lSNqha9YtKqWQeV450Nju+Yyd25woYn2L5R310ee/GXTLvt/zp
Qm2b2InM/Q5juWt0KOrj7vEMsk6IVKmNgJ0chKUZ4/CuPjakqz3Eh5dgoDrT
eSUsnIPYLmXSGVhhR/fYDpwA5HyqtjDSrhbHQbAHB/yN4eFEmytfhbSKyTnU
Zml0PJWDkJXVuVOSw4XCi2WNuwvIc/c1/tSjhIOQOc8YVdbLg7x1baX3ZWOg
yiLm2r05DmJGO6cuEwigISbfsaI7GIh19HAtOstJmBnuIGdHAdQz/OVdQhwG
jDP9Ul4GcxJ/ZI+r5joKIgeWXpXjtzAgOtPAkH2Tk+h+l7tuHCSEGm94Wb27
hoGaoyce5WVzEq4FOQ5cOSLoo4jVg9gAcm7dPh0y9JOTEKYRrG/elkDHE8++
b7XBwEeXz0P3VbmInbr4raKDsqjMw1hvnB4DwRePKnu/5CIOiwcaet6VRRYF
NFG6/8zBgq/SF5pCLoKxq3P9X4ss2vLISI5YMgcl+x1D00u5iG6JG7Erx+VQ
r9B/w3mD5qBwHydz9ycugif5kdR3Z3mkXf/0zJlic5BTMrLlNcZF3AoLol/z
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
E/8DGJOMHQ==
         "]]}, Annotation[#, "Charting`Private`Tag$25983#1"]& ]}, {
      RGBColor[1, 1, 0], 
      Opacity[1], 
      SphereBox[{3.7602764461648875`*^8, 
       2.1228367246121946`*^8, -0.00033701630335639706`}, 696340000]}, {
      RGBColor[0, 1, 0], 
      Opacity[1], 
      SphereBox[{-4.426906363459232*^10, -7.756960159958412*^10, \
-0.0003350285087086474}, 696340000]}, {
      RGBColor[0, 0, 1], 
      Opacity[1], 
      SphereBox[{2.2621479890588303`*^10, 
       1.0705644414004669`*^11, -0.00034059650858641363`}, 696340000]}, {
      GrayLevel[1], 
      Opacity[1], 
      SphereBox[{
       1.2509308777009142`*^11, -8.85246510396738*^10, \
-0.00033214551246039655`}, 696340000]}, {
      GrayLevel[0.5], 
      Opacity[1], 
      SphereBox[{
       7.210314962559996*^10, -2.5376048040695172`*^11, \
-0.0003052183151702009}, 696340000]}, {
      RGBColor[1, 0.5, 0.5], 
      Opacity[1], 
      SphereBox[{4.5322956612456256`*^11, 
       6.990326688255846*^11, -0.0007080976173781686}, 696340000]}, {
      RGBColor[1, 0.5, 0], 
      Opacity[1], 
      SphereBox[{1.3987358938279507`*^12, 
       5.957856919621531*^11, -0.0025471089696575224`}, 696340000]}, {
      RGBColor[0.6, 0.4, 0.2], 
      Opacity[1], 
      SphereBox[{2.974999517555666*^12, 
       4.281312536629322*^11, -4738.532374666896}, 696340000]}, {
      RGBColor[0.5, 0, 0.5], 
      Opacity[1], 
      SphereBox[{4.490334897434949*^12, 
       3.421505113375333*^11, -0.002673382366565245}, 696340000]}, {
      RGBColor[1, 0, 0], 
      Opacity[1], 
      SphereBox[{1.4800229688820807`*^11, 
       3.403066722591876*^9, -0.00033732866525228964`}, 696340000]}}, 
    Background -> GrayLevel[0], Boxed -> False, ImageSize -> 800, PlotLabel -> 
    FormBox["\"2 anos - Gr\[AAcute]fico Tridimensional\"", TraditionalForm], 
    ViewPoint -> {0.7615460540258566, -2.6002359153263592`, 
     2.027022642227315}, 
    ViewVertical -> {-0.07174898361327253, -0.012693248677717421`, 
     0.9973419497787446}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Sun\"", "\"Mercury\"", "\"Venus\"", "\"Earth\"", "\"Mars\"", 
       "\"Jupiter\"", "\"Saturn\"", "\"Uranus\"", "\"Neptune\"", "\"Main\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[1], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0.5], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.87799870106597*^9, {3.8779988314471583`*^9, 3.877998854676134*^9}, 
   3.8779990206202965`*^9, {3.8779990764983044`*^9, 3.8779991044605136`*^9}, 
   3.87865244697666*^9, 3.878652519874375*^9, 3.8804638186405945`*^9, 
   3.8860920868811817`*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"b08711b3-3ce7-45b1-bc29-4236e324bfdd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     CircleBox[{0, 0}, 4503443661000], {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJxdk2k81e3XxVWmFKUkVBKKDEVSRM61osg8hzuJQlSGSlJShEgZcpCQIeKc
k+j8TBHKrZAMUYmUIVIZIuQ2lMf/7XO9uT7fF3t/1t5r7U1OnubOizk4OEQW
cXD87///z6Y6w8LfVp9UNwfa8fxNov2QiX3va+tOYkZiWsf+1NM6Z1a53su8
TFYVXM7dfG+ApvfvfK+z7Q3iJBvkk/RnlibySX5NQxydNB2hxbhbLSN/TA5N
e2WmkK+joi8DU9YS2b0KewwVMsnL6EUPXlZKkjMuzhvFbZmkYmirxr45eZKy
dnbO8mE+2abqZzI/qEImHdKCfeIKyN1cb5/DFhokXd1mfnighDCp2Bae7ftI
+PzyK2X3y4l4/pK28bu6REbkluvp48+JumrQOqvFxkS5FHsy5atJRGrOU85y
c3IrMLd0/tArEltg2PLl9z/klsELLYnyBiIWmqzYWX2UhNmZNXiymsm5t5xM
uYFjRPGFSIgI/S050oJQZYOThFl6avRz3nsiNzrVo53gSfpX5N342f+B6Gi9
WOcre4ZY6FRbfk/7RH4NHpZ6G+1LrpZk5Q2s6ia6UiTxavpFssVVPNvfqYfE
dztK7hu/TGwtC4Z4t/aRcxeW7pVgB5HwBM5b0RY/CNXFmVXVE0E4JLJFpv8O
EsUAhy/ityPJn6vzLy4VD5NPA2T1naJownVMO7g/e5ToPHeL03wbS7hWPFxe
EjlBbmavtrCWTyIh2qnu1XcmSUecZvtnWgrZ6So8a8P4TfrbR4oqPFLJq3H9
+bWf/yNNPuV2fwQyyN2Xb/ra4/4Q01Vh81Vu2WQPrY8m9PYvMU7u0ZrqzyHr
vSdDTiznAN/+JcdqvJkkz+/iyQG7RRgMl+rzeJJLFHdXW/aKc+KnaVbT3TA2
EZVa43F6Hx9ea4YEmN4uI8Y7XXebySzDxJ3JLQGzT8nv+0vFOFYuh8Vhz9lk
rwqy08aj+OkQP0wmc3Ooymek+vSLL03fV2Lp6i5JMbFqoqS6tHqv/BrkenBc
FRd8TXzp18Z7ytYgzXJq2dftDeRMnZ67i7EwGpOpMH7rRmKimVwl4LcWBj0c
Hm6Hm4kq/cry1j5RfK/Rz9cdbiEd9bY+bWs2QlVQ7G1G8wcyG+ynY1m9Eezr
Mp7zqe0kIlKrwGqPBOwExynqbAd5d6Ey6uywBOLiyqINZDtJxd9zadVHJLG7
Uu2SaU0X+cKXph91ejMUvXz/Zv76QtTqbrpa7VEAT3yHesvYMIkJ4uoRylaA
UW+jpXzyCKl/QR1OEVIETWpZypDeT6JwQyeL95cixrjUuD9aLvjKNX9Fu2g7
quQDOI9Xj5Er5b3rBNnKECv6x+RP1wRZajertZGpipzXAtzaa+bIEe0cl94h
VWRtfPTLkD5HnFuYW3iUdqHudrbpc6E/pO5I1Eqf4l3gquVv+Cn6l7hxVY52
vdqNk2yevbViHOC6oj7TuWQPpDxDd6TbLoYU512F1+VaMPnIqEp148HwpI8P
zzIadq7bZB1XyYP+CE1mig0NAoPcb0yFeXEo/J5/xwQN0u1zButf8qLht0Jm
3R2CJN/4UZHtfIj6b7jh9ydgVm98434ZfmTFcBm3huvgYNN3r4wOQXjwrzm7
yVkf3WPFk/RiUXCEFwzO3NXHJv8Vhis4xVBS5pTE/UYfahsWi4iaiUGxMMWt
YK8B2r+lbPg0JIaHcpq6J0QN4TclfF5Vfj2khkZMN3cYYVGm1uK0f8WhG7H5
lOEzU4xPDtSXqEjC2zipxuSzKSZm0y/5HZNE5LSax8k5U9xamRgdESuJUsmd
wYNqZjhUkeSWNSGJzWE6MgKUGdTZLx+Wlkphn1/7TBvLHK2rlnTXWG9Gol2l
jmWeJT4wgqvL3sjC8H5Xo0SjJYw29EYk8G5FzdfXnxYNW6JtJkKklrYVU6XT
vovkrfB4K3/11rytaHR4sPF3thUK1GQn5mPkED8bZP44yxpdPWufhJ1QQOKq
i29N8m1w1zPom852JdwX6NLMfGMD1jfBJspUCdFdpxKWj9ugTWcxw+6MEv6p
TxMQ3WWLlBbl1+ZFSmhu33dGotwWuzvnZ+aJMpTrHDb2NdphdsWGvGnHHVAo
8RBascgecZWHRva078Qrd5H+tzL2MGiOdBrmVkXSj6b5fGN7RG58vJJPVRVx
BnubWMn2yAoPl4q4rQq/JocahvoRNNNGVUfNd0FpXHo95euA1JMWwSWDuyFs
fMq9NdUBBR6XfppsUsOsH58Hb60DPrjctA48pIYlfFVzh5YfxdSDIweqXqhh
/+XK7Rfsj+KLwYDKLqY6qq9PvLu2yBG1qppH1BM0YFnM06Uo7Ij97/kFGB80
4NyadbJbzhGDGhLC3Os0cZE+dPiIpSNcW7knMzI0cfWdnnZJtiMSh7ZZKlTs
BT+jUSz9qSM0lTPb63i0cKCz4X30G0ecr1i9JdJcCwGb/3IEzzpC9/aq1cxB
LbR23nj+2MQJn4qd/EKECbhElL1fHXfCNemI14cJAdvL7f2AnxO8CkPrv7oT
hGaKhW7PdIJ7i/rkpioCgV8DCd//c0ISv3ZVoh9g2lUa8yzjGPz0VcKUV2hj
8MOGwKTiYyizrU95pKMNTj+GxvnXx7Dd7M71+YvaEDrvv1nu9zE0E+/F4j+0
MZOcqxR68DikJKev6bToYJgw1o39PI6XGclC07UHcIERP1fI6YwSyZLgPct0
wRP7bOaCqDPS9B93qhjrYqhAOWh6nzNePRKvpb3XRZ3Ew19f45yxjPUs3WxE
D64SLYcjNVzw4gs/evcYwN3jkitMXSBfZaryJtQA5ou64ieOu8AzU6VRvdVg
4X6LRA5HusCq1sjP7bQhPmj0ZezscUHyNVp6zwMjnH/Q8G3HdVcIj30bL1tj
igeJr/L8351ApO91nfECc0gKfjFkDpzGMnnpDbkb7PGRecW3fNQbrQlin1zO
Hce1zT3LHefOoX7D0SUcIu7QSg2R+KN+AZn89Py6J56wCr+4fmipP5xM1v6x
nj6DHI+zXj49VxBzVXSSjPhAfAOjskgxCAczR1YG7fCDHk0py/l6MOo/b3rg
ed4fqQbS4OgIxWWrieYHEVfwB9OXu66Fw8WyT0H8fCDKE76HFEvfxI3MK10H
V1yDveZZm94tUTBnpL9qbwnGT2RtGZGMwVaNsYzEhFAEG7XfV2Ldhqmykj5d
Nwz3uO3bIt3o4PO3Li+SvYGKc5d0DDfEo2lW6GHPVAQG7oQKvmxPAL93Cnrq
b2Fi2lvVtSkR0Bal5bRF4SDbfvpAURJSipUs5L5FY8rVVZj2MQUmV2ei9i25
jb7Myt0nuNMwoS3dWicdi/dmHSMma9OxtLlqZwboOHJz9z6+9ekwLJ6deXCA
DtFnXLEvJNLhfNBa+JEBHYrfjVVpcul4K1Uc9q8VHfeePi/V2puOL/frJfnd
6Tj777pZr2PpqLCYHZOPpSOzhvNgSX46bIZ54sy/0cHsnm5KKEzHDqu8V03D
dOh/nX16oTQdoS9frLIYp+OCOdWuVZ0O4zbOrFN/6ShLPRLZ2ZaOsZmZhDGh
OFgp9wwfnU+HZa/A1TPacdCMjw6JM8lAmorn47jsOMTLLtY3sczA0y671ZW5
cUjustTms83Aw9eU9xgVhwAny8prThlIPxD43utZHL5z1ZJgnwzEdneFtLXH
4WWakVtRUgZcZf8EyAjE43tBdGjZtwzsDDsVXnopHqMnXJvvBd/HjV33jXyO
JSA33sCxpywTmglR41H7EtEdkJ4lu+YB+uS6JF85JsFxYJvRPftsyJYu6f/r
kYKNN6bE82pykFRw+lxzaSqMbI3uMMWZiPRxPNs5lQaJ94snF59l4f7R1u7I
1Rk4wzVXc+PbQ3QnO1+bMLoPrZtVa08ffIRiPvnljRcyUcvru2l5Qx58z4ny
ND7PggSX8srW7Hz869v6LHZpNkiaUpOUw2PAapXtaVoOFKTbsqy2srF5h5DI
/lgGnhi8cjZRYONi6vxPrTsM5JjKWh3czkb4GoNGtRQG8vOTnu9VZUPgr3Wc
QjYDa6dtGmTBhindcJlQGQPS46cjeGzZeLJktWx3LwNp6welvoaxwZS+sM1s
BxO7FSK8+yMW6r/3/tTZzUSy4OqBvkg2opeliKtpMvGr00Svj85Gxf6uu+sP
MPHqAO+HvjQ2orYcaui0ZULU9+LLoRI2Pp9qsFYMZOJ36EEFoe9s+PjTcuwb
mVil8Mued4iN4GL+R3MtTKTcuJk9N8JGPrv8W3wbE9bMd0H9E2z4Bh47XdbN
hEBkoHMJB4XcHzMBxb+YOCfG65S7hAI3f9UWqSkmnqr0+mdwU9Btjn4UMsvE
EtUna28tp6C6dCWnAicLZitSTI+LUOC/emqmW4iF3+nkod06Cuf6L+oNiLBA
s95kZiZOIctww++O9SwU9qln0aQphD1/JHhNmoV2OQ7v3TIUQi7ddlCRZWG0
nFG5XY4CfUVFXa08C09GbmtIKlEYtG95eGcHC0/ZYUnrVSg4CYXGNaiyMHRA
uG/tLgofPTpDOtVY+KpQt0tInULSs48nqjRYeMehVyKoSeHk4pxN/los9PV/
j1pJo/CyqvUeN1gIDRQZWLmPAu+VudEj2izM8p74tmo/hbHv65yD9i/ozbxY
IaxHIdvhTaqHLgtqZnm31xtQiPoaWLLpIAsfK8sjpI0pCJcFmd7VX+gno/96
mxmFIZH0B20GLLTsyvHWsKSwNPxtWrshCzw2H27rH6IQm+bemGbEAl/kV9ph
OwqFYbpHtxmzULCeFehlT+G/UWnR4AX2jR23vX6UAs8pzd2ZC8xbu7g67RiF
12PL7GIWOMHRqvCpC4X0jmgX4wXeKxMp/tGNwmflpFOfF/rvafYZmj1Fwc3F
JVJngVXUZ3g3elFoCXw6eG1Bj2i10GGdsxSm+utiUhf07tqR+PrkeQoO5vEe
/5tnpXkvifOjoCfqpee7MO8+vcOpz/wpTDjcL1HTY0H+6mjj8BUKj9op2Z4D
LNw11IJRKAVxd9fynwv7HPe+ZX0lnEKtUFCN7T4WgnfZ9rJvUqhvbUtjk4X6
nStWiscu7H/ctWLXXhby/NwireIp7OzMyT6+4J/9UX7NyEQKggXH8kPVWdDs
avixOI2CaE/WJtaC/+UH5FX/e0jB/FDRzZuKLFTcorwD8inIdn6y37+QH7v7
a7O4Cij0DWrsnVrIF6d4T41w2UI+bzSc0VvI33I+Xj7tOgoeFeHjuWIL+ovZ
VHk/hcuZvrnN3Cz0jMyMim8sQEmybMfzT0wMOWZny8QW4NIlJ5b1DSZsZD+W
6HoWIibYbJnuGAOUfNsG2bOFeEr76cIYYcCBe3sLr28hfhzaZrh8iAExVSPZ
+oBCVHLUFrZ+ZaDxYn2IRWQhKMUUIbdOBhro/F/O5BYi/PbkmUc1DATefSc+
OFiIfDn+dw/uMTB4xET63c9CsB24zdclM7DfyPdc5XghauQfukQnMuA5cHCC
PluIlz+MbfzpDGhAz0N7WRFE4/86/3ODga3jAdseyRXhgweH167zDEy5yTUl
byuCtKfZrYKzDNzL8y6J2FEE+k1JXRVvBkotLI677ylCmo9VzI5TDEQO9W2Q
1y+C2N0D19WcGJC3Hp1fZ1yEjqn+qDKHBX3rE7fymxdhbZDgbpo9A+Ii+y1G
bYugUsLppGfDwFzDUote+yJwp+z/2mDFwLq2kcS3jkV4eJKLz9KCgbNb38nU
OBfh3FBAQ4cpA6otKXNP3IowKT2k5GTMwP8BXCQ7lQ==
          "]]}, Annotation[#, "Charting`Private`Tag$26099#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
QQbFTwsPdT+SkPLvlZL/Ehlmc0QGRAJImDPEc+ztWgO48Gn5W1lZEk48k1bc
8dwASBmHazK26eDuz00Mp3uGcO1xouL7ai2sCRok8fcZQsWX86Kk3Vo4VfLO
9rKyEYwlt1c/mdHElS+tpY1jjcCInfM9Q18TSY2mFqL2xnDJLMyplkcduW80
Se8OMYYzE9sbZmlqOEflrw66ZwwipZKlI+6qyJ1DjEgto0Dbmn/2qx4pY7Rq
tFGsIQUe0JJH89qVkH13+sPz7RSoIk/8+M2lhDJ2GeneWRTQyHcjO21RwPOJ
BUttryhQWXFzddAJeXxUwtzPNUQBuyuv3fMuy2Hbv/JgPwMq2CUeTtBvk8Hw
u5tFK6ypUBdzbMXlGWl89+yC/SMvKmxM7zInyUtjN4/0mbs3qaCeZuT1fbsk
3lrU+JT/lAoa23aPafpK4E/izjv7Fipsv5fT66IsjrVbojqyflBhmWD4FYXt
oigQdz0gbYmDD2/pTI0XxtONGdcVhWhwulL44XcO79Vfmzr0VJoGq3XCmbKT
/Ch2Z0/UXRUacJv337fQ5UMhy9kdIzo0EKI1nDzhshx5OibdQ4xokPQsc/5l
/DLE0J+yHgQNdP2Mv0AFF9re3idxaQUNhveW7pf+uMD+UuE0ILGWBvGzDcHb
GP/YL9Fk9f/fL2Kso64evjDNprWXsuesaHAync8ncvg3u9aAQRzczLGHalsU
nzjG7l46v0PNjgYboh6dLoJB9ssaE24dexqck+YKjhrtYev93ix+yoGzXssS
aI7v2SaknCPy22hgotVi+Kc5j71xrluYl4M3zfOV97ysZZnvvTaxlrP+vvXT
yrNnO1irlhrIdVtp0F94seplfB+rqwKaMm1pINr2qM/30zCrhWc3F/v/7znb
TrpxXZxgHY5ZN0nn2FsgpH89yeQPK6DF6+s40ODp66/Nqz7PsoSfmEktWtAg
RS5Jt/fsPKtRgPrZ1ZwGx8jqM2QxLsg6n3ppOYMGk/I2jWbd3PBs+bs7iwY0
6M4ldUQX8QBT7eGFTdo02D2xIZLrHC+IJerVf1OiAQx+Xp1izQ9+7aSeJkka
uN9oSDWWE4S4f4beQgI0MNN4v+LpVyHw3mItxJjj5JOQ2rh2oQjwugzgVB8V
GsWfZroFiMFzxiXv3U1U2GvK0M1Tk4DXR24GnyihwggESI9zS0KXkfy+lBDO
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
wMuOUg==
          "]]}, Annotation[#, "Charting`Private`Tag$26122#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
Qxby1Kqx+se14Yp4spvNVhbmJXVVm73Rgj8/i7MVulm4/Jni1fy9GqDurHJ2
4C8LY1Ye4rqhpwH/NTEU986z8Ns937nd79Wh+E+mfL0ygQ4RWy8cMVcHMWEy
dmoNgU3+iY0tzxZD27v7K84FEIgRU4d/aCyGc8lOIT/DCNzwfk3l9XhV2DHz
cfhBAoEeP/vNDIxU4MuakP8mbxEoLiqacviEIkxsCZXwrCIwn7uGR71LAd7x
htRs4hCYtm5r5B6GAoTdWhRR0krgwO63Xf7dctBgrmze+4XAOgmud7+ZcsBb
Kd749juBPDWCx5elyYJs942FNxMEFpsliFowZSDYL2Z7z/++Zw8Qa36fIg3t
/CHONwVIlDO7ZmTXJQVm4nYjAfIkylbIFBxOkoTQTdKZDotJpPfOhd+5JwHV
ps8c+rVInCzkP80VKA6xreM3V5uTGFX29eWFYhHYnyJFF2eSuGx2+bsf7sJw
eJ1f6nFrEv/711X9a0IQtos9zqtYTiIz1O14/iUBsA6TDc1aQeLnh+P6Snb8
cLjzXxPNicQTE1x5zv28cFihjZPgSmL43PofcHIR7PwzTizzJvHFWvrHpA9c
cO7e1qulviRa/i3grhmbZ6/W2rS9JYCKp3P6k4TtLLtr/ZWLJRtI9DF0Zkse
n2JP995TsAkm8bXETvOG5nF2baBGT+Imar7bOkWk3Ci7fIPZ8L7NJJYqfyqO
CRhip30VAqMwEo/lhOwcXjnILq659/JUOIlPPWsLb7b+YNMWFNKLIkh0Pmcy
uzi4h33uX/ThuK0khg5t7bvf2cFWyXctnKW0JhHm1D7UzLYeyJ9jRJLo1XJd
rG11Gdun8XGiNqUVL4q81Hd+xFH9UUd/Rn1eOXfRnZH7bznvcq4oaFD63LaK
ooLLnzl77q82NqPme/Uq9AQ3fuNMjyXsGqbWd+tHQlQs/SdHOvPteMQWEq+W
WC3kFPzh3AgqrsgKJdFIoE6VLjrMyVjmVbEvhJo/NDet98kohz/6z4zMRhIj
tPRcfQ5McK567MvcGEji4APYeJQxzQmKaTm0yZ9Eu173hpDBWU6FXMlL1XUk
SkL9wcH8BU7WJVpckxeJd89cvLAgz40oc0qX4U7iSZ7YgAB/HnSW7Py6wYXE
EPvNr5KvLMKlsp1lq1aRqBZCKz36jRc3TI3kDduTqLuIrFmlx49qdwyq/aj6
qD7rW/M+QgBfJPn9F0bV00KrXQ5jSAiTTl8/IU4jsXBZ7QIPXQRlHMpe7DQi
8eaxhuCU3aJ44E5N/n41Eq03GZIPp8WxpfO5XzIvpQushq4uSOEuyf+6jeYI
1O75Hff4ijRO/tjolD5G4I7eniWVy2Qw6lGrxJk+Ag8qRq7nOSSL7dNydy8j
gVaZf38ozMhjab5JKjwgcJngiasnLyrgyMNlIwW3CUxyv3SvgaWIimV/3t3J
IZD8dSZ3/04ldD3GW/BuB4HTm/1UX/xQQTEvyWcHQgk8sCU8xuyoKtYXlbj+
8iXQ/cOBJCf1xagh78YlCAR2YGbJZZ8l+GiLkI+vBIFHWd+ur9qojr/OSs5I
8xAo51o2s7xUHR+UkNynRlkoa9y/V2xGHXk3Hat91c7CEPXXnzTPamAG92T/
jsss9NNe89jgiSYu2vbxGPsUC81u7/pRIaGF/mvfF70/xEJivbCihL8WLjsp
qbMqiIUieusvmgxpoXvp8YCNS1hoc+qX7LyyDh5rdQ/ef4qJxxXkwlZu0sP+
uqLyyf1MbJt4Vzt/Uw9N84WTbCKYuKxue/H+IT3sTfWJ1LBn4mnezvSGA/po
9TXb12eMgTHLPbIPnTHAD483PypwYWBJx+PTQ3eN0OHS0q8cFgPPWajM3h0z
wgCLyOuFGgxsVQncZEYYY9aRXb86RumYor01x7vaGH/ukN72NouO7goSbc4c
Eywpdo1e2WaJyldzg51rzPBeqJEGs9YSVQrfLomZMcP7xH3JsXxLbHyfvjNf
1RzFv5++0R1tia77MnMX+ZljlrRZzn4hS3x9dcH40ztzfLuk0m3YzAK5rvJu
La2m4RKvqzKjMhb4Xci9RLeDhqm6gyZNEzTUK0n7EjNGw/UbFg78qaXh05mZ
v8dMLNBIlMfKZDUNR5cbup7KsUDfrutDD/zN0Wn8d//INkvc1ebcutvKHE9n
ur+tSLHEqXfZh3mVzNHlIuv30gJLlOtdmapXbIa9LZFxVz9b4umN562ULppi
/rGHjuUr6eh3Xf3PgU3GOMhj/vKeBAPtK0/Rt6kao+u39rwGPQZa2TYVibYa
oX1z+XDWMorLN5VCfMAIzY4Fjh7ZxkCHwval1iqGmH2HOb+1iYFd1ZPvJ2v1
UHn+8bjTTiZGrxK1No/Rw8LnurtDkpgYf77HU0tHD7+fHIy0ymHilmWJastT
dLFX+kiHJjIxTd27NtJdB2krXh5qE2XhbsaHgGweHXzB/eTEF6qOBqwf1qWU
a6Oqz2KXPHMWlsxwwqtktfHTcmXC35OqS/J8hm+rJv672C1z9RwLj/1Nybx3
RBNfGMpvT7rOwueTwee/WGii3hmdaf1KFsb2nfI4eVoDoai+P7eF4vZwZOTJ
VepYMHvdw06MQC2Xnv8K/6hhUAC6z1Pcnn03sLxjlRpyjwnq7dQnsP+Ua5Qh
5Y+LXpP3kqlz5yH43YATqoK5x4zsNu8kcH93tGFjkzLqym6f1D9IYMq0klCy
iTKKvLtztuQEge1j+ekrRxUxveKw/GwugQu7Vriu8FFEldKaxqcFBO79F7SY
/6EC7m73mnArI/C3SZRm60F5TH1avb2Y6ivL4413936Vw7c+hsnxLwhsXf1d
tgbk8DeaoTDFeWMe913NfLI4slHMelsvgUL+7SXnk6Wwnsdl0TIeEj/IZbPl
fkmidr/nG1khEn0ft94Jc5LErhn24mIJEu+FlIzoy4ljk0znsKIqiYkHyya6
WkVxXEXL/58G1cdruda7nBVBIvAgzwk9EjeEcc/6SAuhlUhm6wTVZ8cnlE7P
vBFA9+6/315TfXiifJ4MPsWPpi3FM1sorhePb9M/5cKH28WLJOqXkYhT71OO
ifCi8t9I2XY7EtestcxwbOLB4W9aC7cdKE5OSEV+Os6N+gqXnzqspvp86bpn
0zzzHEdzov4exY25dUue6xyY4Rw/o/DtJMUVHo7tIuGJSc5SIbs6bR8S1/Zs
7CjZMc7hra9y2Udxv7dp4q7CrxGOur30iQyKU/TKxRMuIUOccN/0sC3rSdx7
S0Sl9P4gZ8FB/NcsxbWXBb+qY272c25WKwt6BFH5qvK8Pp7zjaOQ2FW7meLg
+NEh55PKXzgDSvoi1pRPeGIoots1+47zNC3w1ytKi7Y5T03WcDhbzc74aVIc
Xa6zeKfkvzNsl/8O+jEovbRRZe/Cgwa2WfOhnwKUvuYmMd0X/56dWndRIJu6
f1NzoHx2Vhd7PD+6coCab6W4O537Uy/7+E3n0dn//d3Zhrj8wz9/shc8xRqa
Kd8SVmh64snEH7bzdZpJILX+B4ly/F94htmb3vUYl1I+hyeiyrQ4eZR9cf/k
sxo/isOvH3utlJxgy3aM8J2kOC2fGSZReH6KbdQw3a9C+aai+/7jTaqzbM7X
d3siPEn03Dt79fq1eXbOxc/349xIjGRWrVU+ywWjruLlKylu7/hh433/Azds
0JmOaqW4bW/ZcMVAaREsLvk2pLGSRLee7oUIf17Y8rjOwQwoX/I8zX7vJT4Y
nzTZO2tDxTNCLHXv4ofg0ejTySTF/f7RBPdgISjNPJ/7zYzaD9WUV361wpC7
wEu3NSRR/z9RQTllUZjtra1y0SaxJI4USXsjDunth5pSFaj8ud0LzJOThDT7
k/sfSlK+7rGv/AvKjYibdYVepuo/5nnQqWRVafhv9oHp8WkCnZUtVyk1SUOu
0hSZMkxgz6IDHtG7ZKAiSqLF7heBpQryq2OaZSGZYyvZ3k6gW6hm3aF4BZAK
f52RdJfAl9+VPinpKMIQfe1Xq0ICNQLuO0S+VgSuir5z+Zco3502p2GhpQzH
fTaW5yQReEg1Z6dwoyqsMQn0VF1H4As780Kz7Ythjf+D7cdXE5hx0DF4Tn4J
rA8LXlRoS2D9vsQzKaFqYBVpYSCtTVD5ci5RXlCHWT3NZ8cHWPjY9JJ0hbsG
cBfVDZd9ZiGs6B1VytcATx7bT2eaWTh0ZOk6B0dNWNLlfPFoKQt7/zv0Tixd
C9xC877IR7FwJ7e9179OLRAZtOUXDWBhpHTb3Qtm2uBxqyLskRPVPyteA+2N
NkQEfC5cpcfC/Kiv8bvEdeHlv4PdBl+YuL7mffGm9brg2bL/yngTE7levLKX
uqULTM90h0P3mDh1cR3PFUc98BXUsHmazkTb9u8aOw/qw1FnW1vDpUyM66ha
S/9sCHu1pE1OpTCQV9OgwULHCPgKb43l72RgSFKD7bcoI7je4zi0P4BB+ZLn
PD7zRnDXbn1qrAkDbxRELNmpYgL608mVyS/p+EWn7e/zFWaQZL5zX/KCJc7u
Er2QnGwG60x6eL/1WmKfLi178KUZ9MUnshY9t0T75YVr3Q3MIW23dXPWGUv0
Lrg09f6WORhrFrppaFM83bnW4sVNGpw/5xv/x8oCD5htHC1sokHxB6ZSu6oF
ZqlNnPLsp4H62WcHTs7T8I2b5LCYjgXkZWWOBnBo6Cy0/oNYrgWY4/vlWfY0
fBxuXvX3kCUsfd675zXbHO02FbXF5FjCz6u28VfUzbEwZu5UzT1LcL3Y9ztx
3gwZASEnC39bwlV/7wcje8zw1AcTu5dr6TDwIXQ+Z7MpGs1ILwguZsDeW4f3
3rI0xqCfD5ausmTAFHf0udv/jHDgxLrNXqsYMLTIIiWyxAiPuFjmPY9lQPOH
Q3nyukb4WEeozryJAQq7n8rZyhqi5Dn/cPzCgI6l9GTN1wYY2PjBY/EwA0aS
oowakg1w6givgqkyE8Q18spd5vWRZZP8u3ILEzpdtk7v6KV8wY462bR4Jsh+
fMMffInyAVJlQwYnmaBtysVR8NbDZ1PD4tV3mBB3+6FQa4Mulned+UifZILt
2JqL/13XwTHRlpse8Syontv73cZXC4N9WkJOJbMgr4RW90pcC222FOplZLHg
zfqxMjPKr4rb+pPfKllQGrLi5SZTTYxVZp6oGWTB+VFGbBmXBlaGG15YMsMC
iWO6+R8q1DHQj37GTpCAVlf9d+/C1NE+teVVuwYBWu3mK/Py1JCxMf6TsQcB
OxQ3yP6wWownN5EfitYTEN4ea1GTp4oxfEoN1PM68OZzOa/mV0V1p4uydw8S
oJLoeujcG2WMPrOwd+MNAnw9f0eJBiviWeKf7kgZAQVNj36+fKqAMXK7J1Y+
JOBf7KJ0dwMFTBaav05/ScB+yYCYkr9yOCm1/ZXOIAE6Kfseftwrg2LZ2qZh
YwSkyF3enf5KGqO3aSzaOEfApe/accJa0lT+dt3eJUqC7xm0DHkhift6GH4Z
MiRckcn+ZqcmieKqIhohyiTkrD594mefOLL7tMv19Uio/N4hc9lSFKW1bq5T
NSHhOTf93WSHMGZer3/11IIEl5Hhj4sShPDit2JeHYIEh5Zyw8c6gijWdvIX
aUPCZ9epWqsX/LjRJSSaF0iI71A6v20HH2ppLko9upKEpFyL28FyvCh0yweu
u5KwqzT+Rk4gN7JUxJ+t8CDhG2fHiX4eLkx/mVGWs5aE4LU31ou4znGsF0SH
C9aRMLCcz+rPuWnOpf3HjmzxJ0HF+lFx4pcJjlJCZ8CX9STczdr1oFl7jONb
1LFbMIiEzLuVER+3DnO+68q96N9IQktW9KkNoX85HxTEvA6GkOBK49wtHv7J
yYtVEWvaREKBMNOj6FAv50XInuFnoSQ0vNRb9FaxkxN1gMl9cDMJvd1lN4dp
LZydO1az+ikNP5ek3D5Xzxkjk84I/O//zBKFFWd78tnLErPkPlPXXw3+5tUV
eMHeflCkNpTSm5Z6p1+LaGdfaXJKz6fGF3wiPH+vsJutqHv5RBY1v7vU3Olf
Kj/YjSlGZWxqfWtsawY+pf9mfwsYF8yj1v/FfMuBGq4hdlBX14XyDSRE6Xx4
/+nBCHv6WUHwfir+sYAD4/Ux4+yS5B/bp/1IKBP1b9tkNMU2e6fSaELl7/0+
WnTdtxm29kj2Dnkqv1JwpeZZzjybtL64q8KdBIF9Of7VRVwgHKH/VYDaH8Wm
F7dC+Hggh5v1SNKJysdvjtuHoEWw6tZp6dcrSLDdf2ClZDUvVJ/5MgxsEtxe
3zgppsAPss3XwiOXkpARk6f7PFoA4OyE11caCZ3uazyjdYVB/UJnv6ExCVyZ
NQOeCSJwZNlvdyNdEro/Jnb1dYjCoG7ugIsSNZ98ym+BNAlIXb4TdkiToG8h
JOQYIwkZNh8fOoqQcObcs/f+S6TgxHODzaqzBPzNTr79a5c0DIUvblAYJcAt
nda4UUMGzLbfu9o0QICFlklp3ksZ6Ni/2sz9IwEupvv5t2nKgYjPtdThcgKU
RwJfSbxQAFf3z0HeNwlQ+5IY5RSuCJZmL3vj8wiwaU09slJACYwbAzbwpxHw
vUW+Zj8oQ/SxRknDIAJ+PWnUr6xUBaEtNY7nvQiIqUu2ee2+GER2CYg9cSTg
4fczxpcHF4Oa2JbKTeYEyMpL+nppqwG/sQxv7SwLlsmcNZxpUIf7FxYUrf6y
QPMb881TGQ0wdF5SH9fNAukhzZJNQRogQ5R52j5lwYCD6LTKlAaU/mq++Ifq
h3tWbt7tr68FLlkG//gEWXCAuQCxB3TA4d493ZpxJvB5Z+rpNepA4x6taLKP
Cf6XltCuSerCYJv4RCKHCTPpmpzBa7rARXPt9NnDhPd+MT4NT/QgaqNIDbud
AXknmrZ9mjWAjfDgZtBjBqyKHzn6AAwhY82Jpw6lDPD/1GnrdcIQYkVaA7Yf
YcBo2MbWamkjyO/0NDA0YsA29pyBg7YxuN6/XZ+wgw454rYzN0hTMCtPFL+/
jg7SXHGJlXtN4c8FDlmznA4vxJ7273lgCt93VclbSNLBYUjqhyJhBq9v7z/x
8pYlfKCq9ouiOWQfoTVOf7aA96t2vJ0RpoGBZNFrY7QAkW/8V4/p0+BKQUW+
+Q0LcNqWqNu3ggaDfavqS3dYwNOiUAvtBBpY123QT+O2ALPv2gnZwzTwKT1x
4P8qOO94qv4/jtuyyd57z3vdcU5W901lSwrtRZEGURpGQyEVFQ2ShkgaohJp
3Pe3RANpoAghK3tn/c7vz9fjnvv5fN7nPZ6vcx+Pexao0kAwYG+PSTUdHtTH
pEXOWsGHL9d0BrrpMDn740dZsxVM/1nyKk7AGljnY+Q+3KL8grmSti5pDW4L
rgbNUf7hU0NPtP51itsBpwWENliA5DrXRpFABnjnO6UMqlvA189jL8qjGPCU
5AqeazIHfukkA+9UBrjpXDAdX2sOW7H69idkgO+eS5NbVpnBWw1pk40U16cZ
G4+ssjGBDSud/R9XMKF26T0v+SFjaJLbFND7iwk6FydFT+UYA83wH3/bKBOC
9LTvpkkbA1/wPx5ZLRaIW9494NFqCM+sKmh7wllweWQ2+WMqlec7Z+Sy41mQ
eTYpTJjyZ+ohAdmXMlhgd3a1zOP7BuDnJf+nBFlwVSFvI+9+fUhcvqyuXYIN
KYT9xkhDfXi9XJ1fRIuqw1cGREG9HnhsJvV7aGwYa2gT3b1IDwSWusT+XskG
3o0YYj2tAxuWD6nkXGIDTNp1F+zVgqXi0TNe0gTw54o7cbW0IGulira5BgEZ
a9YZLc3UhO+r5La8MSWgWiv22gsfDXB4YXxNaykBh33tam6UqUL8jy/9SZEE
KF58BJIKqmDo+6aFeZyAoharbLM9KpBYOPzp8lkCmp6WvDuppQyGNi+VErMJ
sGdklHfEKkDFziA56U8EyIo3tyjUycM+/smYmO8E8K2+pC9iIQ8Ts84T2c0E
nKaJ/SB+ysK4a1+e8hDV5xtstA/RZEHCMq9w+xQBzpmvOHHxC8FncCpwFy/F
wZHQN//oMmAfR+zNkqbmHLORLyRBGmxsNK9/UCSpODRy/J5LwSr/FJ2HGiTk
OjOqPKQkoGeNVn2GKQn8UmcU3j8Tg+SbNX+yqTl67X0x/8RmUVjzl8YbyKa4
HR/vt7dIGIrjliuLUtx16oJH1XuFoMPFzTeT4m7VHetlYzRBEKPJ/Rqk5jiT
/4Djn0F+GJu3zBHwImH+wZ2a2w/5wO32m+x6isOe8x+V2bt54YHxxZqdviTc
IVe5ZprxQJ7nAm3uahKU+yzUir/Nclg+ume/rSOhvv+UTo/3NCfK8rz0XYpL
TrT/eH58muQcPpp1w34LCbfGQ6TPuIxzeFwZNhcozikcv5Ev8naE0zTYWJdL
cdFwbMLMd/EQp26ucm9UEAnhoVW/hvb3cR7KfBKW2UFC37U9Vwd3dnHk5ldd
CAwhIXHir8uTLW0cus2+hYd2klS/ZdpdKWjkHD3VcsxzFwkrV1TdPplRy1mk
PvT7N6U1PPDAZXEuJzv7Oo29mwSty6K9FQOXubviTu52o/RyY7tLEc7vuJmV
DVc0Kb1xRiDJp+Qbd29z5OMi6vvLM01+WVQ1c5cX/n4lTOk5/eyQ1UPtXNZj
25eq1P5fujsFtk53c9tFlxQOUOdtVFhxwlBwgHt/5eqs48EkJBNyah7Cw1yt
rOjEOsontOV/YdQljXKnO9fs66V8wEE8V2QqPcE98ndR0CuK+2bP0xycUqe4
2tICQT4U91+PfT6iojTD/auy6HDuBiq+U6OadzLmuOc8hPKeUz6ox912a3gy
Dz7KZ00lU5wvS1kj1VXDi5PyiyL0KM6za8e6LRbyY882Nd2DFOeLja8dN0gV
RL8pdNzqQvkA0WODNV+FsH39m/eTThSXW7M6F8svwFN5qgWeiymf9vn194A0
UZTN1n5nwyIhwfjY0YXfxHDDCyHZL1YkmFdIqR2Uk0CfTcVDJlS9dnkInQ04
L4WDdxtvqmmSsOMqv7PFkoV4N5BxUUSAhMPhCQNlbQvx3ANvVi7F7X8DnHjV
Y7JYJyI7KEj52sQ2XXd4KYe9Fy7PC3UQEPtdO1+UoYjzidd/KiMBq947Lu+r
UUShpZbn8BkB66XXR1/YpYSlgoWS5g8JGPbdu1QvRxkHn+17syyDgKeq9ZfN
5NQwbXvn4MVQAiTXGLTylKmhZXqD19oAAt76vjodu1UdB68SZ+v8CLjra+Yd
8UgDP/M7LZ60I8BQPK/mWLYWMh+WVfwSIuBl39f46XEtnF5wb+e2SWreWS9E
jos2OtUcsc7tZoOktO8IvU8bXyjSf678wAbD07Vfz9B1UZD365XAJDaYjSqb
+R/XxWXKKr7Pqeea7Xoz0V1fdFFfjO/+h2A23K7oWO0XoYdiwX1jasvY8LVW
R3ZloT5OrB+8Hz/Hgqqs+vkZbSP0C09Xf7CJBeZ+Zf+e7TbCCQGxkXI36rnK
OHi72XMjvLbvaE8miwUL33yWYvkYY2L3Utt4MRacMNbWKYs1wZG6uFjPQorT
/MIBtZVmuF7jTnLPCAPMtk9fypQxR4++3ocCPxngVZV3ZuFqc7Q9yrZp5TIg
5HV2+Pgfc0zUCnz5+ywDgk699U+es8D8b8uqpAwYcLY308b4rBUqPXgu7+di
DQ3L8kPm7lnhhTdcnVsW1mDPFj1y54MV6th9rH0haw0ncipVDi2goV9XFX1T
Ex3kvJxTRY/Q0Pnul/ubdtOh7ejagcxtdLw15TWZHE8D/WXlQZnH6PiVX7S1
M5gGoXtUpXZdo6PAk7XzC91p0BQo8/bwNzqeh7My7VI0EIr5qOPFscan3pXy
h9KsQLKOv+CcFAPbkgIK99MsocRlMjHciIHSofUb6wYtIHZF6UptDgNdfqsc
63poAQEpsa+awxhIedA3GuYWwIgKVGutYWDBOmZ5n645vOC+dOLGMTG67kbY
PX5TYB6pylySzsSrzl/uBrw0gaiGdNr5h0zMOOFjXn/ABLp7XS2PNzDRb9XT
xpG/xtDZz8l/acJCZ/7JBzK1RnDPu/z1bmShd4ZZQnyKAdh+mOgX+MrC8JW0
8RJnA3CfyTi8pYOFU0FjgU94DMBX66BguDAb//nQ5EVD9eFkXqRXhzMbVx8R
XW3vrgeFbc0tj/zZmGlnF/mRTw9SVFwSnYLYqO7ZRRiX6EJ+5NCJ5yfZ6H4T
j3jr64JPkKbm39dsbPt7hhE2rQ1L+i+u7KhiY2p9RFRCgTacTN0cfauRjcnS
nwwjArXBoOCB9u4JNlrm1KR8qNICudkwPdKEwHydDlLDQRN+HzTc6Msi8ITO
3I/nORoQfW3kDBsI5Jv1npSQ1AC/6fcrlqwmsMN7KPnbTzUQzw8LTooj8HLT
yDPVCBW4G6hj9fYsgQK+7s9PNihD8UCBNF4msMJmk3qhvTI4pwi/ELhHoJ/G
6KzXAiWgLzVc7fqEwJJzeVFvdypCTcrvhyteErgi5txa3s8KoOVYxcivJrDv
6ApO7WV5eP/VhZiuI7BzxMRjx4wcHIr/e12ihUC3Wyr/VW2UAyEHjxUHBwic
X8E3w2cgC5/1Ik13iJFIayzSdSyQhr53oa4fZEg8IC45H7RQGgJFKh36FUk8
l1PcWNUlCfWjMWEHdUnkUex07dojDgv/szrXakRiSlHSpKi1GFiWL/AUsyBR
2SVOtHdMBNpc63beYpNok9CbNXBIGE7rWRbL2JJYfNVimYqdEHCebdnDWUzi
1g926ZLzAiD2UDqJ7kRifZX5verX/FAit4OnYxmJ/VHHUzYd4wPJv47l/m4k
fshYsfaNIy9oSMh/PeNJYqiMgfacAA88vzmsHedN4r33f/q0T89yrk6evmOz
kkSVj5rt8xLTnHHivnynL4kt73+vil89yal8rXrReTWJ+7JCkiqzxzgT5g06
m9aS2CP9ObBqYJhznfe/J+brSfzO6irPXDTI+RNwyeXRBhLFB1fqxIr2cv7U
DTT0bCQxAuhekVkdnMfZNlt/bCLRugh+WjNaOP4rSn/Hbibxv3U8aonnvnG2
M/b7/qR0kJLei/aIt5ylKm4v/lKaR24+eahsHVfr6pTCY0onZKvHv+98y6W7
6AXQKB3q6C/U+f4bl69oWU4Atf6Kv5dXfl7ewk2KLGz2oPb36tL3nHnewV3k
GS3bR51XZyjvTrtBL5fxJWEJrCPx1OVRzxfOg1zVHxcOeawhUUhiEaNudpg7
9cnxmaQ/iZ0vW7WfFY5x71arCZ5cRaJvqAPLf/skN4dxMKhoBRX/+80pD1Wn
ubWCR3suepGo1s1c/rR6lsvcrpNq5U5iQZ6PWyGHB+cuS588SeWvTGte8+Mo
H740O9EOVH5bgodHhTwFMLSn7uITGxJrold8FcwVxORn2WYvaSRqdYXxLPZf
gH9EfpmtNCNxU5vc/vACEfyEJ0qvG5A4d2922doFYrjfcO71ehUS/1XErCWK
JfD+sM/6KlkSt/NXf9SXlELBC7JVY+JUvWkOzqylS+NN+/dRwXMEVlq+OrA+
QQZlDza3PxknMO3J1JQMxbq9O87vK+knUNGcX+Zc00K80Cy7+08Tgdviqu07
aXJ4UCVFSPobgWYxLvtLf8rhaLKk8dAHAg2nZU8sPyGPgh6n9v94RuCditiw
F3UKWGy4ztU9mcAc85v3Ag4q44k0Qycm1f8G73i5StoqWKqpUvj9AIEvGHIr
jlSo4N0lYnscNxNovuS4+xYFNbyeprSowoLAP+uE42wfaODagnNXD2gTeCm3
YrWfjyZWOSw+91uWwI+NtxIUJjVxd19idRs1r87ccCPtrmthUbqb1vUyNv41
GlZb8Ucbo7ZpcswesNHf5KbFEE0Hi+uHTaOy2Pj16UTn5mgdbCCPjG4/ysZL
PMM+T2R1serXghPhwEaBYSNbKXs9tBtbo69DZ2Px+JdCgwQ9lMzurEjTZqPY
8IrfIrV6eEMhlPtxnprfYzXRVoH6uFZ1xiKmhIX1hbugJ8EA6UbvM1bnsjDg
e7Wi22cDHD6zYcd0KnV941RdmLIhVrmLdp7fQ13fLGcrmWeIN5+4pynosDBp
tfD93W+N8LNcxMqrUUws3vtgwmrYBFeN/qgf3cbEsNi2lgyWKS7VvN2l4M1E
DflbidxDphiVPh3/TI+J8e/yAhfxmWFgmfpIZCUDh02sjlZLmOMNv/QbKiIM
bGmZ2jGiYImu/mV9BoPWyO5Ozi31tUSnO00HeOqsUbjT1YB+0RKZmyTc1LKt
MX3yfKGiqBWu/3FmZNbGGr3rO54ZnbTCiUuPUm9toeP00MGNq/bTcI3SzWpn
JzqezlG6LnSRhi9fpm8v1qdjaP2Yz/EnNHz+JUdluJOGUVnbMptGaJjy2Deb
4j7uKlx/Tmw3Hd8L5QsaBFhhx4k3zbN+1pj8ny/vGbDCvtbBszYR1hgry/L+
T8sKt7lEqjikWOOhvgU8DiWW2AYPIy++s8ZP+eQ+yLZABv2Dc7Q1A399lO1y
CTZDs/GDhzrmGXh7RwbPVi0z9Ig21VirxESFVW5fDOtM8QWHKDpnxcTnPT+l
njma4sLkzOTFm5h4v7h9UlTZBIPd3T0zy6g8MLr6r3wyRpr78ccLvzAxQm17
4s+jxmjG9+bn0m4mmiQ+oh/qNsInt/du7ZFjoaHmGsL+iSHmJD60VQxm4Zem
m+aHtxtiY7R80uFoFqYKjvf+vw6KTqekXz3HwpwYg20pUQbonnFQTI6qI3LX
fP9dB33c0K5V8VmAjR/LNav0S3XQO/9Cs18yGxMGT2JvsA5OyybQdKm6rpse
WB+lrIPcksbgu1TdPzn51ID3gDbamv5s6P3Ixto7x0MK6Vp46OKWCaYQgd/a
bOY+cTVx0wuX4p9UXzUKMwV/qmuiEA6I2FJ994PkSHd9VcfLkqs/mtoQqPHW
u53XQRVfjJwu+i+EQM2i/A8vLqvghpQ/Q2QkgfaarCCzYWWUsdC8EXyM4via
rXbG2UrocZxVM3qJQEenUNbzGUX8zSsns/wmgQtSDwYKr1JEz9IapwCK+96r
Nw18E1DAUCJXqvgVgRnPtGTWrZNH9etau8cqCDzZc2n8VpEc/isgPP9+JlC3
L+nmkc2yuHrvFxP+NgJ75rpe3CyVxpXMwtxaXhKbBI6xd0pL46Le2I21C0gU
zPbbKvFREnUG5xsTpUj0ZAre2qktju2N0T801Uh0n61Kv/ZBFDVes5lz2hTX
tY7/PbpPBIMbVcVSDUkc8Nbi3VkhhOJe1X86qLn9QXs08lCYIF4Ra/50g0Xi
ifCwAhcVAQySSB+Wo+Y8bT7pZBPyYUxJ/jIHBxJ/9PR/J0N48V9SymstRxL1
WoZjtsjy4KzkJe+SpSSyJfRKnu6f5e70bx5Y4EricFPp1eXl/7jFV9eek/Ig
MX1n27Z0+UnuDpkas08Uh3iu133PCBjj7uP9UsKhODXv+OLeuqJhrnjRJ6td
FPel9p3Ja+cd5F5wnT7lRXE/MWxWPfJ6D9dVNhi7/Eh8ntBmX2vbwdX3nvxM
UD7gSv36yK+PmrmpXuueOFCcvFG6nZXZ/ZWbKa0SPEvpQxP+qTbwhmtlm9QT
RvkErXc30/2G4jhpCxrZmZS2WJGSfqilnLNrTmR5LKVfHVz27QfxnfPdp5Ou
ROnu+Y3aN4+0cIJ2Krdup9bb96ebc7+9g5PZrbBuN7W/3OfzjrHOvZyUZyY5
phSXBQ9LeAn4DnJig8Mxizq/d+9g+1XhEU5nfcvj91R8dsmD95+cGuOIhMSw
v/z/vSuJF0UzJCY5Nio7la4uJzHAdveDpSn/OOfx4zp9yifljcZ6FC6c5dBK
tojuoXyUvcumq3Wp85zHa88ZHnSmfBNoGfmL8UKP8NrnjktIlO6/svHRaX7Y
a9UWqGJP4nsX3VHFTwIwEfvmjMEiiuu8tnluEkKw7dBxzxEmiVv2jXRKnFkA
HT5P/6uiOB7utdjs4kcReHR26dkmqn5WGCQINYuJwSLnXvX7OiS62V6ZvJ0o
Aft3HHl1lvKZ8y2l1eoVkmA5fuzvdcqHLvb72KTHLw18+17JRVA+dTalPb9+
sQzwlTdeWE9xXcjqzLbwZhkY24OiERMEztAyBlujF4K4QX+Z2yCBy9TX2DJK
ZeFqT6+yQyuBMXt+tsn5y8F2i8LuNQ0EJluGGPw3JgfHE3LtCaqf3L/s8zhm
pQBrF1RUsF8TyE1sGN14SwkO2LU8ds+g+ruO7njMQRkUflfwRJ4jUOdyyc/A
n8rg9k7t+NZ4yne3Xvm0Y6EqOPQtSj6+l8A9uW+FOdHq4BmYlf17CYGnk9LH
QVEDVqUNx2gvItDEd1jgX4EGcF9Wb9eluJ8yXh95tE0T7I1zG0PlCYw/Jv4l
UEcblEWePmO2svG5YYOdwW5tYF6WCU75wsbX6oKLnpdoQ6jufoOHb9m4I7e3
f+NyHSjv+7GCzGNja5nbtdjDunC27OK6uF1sfMdUNo+o0IcYRem9Cr0UZ8Nz
2xwVDcCn1LDVtZ6FnlcuYm2gAcRcbiiyectCwnnK34TPEH5JsQJ8rrEwka33
IJdtBLQ+tNvswcJ97V1BfnFGYLRbTCaWYOGe3j8ar2qMQEM8Um2tLgsf8VuN
FQYZQ5rt1a+ek0xUJKPKZdNMQGCwBE2zmJhu0FWzo9kE8kQ3uUICE8/J8/3a
a2wKSmOnpJTDmCjV+jL1fJkpiC/32boAmPjm6o7iyV9m8JXWWT3WwsCR3mfi
t2Ut4ZjgeUU3WQYa7y27lutvCf8ujQ+fnKR4Kd446pFpCW6iBrfim6yx3ipz
E3ehFQg3rH1dn0NxPWZwz/PLVtBdWlOBLGssOiN0encGDbbEeOjNu9HRLCPk
WHMpDaS/3uF7aE5HKJoFtR80iLUTmTWSomNwz3zBhCIdRHIdH0R9puETmT9L
zc7RoXLBKp77PjTc8v37ZfuD1tC5zcvjuKcVrhM3LNl+wRoOi0OajaUVBgdN
nt9w3xoqeSME3ktZ4cD9Rdsft1iDuW0j8e26JV7xyF075cSA/hwr1/gsC5Ri
J4cX8DPhklSMkO1ZMzwlGtVwUYUJR0/EKr1yNUP+4QrBZTQmTI3yjU8KmSGj
bNc7/g1M6MvhrboQY4onJa1yux5TOnLA+uAOEwz4XbXH0p8FFspji7KYRngK
7UYvhbDAZ81L/999hng4/mZdeQwLgBYZ3XnbED1r9oztz2ZBpvIv7iJ5QyyE
b06qfSwYr5fPVh7SR3nVaxGP5liQpLV/y9FcfYzT7z4pLs2Gshst/I/W62PS
MYnr0nQ2rHQV7d5RqYepU0GtbuFsGIzzN9twTRcDvQfXCxxng0zEzX5lH13M
NyjaduQ8G1TWX0+9JayLB1SWR2MBG8a/S1/UDdXBfEX+uB09bOhX66zttdfG
nrDXhiYrCPCTrnx94Y46Gnv+qa1aT8Bys+zV56XUMWF7rRM7mAAxfvpm5/1q
eHhSU9wnloCGm273WkAVzRu3WhfdIUA/drizt14JFaMPqIYXEiBa+j6n2k4J
hXa2T4w9JyBVaPfb/TcVsTjoraVTFQH9rfEG8iEKeF9K1pRnkIARzZqnZVOy
eKNBl/NtgoDNznEPOtbJolWedNbOeQJ21hur/3q1EJ82Zna2SpAgvz8+wvGE
DNITPR+8kiOhqpwvuKhTGiMMZyI2qpJwbX9/76SLNJZHS3LbDUn4FHZzr7ya
JO49v8rwvTkJwwnv9B83i+PVGxu8wqxJkDE0o4veEsMfKjr3BexJSHtrm9Fl
JIKT/WkVg0DC30W/VCN7hdHhu33YtWUkOM2k21XeF0JeKydb++UkDA3JF72h
CeAH7mIXq5Uk0CWyLCNG+DCnL+NZmx8JQrzF10Ye86LRb/2j/mtJuP+AV2Hp
fh40Weeafvb//5cWNvVr2j3HtfOQmTmxmYSYxO7elsFp7vJajSz7ABJsZkSV
MvdOcU3di6L+/97SpPWyokqj41z5/flnR4JIGJuzGPLbN8odP3Ck+v+/QyeW
68xuGR/iys8tW3R/JwnRbQfKYvr7udccHr833U3CpfcnTv0Z6OY+VpSLDtlD
wqaij+UiQ+3cNgkfz52hJGw+yb3T3dbM3bBlysYijIQwxmfzoI5v3JeKZk6P
KB0g8a/S69M77td/9wLHKL14n/Je5ahr3Kw7P7L+UXpg7UT7VovXnITzBcOv
KX33e0i/skItJ4/n3QZnSrOyV11okmvkbF3o05FC7cfxUBEvFGnjaL0wSEin
zpOr5b7m/YIuzqrKApdA6rwrE8KW5wv3cZ59mjEbouJp3XxziR7/EOe7URHT
PoQEYRe5r67HRjg4qRTkHkwCb/UtHUfecY6djHSl6nYS2P8aeISPTHIUBhU2
3KPu5yfr/+xT5v5xeh86m89R99tnau5efdQshz61zk5mIwlTJ6vVfvyb56QM
5aZ1UPn6iHJWy2x5ITxhsUMtlV+ZRRd8D5fwQ9Sl9m/nqfybn5VYV7dQEHaU
f/lPxJ2En9aE5kSIEKy3qv+pQtVP0U85nb3qIiBRaar7xJaENwXBJ97uEwXn
jqUzgmwSdjZ/6Pv4SQy+FaXmfjAhoXp8rUZXlCSIKWHmYj0SMtUImdEvUsA/
kb9rpzoJWo9cLVekScPMx47eLkkS1NzfMcJ6ZeCXnU5lZD8BPqmKF6zT5KCr
+Vj/7Q4C5HW/Bso5yMOyytLbSY0EVa/s78Vd8tBQlsyMqSRApg+/2tsoUnUI
M3zXCXgt17FSsUkZth2f+zCYSoDDMSG1ujgV8LH8oHIpkYCjaqjhaqYKB90/
P5fYS8BvaT4WHFKD78e62nMcCCCeVh1YslATrmx8dWQdnVrfp64tuFgTpLNc
XnzQo+aF6CMrZQstGLud/6xuAQHOi7aJrKzVgvTX40vvfmJDgs8avoNKOqBL
XxhGe8mG0Guaq48G64Anj+y58Ads2GRYuHRlqQ4cvLBvp/FZNhja+BG+a3Vh
eUhqzSZXah4e168vSNeDttt67W8Iah76XnQc7daDEob/vg4DNphoTf/7R+jD
3AW3tnV8bKi4o/PE87s+TPG8+WHylAWaLvM+4xKGoMkO0tonw4L/LNjXj4Qa
g3CEsT1tlgl1tV3dSU+NITNerPRJFxOebrIx850xhl+vea8pvWLChHVpnV68
CeQ+Nxx2C2aCSunW9EtXTGFq/bNdV4oYsGvZ/VSbR+Zge+iP7lgGA26W1E+2
D5tDyD2tl2pxDPD11k0HhgXEnL17vsaHAZI0nFN8agE/d+yL+zxoDa63Qrcp
P7WEl46fI0K1rUExvmku4osV6ORskLwjZA0zGf/lvx2ygg0/BS8+7KXDHM/Y
oV4pGhzjtTlu+YQOJkIlXk/caNASWnng3xI67Mwru0RyaeAVs2XP9AYaeNw+
6/DmFh0erf9h6sOhQdp7mofTKzqclhFfE6tLg0lb4YHUH3RIbpaw9e20AqdX
4z9zpK3hY4PGUaFdVvBNeVP/iUPWsOptVWxIqwWoLqkym6C4XHtu4OauKxaQ
1a3/nrGJAawKuCnlbQGPw9fT6IcZkFpe/pH1yhxIh6ViIQUM4GV4ME0vmcHM
9Ss/PygyYfWRjLQl7mbQnNpeMGfFhLTUAA1hXjNIcZ1+3e/ChLaYtwHHg00h
zurtasHDTNg/2aVxmGUCo/RWeYEfTCgxKZLv7jKGdNP+rUpDTHA8X1wumGEM
rXliFzqFWVDducPaa84IQk2fRD5hsMC8tDPMjmsI/me3o3ASC+Y2emwKIPVh
RdyRKHcTNhweCS2y7tQDMy0LzwFbNixZtSODm6oH344ajDp7scFvpZG9+oAu
eEcINGhS3O7RlUwYvK4D/uHhc6uK2fBu6TbmZ3cdcFssGJD3jg0p48VFBya1
4YHr375HdRSnOfxeWl7asO5V0J3WcTbErUq7/2tEEzJ5r8U+pRFQfybk+TJn
TbDLm6m4T/WdxN1AG6+rGtAk7oj+HgQoDtZIg6M6XOyRVavcTgAfN7Fy+DTV
x0sWC0tdIcDyj4xS0i9l0DmWvTUrm4CmaN6RWktl+HOwnf37IfV5ZGj/wc+K
UMOkv4x5S0Bw3arNTdqKkO5Tal5fTYDWg22CU2EK0DStmNLWQMClv3OC1Vx5
+LIrvPx6G8XtNa7Jm2XkYVTsb6FUHwH/Aznoyaw=
          "]]}, Annotation[#, "Charting`Private`Tag$26145#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[1]], 
         LineBox[CompressedData["
1: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
TTEr79SpOGr+jrXZmYLh40vrwk5SkVlmZtIz0RCZyA6+qmiGNYJZ861+hriH
00tI2tgMRbpEwgUcDLHuvluPgp0Z2n69viVM0hD7V7iTPoeY4a3k4HWe1QZY
7GruqY5mqCdRdfX7K32M9awsG3AxR/VegUK9//Tx5t9R433+5qSvTX3ina+P
4Ggd9DjWHOciDGYue+ljB1dwCXHTHMWJ+3fMfulhVrHPn9VJc3SV/DFyml8P
XbZxpIeF0VD86dHJN+Y6+FrC0UPtuAVGXJcPqZHWwU00v4jsRAtU1jqusLC8
Ee8acSYO5VhgQEUlL0ZsxH43rQCRBgs0ed0sNh6mjVaGU1ZMCxaofsmkI/2w
JhZfSWn+QqHjN95bjR4qmsh+QzZPmkZHlyvS60VHNXBdNG8gWNIx4KPEM439
GqjFQvx220XHUwbbptgd1ZH5S3VWdwAdR0xTFnKMVfEFe0Nc7Q065kvOEtW/
NqD3l7/JY2V01KnKwNs1G/DHPblwrmo68kVeLt6jugE35m36JtdEx8fNdmkB
oir4ooqv8hzpC1kp27tuTyvi88GFiT1/6ZgRxWQmW6aIux73/01kJbApeV9v
+EFFtMprCCrmJDCNV6e9/60CJtawaNcIEjibR9wMfiiPBt7N/itkX8ps+z00
KiCLW5tLLrraELjFs+ipyjkZDGHfs0tvG4HV+4/9Z8Epg0vxr28t7yDQ9UQ9
8XtVCrcwTY+5O5NznWFx4PyEBFb+if3rTfq4SL+l5ewDEph+o3i85QiB8Xs4
eML61+OTI+vneI4SuEdnLPFptzhe8NcnjpE+ryX73dEHd0WRk3bEOPYkgWuf
p8sVa4pidOvHNudTBH7t25vsVyyCjhvFBBXJPv8zZLUnJ0cYdwsaliaSc6D5
1Nbx8HBBrKPXZSdlE3hqjdCM94wAPgvBxqEcArcV1Z4xOiSAn6XzCZXLBM5Y
902cdeJH3QWpXfGkb9PZqyI7dIgXIWPLqQByrm2OMZIUd+LBwLyeRxbk3DvK
n3NJYTM3eqhul2S6RZ6P+tqzVpYTMSmRz56cm5xiNvuN13Ig96ubV/rJuTry
eKdezjIbUlUjVZ1JH2bRWfOw/zUrPhQ3NZAh57Rch4faUwYLSmQ/KDlEzvE3
+z88T6tixgZ1A7Zr5Jw3wEdsunlMyPrv4tY20gcwfSpzPMz3j9GmJnlsgPQJ
+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
sqg61QKfKFJbPH7dFP4HNFU5Yw==
          "]]}, Annotation[#, "Charting`Private`Tag$26168#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26194#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJwt1Ak01NsfAPCJejxGyhZtlrGPNcSL8PtO0ig78YYxw/zGjxbqvczjPR4p
+wgtKpEseb2QbZ6QrP+IRKkIhZRlCi9LQtu7nfO/59xzz+f7Pfeec8/3e69q
QKgbV4REIuWg+X0lkUafprYSQPr/2OWR1fLdhdMy7kWUW5iUa0fKd88mylgV
URqw50tHjL57RGiWXp/Vhu3aG1fOR96yUjlyndKNydjKkL97J/tEjH1fLxYz
LktL+e525cU7WX3YmHmyZzKy8oC0nRFrEBuwCKMlIbfdDT9aSBnG4O1TciJy
qVO7CXlxFLN2+rsiHtniUYvC3r4xTIeYN45DFlm+/yK65g1WaF6eegr5weBC
bG3WBJbSMva/k8gXUpk/LEROYd8kkvujkUs0VHA91lvMZmxn2h/I6b6KBVcp
s1hCuJVpBPIjWazxnch7zG2oWsBDdrh0UE588T2moSix7zhyXEl/iG3fPHbj
0xgjBJnswTzu276A5TcY0Q8jK3X+5hles4hVLOvW4MgSHrn1ZVlLmM0f/Rb+
yPUn26wepHzEzBeXzzORL1dUX5qIXMbkX2eNeCKXOWkOb2WtYr48n4Y9yFkb
ynkJlK8Y/Uj5ZlvkyRF+SZ7cN+zPs7+7WSKvnnMceClCgsMZIR7GyO47ms5/
XCDBGve+vC3I7PqZLp0+Edjc+mxAHrl7xVuu2kkUnEsdZqSRiy03WkO7KAiU
LhSJIht8iDVj1KyFuVOlAcIWAohgtWuJWT9A1eLPvDHk/PmScVlZMfD5KZI7
hLzreY1YbooYfAlV6+tCHhOGDAsixWH+0xLpFvLjDMmWYT8J0C/uigxGnmK2
NupS1kNU9Fw0C/noJvpi3/X1UMzW8PZEdqnkzsVqS4N/Tl2CLfIrqwGVGYUN
0MPMeS2H/Jbnv4G2dSOUiXuf+aeZgFot0XVCTVlQ3BE+dgP5zYUcvd1BsuA9
ckMyGznpF1XjjL9lQcfQ6uVJ5M9rpHos9ORAeEU/aj9yoXeia7yxPNQmeZT3
NaH7ydb8uNlqEwyTkz3bkeOO8u8fjtoES2OPe24jk/hTvncbNkGv2GXaJWTV
OtZaNqYI1m3i2l7I5YdYWMFeJTBvT3nT1UiArZQbWdV1Czz9VVn/UgOqRwK/
eImrDINQ8+w0sheZiJ3NV4Y91ZPex5FrYjlaEyPKsE5B8l86cuiSytG3eipw
IItgrNxFefOk6f4iFai5fFHfFfmMIHyhNEsVpumjbW/uEODWkP14TywFru3L
bOlCZrMU4e41CnA6Ji8JkJ2kC8+ZNVLA8Svz2Slkehp1QOMzBZpJ2akqyKz2
uqm1PHWQyY775FZHwNKd5//WB2uAXvTB7is1BJh2KjjJumqBWBTtVjTyiY7S
C7MhWnA7we4QB3ly173aDr4WWMYn8XSRla81ZUbf14KpBIXR6tsEJFZ/vCq0
0YacoGMf71cToKs52FRtoAMuWWcsegUEpKworjclU8FPPOZKBXLHTv0zErpU
+CKVOpiOHD+0ZXzUngpBzavTTsirZU8UUk9RoYJE5XRUESCYrD/9epUKBsEb
L9yuJOBI91xAolAPllsyN0SUo/dMGZwubzOAZfveRy7IGSISr8UnDUCqeDBQ
GxnSNfPZYoYgcHOX6y8jYMNBm9+l9xlCiP7MiR3IAtGClEMdhnDSnez4qpSA
l5ZBJMlAI3g44+6jXIz6VTjhci3IGKY6P4luu47+Hze63JGjJpCrp5k7U0hA
8raxhMhIE5iDAvkG5CGj3S/5KSYQ9CLzvB/ymu4XeqV/m0DmypHBnAJ0vrUp
c3rcBOYJ5Xj5fLS/rn8G9zOF9JyvLOFVAu7J5FCtnc1A83ycMeUSATFzQd9S
jMwho9LU688EAnZT159rxiyhWot+jH+CgE/6u79+sLKBiqHX0mlsAt4vfpHf
H46BeUm2NXMfAX8krsgYhdPg1cpZnSOGBNAktvE3e9jBZVkxvzY5Aqqac8kF
6vZA/cUFDn0IBGfBxewdm+kQ8lNj3fCzQPhx4+SXqncOUKgv22RSEQh2D5Me
+L06AM3dhsO3kwOhgdStUNXpBA8MdO7k4oGwTsfrwbp9LjA78Nu9dxaBQLvS
E6tm5QpYPi9sSioQDhRLitG2u4HH7vikiRdcaH083eK80R1Mbadp/je5AFkt
KX1f3CGGkqGtHMEFU0rL74nPPSD7nl7oYYwLvxJnbIJbPUFf6kWOvSQXjLaY
34jPPghU4fXxn57iwOLvb7EN9YLP932ZLpk4tL3kWXNdveGCnWpMLAMHDV5F
2I9qP8PNlxOkU5twOBZ/7OZvaxigFGDPTHvCAb00WXvSIANYmrVXaGc5kDj0
PJOV5wN0vQJNLp0Djtci5Et4vvAwqtAsXJQDlappIyu7mLDTI5ajezcABiK/
CauXmeBS6jkxFxIAH5VtTsW0+sGb+oUNBuoBwPGKelcXxYLpF9v5Fo/9IS3e
MEBDjQ2C4rqFryf9Ya27swNEsaHXR7xKsMMfZvGYWulnbOhhcx9OD7KhP5Mc
l4bimlzqKDOBDQ4e1hPaif5wTslQQo7KhorVxDyZ1/4Qd/WB28kcFpw+Yalw
dFcA+HCvisOsH3SJuusZJgfAdHqJPVnfD/LvTzk1DQeAGrkqszGMCTm+ETmj
VA6svWi+mdPoC2Q13YymMA5YClMz8pZ8YH0WPjHbyoG2Z19Kiyx84EnP3WRR
SRwmTAPKXMx84OLu4k4rMg6m2o7Rq8Y+4Llt60SYFA5KHx8lO1JR/q+Ysklp
HMZ59q5z23xAoKvC75DDIWH4Zp6hqA8ckJE7HL8dB/kuwz8THjIgeF9t5Rtj
HK42KzKpnQyoT/6VpWSCQ78mQ7KnjQH8mLBJR1McevmkPvkmBmxRpydV78TB
bvqcel4lA8jFn2TjLXEY+pBZcusiA1Zb52jb7XBQ99962vk8AyoYDoUue3FY
SeZQ36cz4C+bhyOx9jjc5rkKjZIZoFHkMDVBx0GfhlPKIxmw8OS9dakTDs/N
yiOcIxioz4LCh51xOFA0nzsbxgDD8M98aVccHuNhvnqhDJBvDrU/7o7D9fGW
+c7DDDhbu38mzwOHJrrqz8FBDHiiYxXS64mDCvVimhiXAeJg0ynihcMadWrm
dX8G/LPDfY2JNw7/AYLZeW0=
          "]]}, Annotation[#, "Charting`Private`Tag$26217#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
OPwP2ZVN0w==
          "]]}, Annotation[#, "Charting`Private`Tag$26240#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1: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
zAkc/gUI9r5k
          "]]}, Annotation[#, "Charting`Private`Tag$26263#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26286#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
V7a9f2eJjXx3GmWlbFH9gv8R7mLqORaXjESMbVHz2ak+vaOWeHiHWUHOHls8
WRG3wYbLElM5twQ5vbRFpkPPsXglCxQKSJp/ccIOU1gThGhsFmgdwhbQnW6H
dAFp3q4+cxx4wJ/+9YEd+mbxP20pNMfkF4PFR7/aIXvcYv9NU3Ocdfe31bS0
x8t7nbhaGGa45Zq/56Yf9nhSxL1UVMUMX/R+bNs1Y4+JQ/Kc9mxmyDWeF+co
QMN9RRdMN7wyxV/GezWqLWn4s1zouc8aU8xQZhfnT6ThkxWxq26vM0GX2PEw
I3U6+l0NksmLNsSTuWn72YGBzDj2EVeaIQoeH+HycmagIwtPS/+8AfpzfcjO
8mLgZGSbVM4xA/yZvOHk3VgGZjCH0pKC9LGlf4u2MpOBRlHvl2K262KIiGJa
MZWbkgjVAEspXfTQkf+NqgQS5ufym1p0sDdH2fmVDoGig7+L7m7QwXXql39f
oObunL+wsyhNG1PedS9vdiZwXeGAVpe0Jna97d3hQ805z0c39b4WDSRDrBL/
O0vgnpMyTz4ma6C+5GdH8wsEuobndO7n0MCBCUbEk0zKZ6ZmLh4fV0N55+aB
3ofUnG449vbNHTX8/F1ZjVFBoMbnWLZFLzXM2ulQm/icwEsdL5na7aqY/uCN
Vd8bguqXoj+nqlVwdqeeXCXlm9XR5f26x1RwO4+IQOw3yve4tDc9N1FBl2tr
GZaUz+4Snnt9O08ZtxwZ2OJD+fT54Sm0ElPCJOu6kj5qD5wj53rLsmUxg857
4z9FEtPyL5sEycliYE7B2lIVErloPWJiV2Swa8d+30V1au/m9KYLnpNGpqck
m5ceiaINXS9GQiXR0IvFYa8VibV2Fe+HxyTQdVbM1c6WRLGy3PCW/RIYen3f
G1YaiSfkuEoP7BDHCx7BL3cCiQfyhT/dIUVxQB+GHTeQ2DZtx8pXKYKhSr9f
XXeickqBX8cOcxH8b6huomsziTsfFl2t1xTGzS+iTAxdSZSNimdvZwhhm1Y9
0LaRqL3vA23GRBB36ill2bmTaPSgeL5Xgh9P8Hlrcu0iUZDRm/CAmw/X/bZ3
/ribOs/G0CSPWR5UuDRZk+RJ5YyfOZJhX7lRdavPno/eJB47sCO36z0XTtie
vbBjH4m2zworDV9wou3WzYstPiSuffw252IOO+aPmpy75EviJ2Xx8P+ruM7D
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
          "]]}, Annotation[#, "Charting`Private`Tag$26309#1"]& ]}}}, {
    Background -> GrayLevel[0], ImageSize -> 800, Axes -> True, PlotLabel -> 
     FormBox["\"2 anos - Gr\[AAcute]fico dos Eixos XY\"", TraditionalForm]}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Sun\"", "\"Mercury\"", "\"Venus\"", "\"Earth\"", "\"Mars\"", 
       "\"Jupiter\"", "\"Saturn\"", "\"Uranus\"", "\"Neptune\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[1], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0.5], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.87799870106597*^9, {3.8779988314471583`*^9, 3.877998854676134*^9}, 
   3.8779990206202965`*^9, {3.8779990764983044`*^9, 3.8779991044605136`*^9}, 
   3.87865244697666*^9, 3.878652519874375*^9, 3.8804638186405945`*^9, 
   3.886092090268011*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"d5801a27-efdc-45ae-a9ed-b73e353f64db"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     CircleBox[{0, 0}, 4503443661000], {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1: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
QKHIoUz8D2JKBZg=
          "]]}, Annotation[#, "Charting`Private`Tag$26386#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
/wG+12+O
          "]]}, Annotation[#, "Charting`Private`Tag$26409#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
qPn2ZXrGFDT4J5F6L4jE7zkkTj+8wdQzFXY26jCJP6M7JzRLpqBMoUPJKpPn
d5mdL62YgiZjhX+pR0isXMRdYoSmoHtL4xkVJr/9wv+joX0Kyv5Axq3M9fS0
g5Zu76ZgT26+xEYmK/prtUwNTsETNbY6+sx4W+ZOhWaMM88zHxc5w9TX6nva
kliagiKZ3X+CDpH4VYyLzQj7NCz2Lq3M8iNxCNY4lyU0DTNMXSpP+pK4wk1j
zkl2GnKGTayI+pD4ueT5W8Ia0/CW88lMn/1MvTdC0/qMpqF3+JvYg3tJ7Cml
hu+YTsNK8YcdsrtJbBf2dctx22mYddMgqs2FxFeM2Iri3aYhFk1Tozox+yd9
Ki3HZxpuFhsot7Ym8btkxYXeE9PQa2m2YMaCxNsavE4un52GCo816zyY/bD3
gX+aauo0fJngcSeA2T+ql4cjLhVOw4T0u4mCBiQuYITYtz6ahqJW5S+PaZP4
0Z/vjTy10zDmMaPwlAKJVVxHsm52T8M3A+0eSewkdqhLsOL5Nw0jhe4Mav8l
8NGyz8fCeWfg4g8fm9R5AsecGvcYFJ+BwbW96y+PEPjefPehLp0Z+H5Z/Eke
JjAtwPvbrMcMLCvUTQbPCHxNRdUu2X8Gzj43nS16RGDdfWIpGuEzULJ8oudx
LoGTt3sURSTNQId49qKeUALPpPjl76qZgQIuQq0xfgTeus/BULppBtbfe+jw
aw+B+U3Car+/noEbNziycAMCiz7KQRk/ZmDtIR73PesJbFJ6YllfYhZmsC6O
hubRcd61V9npJ2bhupD+eLM05n306ui+mnOzcK/r23tvY+n4vaie6/e0WWia
IqRq7U3H5h4vplxKZqFT2QVPH3k6PtFkaRXzYRbG9zodOJVGw8+icib/bp6D
o+hexeIpGi40Gb1vaz0H9Qp5E7YE0TBfL09OvuscHE52P7LRgoZfhikqe4TM
wU1fc/a4z1OxsouvnXTBHHzX6F9bZE/FFwqEvNrZ5+HDUoew7X1GuGk2d4H9
zTx86qe9kQaNsNXQv+eKX+dhDVEjNF9ohHUn11HMx+eh4Pf04sEwIzzzncP0
BtcfmCWin3uKxwj/mx/1yd/8B3bLVznO6Btia//q7ePFf+CeL3enn+2l4JNj
xxSbzi3AyD673uObKNjSImJ4PHMBLvXknGWXouCD93KUFW8vQPHh7cnqpfp4
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
Ldx8bIBNEX3vm/zwy4vEiWJDrVE8iqiy0MS335vEH1+nlIsJKaLdzs+HYn1I
HDLUdOfJBkV0yPi420cmD2HOQmc5RbRd2pbxm8mLmr1P5pQVkeKNpQ2VTB6n
PurO0lJEhtYqBw2Y/OiADJupgSJiq7AqOsj0X3PipuUPuiJKPvHkiz0z/lRk
7c2MrYpok0OM6DhTb278Kt9WS0Vk/CbREniSuG9yNOO3rSKS6b/8n70HiXl3
8BrcdFZES6/MawR3k3h79NivnXsU0f3XshwXXEkcWinZwO6tiIqMowMqnEls
u0+hqtZfEfVwnPl1bSeJoxdSWiOCFRH1kNIVih2TxedW9SMU0VqW0IULzPpF
T//qfHBGEUGd+GHArK/8x4KjIYmKKPRX37UqExLLXsiiG6YporSaQh1oQOJA
vkLz+hvMfPIM6LjokPjD5MjFi3cU0Ssc/7xAjcQlL178c7uviI6rr9Xvk2bq
qW2J+lOtiB7O7NrXKUriE82KcW1QEXFcFu2c52f2w6n42rwXiuj21vZTgWsE
vrv0q3fnG0UkGv1luOoPgdWmtZ5q9yui8KDMyGcTBJ4ZnOvmGVREl7+Ihnz/
TOA+tnLUMaGIoqXTOYXeEljZbvTK43lFNJcmqDn9ksA+bURp1ioznv3F4/01
BNah194K5t2IqtU9bezSCHzLpXjYUG0jir+qbkFlPv/RKqtTmrob0XMF6Sfv
oghcmvzEVtl4I7pvyXfU3IfAmfeXZmTBRlRwVXJTqx6B84Q2EDr7N6KKHFvF
gjo6doyxlay7thGd8lcw0ymj4wdhDi5eN5nx3s9on8qnY/8nmvfZCzeiD2Tc
3KEzdKyvyn7P9fFG1DnAHX8M0LFr1S1p4Y6NaK/Mqt7pZzQ8W9vIM8mqhAw1
2nP3FNNwC2fwpUpuJTSTsj9o5QoN18ukmZ5ar4Q67Xh/ZB6l4YWl2c0ickro
dpXd1Q1KNPxU1L5uN6GEusUiXG6couJr82WCTkeVkOtc//s5fyrWtPtmsem4
EtqucHd0gxMVXxxIxqoxSuhUzkpCjQoVl+my5qxLVkJ+dXKzJ9qM8Wnq6mB/
kRK65Z5zS5rHGJ/jL5NeGlBCC9cfX7lzwBC75ea5rzkqIw/J2693WBhi07yk
xle7lRGEOYeqVQ3xSpSlaIG3Mqp9UyQ988MAT1xJ97MPVUbplW6FPwINcOnF
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

          "]]}, Annotation[#, "Charting`Private`Tag$26432#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[1]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$26455#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1: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
LsAknttyub4W+Ndys6eHygJ0PF96xj/RAlfer1RQsFuA8Rz72i73WOD5+x1S
QYULsGnvfQ5nEzIOadGe+3luEc4e+Y5uWpHxsc5J8o4ri1Cn61G0/wkylm1s
zba+vQinUG7oQycyruWg2DRFLsJ8s/ayKwFk/Ozd/o6194vQtv/d+TulZMxh
a33FTHgJ+giGfXi52xKHuL8wqupagoF2DysE5S3xW7menGNDS7CifPzzPSVL
bPLmNOf85BLcXBdOszpkiWm/T2Itut+weP+McuVxS2zQ+GUvo/Jv+NvYqeVT
sCW+zKBrGB7xG9rUS/ooT1riipUa4ctWy7Ch6dJnqTlLPHbnXWGm7TKsXK+l
Cvy2xFlTRz2/uyzDU2VHwn9uWeLrrm+DrgUswyP893icha2wUt3WRGPBMiw6
w/st1cgKq15sFLglsAIFXn32kUi1wrosuQvw2wq8OJpK5XpphYuvTa2Uz67A
hqfzPstvrHCIdZZFxcYKvB92AZeVWmFfurzpVuFVOK8mwcvUboVzRUuP6FFW
IW9QLO/7DSvcUGT41wavwsiRv/TPj1nj190Voudy1uDG3pdflmysMcvAJZJC
5RpUCk6bNzxjjdPQhcDVxjWou8HX/cnNGjtZx2q++rEGy2LiTzf4WeOY6qfN
NpLr8Ev1i0WYZY1dZuW915LWoWMdn4LAsjV+rhvVrhf9Bz6c+poTsG6NI+86
5X1M/QM/R21b//HPGg90RgW45/+Bk86Xbx9npOBtb5iZC1r+wI3aTul/HBSc
G/Kh3p+0AVl8nMV/ilFwoURajo7fBlzRUZLcc5iCxxOOhxp7/IUfIrvFxXQp
eK5sl3Gy/1+4mr++waFPwS13QpVXIv5Cciyb9bghBX+dDX0Mc/9Cl+1ttv5k
Cp5OpZQlTv2FqvahX83sKJi70knP1/UfPLO9y9rIi4IVd0rLrjlvwgdF4tlC
3hT813jn7mtem/Am56DnuA8FbyU9zPj1cBO2JNX7+/oT4+GwAsy5m1A1MnBP
aBAFm38Y1w5f3IQ/TT/X7oml4PBbyuJM97YgDZuHfoyj4HzW5xnLMVvQlmGm
1jueaD+p9nEucwsmca4nwEQKru57YrTWuAWjGWbfKaRRMH3J1OdiVjqkX12Z
GpRLtM/KujpEpUNPKe/TmfMpWJqyoChgR4fkNjYE77+lYAOX4F6rC3TI88yj
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
          "]]}, Annotation[#, "Charting`Private`Tag$26478#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
MkSvvrgnQSEYhcST8y2pgFN2hXNFjkL8D98C1kY=
          "]]}, Annotation[#, "Charting`Private`Tag$26501#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwt1Qk0VdsfB3BzyRAqyf+lPA+VUsqUuZ3MIWRWhpuZwj16rq5KlDFSeiTz
lCnDNaV79iElmco8J3MZn6GBDP99/+t/1jrrrM/aa/3O2r/9/Z0j6njd5BoL
ExPTGroZT6Y71IXH7P6A6f/XvHn7LMOaexY9atuC6LTBlnGGJ67NOcA2SDfj
vdHDcO/8i2MdQeP0noWaeobHSBlPK9q26CrUogKGLc0F9XNaBfDYV9oPGR4I
VHr+LkgMH8gM92CYWUNEeJP3NC6m4nf+f/UEtDTi2tTwm8FsggwLOZcnWhTq
4BP+quNxyFwntQtCWk3wgAMiBQxH81P2ejywwXXcc7wY/lsg/MbjICfcwa3n
GMPrG0v0d/3u+IDgy7FHyHUl5l9wXl+8wfdEPMNfMjYOdDffxNWpZoBhh5Yj
t9nbgnBbebGZWOS9tRS1Hen3cIWUxCiGs9SUvzUWhOFz5VVHGTbWnWkMT3uI
J1KodTHIZs5P/Lda4nDbxRlThllKX0uIDTzFzfcwjT5EHv3nuCf1fhKeP0V3
ZfhYbfGexhtpeKCb6Gw0MlAQvtBMzcQXkk64MlztE777zXIOLhU0OhKFnK/5
yS64Lx+35lM1Ydhk14yMmmIxnm2iQUQin2zJ7KjjKcMVLsxKMDzxuNhXpKEc
V/+qGh6BTCniELBsqsLdNQZUw5H/CGwp62qG+L/fxWLDkFlbeRdF3evwUtt9
ww+Q3xcqHiGn1uOVaovO95FVHbS9HuU14h41vZmhyHpvwy7lhzTjil9dBkOQ
26kZDwKS23Bum9tK95Af7skL/tbUgcekcTgGI+9qP2IqA7vwPxPlQu4iu15k
ybbq7cFDsyKqbzPy0m105GPwID5UVdIUxNgP20D6utBn/PLtoF4q8pK+dbyD
9xf8kxT/aCCyOMv0aBllHHfh7xmmIAsMab9XkZzE9QtBdwCyOU1mvm1hCpdj
3VN+E9mvYJ0S0jmDDxP+Sf7I8sHKTsvLc7jgmWAqhhxuVBaxKbOIx6nFyvgh
u63dSxnhXMaDe+NYfZFpuTPf/G1XcIcjqp9uIF+tzBwxq1vFrVfCrLyRv3of
3n/r7U/8meKmlBtyMFt/+dn6LRxmbFe4IH/cMNDn82OC9TOvzjojt7DtNLob
xwzvC5pLOzHO2+uUr+omK7z8WyHVATlCaEgsSJcdite2c9ojZ1RNReZmc0DW
ueMttsiloSf4K2I44RmzBTEb5FYWwcspIlwwL8UFs0J2f1meRCG4Ye3QXXZz
5MgVr4X4P/hgOu/lAUPGfHeexYd59sK5xO5tA2Tinu8b+l/7oDc37yF95Nz7
guJtWoKwOi9HTxtZneb8sbJICBr0+ZurM/I9Ka93cLcIlCyp1FVl9FMP5+QI
OwQryC/llRl5PlE8of/gMOxueLcpz+iX7+Y8s9ifcDPzsYY0sqxhOyWPJg5V
fsQxH2fsn2rY4VogAZWU9ehHkXFLsSLzAkmYnPZFRBxZcsGIifz2KKxfLEz4
DyN/beU6TfbSMGPBQ/IA43tSdS52d+pJ2D01VizIOA+L9AWq3ylY2PCriB/5
OzXsmnaTDHxv+/bKDsY8frmSzlspC8fVzr9mQ06e5LeKDJKDmCiFnwVZaqR6
LcdAHlbN7i7YYPMHplLn/hRfV4CGxYNxS8jROJO7TLIyLGpblR1A/sNO+8kv
HgCtYuLse5Fj+skllCQAZz0r73chh1E5JGSPn4fqwbFv2pB5uX/aBlloQlvp
h7/eIIvUn8hq7dGCBRYldvnIXgpC8Q/vGcAkkxKZXGTFMTYNit5FKBIgz5SF
HAB5vT33GcJ6g+6oZGRn61mppCojKH3MjhSLTBQLBJr+cwmKpD3lxpDP7Smx
WQm4DJ+1rIX5IM+/kp+fYTKHTHLj217IRqNzmGWEORzEdYadkXeE6D+nZVlA
27Yr5pbI6lEtC+q/rKDXRNU5JeSzeqaiwaJXoZPZbWd5ZIO9k3YBnVehlkBr
6GnkzqFJ0dOa9jDs1m/aMeRHMnnrzzbtYdDxrDZhZFc3/v6+YEdowyWxucbq
Dwr0B/hqBq5BsX5s5DvyVubIuZ36ztAnMJi+hLxY0izGijvDINDh/A3Zrj+s
dneOC4zf0L/Vh3wsc214PcoNrijk5Vcgp/qUfx4q9YIfxhoUS5GlTMof/VTz
hqr+6XWFyMZfmvXY2ryhom10fSayq0PeJ/bl69BHVyPsEbL2eJTY3qM+MLN7
zz5P5PP3rccDXvtBn3wmIxfkJ6ZscfkCZHiLmn/PEVlYrc1hzZ0Mp8Xkhi2R
O1//zfxbBINliRKXLiAnGk/zdzzxh7YegSoHka21++a/vwqANpw/D39g8Qer
IY6+49Q7UPVfb5V65GaOH37K9Xeg+K7KSzjyTVAx5sF5F8qMlLqVIp+Ojlu0
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
kN5DIuTVzW6XIV9WlqoqHCYR/wW06J+b
          "]]}, Annotation[#, "Charting`Private`Tag$26524#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1:eJwt030w1HkYAPCVijYVUzkRDZ1K3el0UTlJ3zWcqZNNpNWclyTZ8tKL2bxE
+IqkIReLjJfkZdjT/rZt67zsoyW03paVt7zLHW103o2M+5q5Z+aZZz5/PS8z
j76n/9nLa2g02m8kVyuNtmdm/0eMaP9HDat5etXOWiZNMrqVWIMtnVp1kjRu
pYnuLmaUlE2seoh+tkZCjxDT+aF9q46QNgyl0LPFzOqIzFW/+pxdMbwBxFe3
JaUZEfebZl7SVRkQO0e3xhkSO85p29csrIidVzL8thJrvnaMPG+sDziDpzrf
g9HGgDHulOgQ/OrizW4h7hWm2JfusAK3fyWcdGKX+KgxgZMd1Ee5Nl4kngyo
L2T1MoHTLM7eRGxdVfTtDMcFVsxmfATdGGnL+33WzbsB/bCr9jnidy6+SuNT
l6B7Q3jqQBdGkrHRBv33PlD1S5jTVWLD80FmFu3X4VM3VzTWiVGYbcXYidxA
MDceYTgSG8OaU3WdtyBwyS+nrAMjt/4D9QPbOCCcF6zQiTsqDgR1tYdA1P5P
B5kfMFIu1E+qlYSDZSpXxm3HiD2pNSduvQd5pkbV1XKy/2yCebBaNJSQgabb
MIr3f9tibhkDgo77bmuJl/q/51tVxUKwS4TWplaM8j534oGL8VB89KuFjgyj
xXDF8aeKBPjBXrtdtQWjQ4+sG0+yE0E4sNlkuQmjG/L+qV0dSRDy025NRSNG
+WZKI712yaDaUt4kasAotGvRxebzH5DlfvrjQylG7lvoGcN3U4CKVnti8R6j
1zvf+DczuMBoY60frcOoS/eBPFk9HQIz3K9n1GIk3uP96HJjBgymJ8j2vcMo
N3fomEpVJoQ4JUVKqjEK/hJzWisvCyxsPdJZEoykO2hGie+yIaVVY2ttFUbL
HFafaWcOFN0yuMIAsr+JgrvQlwuYNTv3uBKjmuxwu0zlPIi7n/rXdDlG4Wp1
aRt2PofNp9THmWUYiSJLxgpN88GAd0sU8QajcZX8jmq/Arh2Id5OIsJIa9bb
wS+9EIbGjR3lQowUlq7KpX8Xgdb5lcVBAUYjDpuSe44Uw1FV/rr1FOnfeoyd
eKcEwijonS0l93W48+diHw++PUkJXOZhxG2u0HA+XApZyl4Oa0swYuz1vTlp
/QJsHRie8iKM5L1BnCklPswWPKioLMDI5shNr3ohHxyjrJyFxCK1OtWZ13xo
eLlropj42mbmV71yPgh1WDppxEs/asbdfsuH7evE7JvEnt3qQ4bNfPB8Zjey
l9gg8MSR5H/4cGjJ63BiPkYFT15lZetQMOpjQ8UQ28YFi9r0KNA0Zx4MIw44
ztqqYkBBuurwHl/iYWliqt8+ChY85jdaE+c87Gm1MqXghtcwb/45+c/tNrpT
9hTctnDVmyA+c84kxOgsBYK73xJGiGPft+l6OFHwmFHmKyPukviYyFwpeNFt
pF1MvMVbKfmlDwVe6l+icojv7ZZ/N8Gm4JWgS5FKzIwUDu71J/NaHyyPJjar
lFk/vU3B05+5BiHE3s93933gUPAsaX9sIDEPUeUaoRRccRtVXCEevBA3cDqc
gnOZUoffiR/UvrSLjaTgP4Dvi6w=
          "]]}, Annotation[#, "Charting`Private`Tag$26547#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJwt1gk0Ft0bAHB7iCRbCaVeS8hWSkpZo5Jd2RPvS2WrqIRkT7bsRdmiEh99
ZM8800uWbB+yZUmWQpIsLSr87+3855w5c35n5rnz3Jl7nvuIO3qa0pgYGBiW
0YmvDNtDcqQd47QY/n+ceOv51/4WzruPmAbUyLPu+2ulkI0q6qZQ8zSn5yH2
FsOhm+yK4zUvSg3/euq3Wele09Uammp2NjZYK9flBW0insi3ZWFz9ry1+aOw
kwi825WJPRr4TZepQYmYv1ycgZ1Q4n97k+lh4ufL8+nYqmJDr7L19Ym7Qb/v
Yz9Qu6AREWRKtJc6p2H/fE7VkN1sQ6RbF9zDVpi8+bZFwYlg9nqdgv1SKE9O
x/0Cwbj6Mgm7MlKPUl9/ibj7Oz4B+17Kod8FrteIV66H4rAl/bkvR5oEELcN
X8Zgk2O6aWUmIcSHHNEobCK3vF1IP4IYcDWPwN4lXzTYSIklnB9Tw/7GJ5sH
sAUlEJFmhsHYrE1dta03UghdL96b2F1qoz66QveJVNYiP+z325Y9reWziFBO
ig82l7CcCadCDsEe7OWNbdbI94Uj5TGx0+3BRezVZwq31rvlE71NGW7YRcW+
jCLVRYT4Pd9z2PQIa6/OV8UEy4ACFXu4gV1J6XIpERgLZ7CTx2LvHbxQQRwx
OncKm13yh7abERDBNiEm2J/Frnc07aQT9gPXDLB/a+2aVDCuI94rzGpin+OK
3b2o20SEsXkcws5w9GsJEWgh6oya9mGfbYGCTvF2gkONQxZ7oNZBm/lmF7Fx
cI6C/Vw8V9/1QjdR/OWZGHbN4Y8rwn69RI17DS+2Y/qv+HK+QULyLfv6v9/v
1V2JS5nDhEyFPAs2X6bZOXa598RKM9t3KeRPN1rMueTGiVaGqi/YC/T2pu7O
CWLvU51J7DdbxIJUEz4SnSZTfdhLYQE6qi6fCFZThg7sALvVVIGAz8SbV/ON
2HqJuQ0bS78Q6kxnK/4+zyvhtZE+T/S3vivC1qratWKyYZHg5tz3GLujNTMh
zn2J0B26mIR9e0W+IZ76g5gbEfLEbq/34dyqt0r8MYulYovqraaWKDJAgE+f
FXZdsNXSgxOMMNI1qo2d2OJpfv8fZgD2HFXs7U4L/NmLLLBpbt9u7O+Hiu4Y
HWeDrW29Atit1BGtTGkOaH81xoH9repCjGYxJ/x0o69IIh/3diqLPcEF/7R/
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
72hkqyu/ziKywtK/ajc+0sj/AQJugS8=
          "]]}, Annotation[#, "Charting`Private`Tag$26570#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26593#1"]& ]}}}, {
    Background -> GrayLevel[0], ImageSize -> 800, Axes -> True, PlotLabel -> 
     FormBox["\"2 anos - Gr\[AAcute]fico dos Eixos XZ\"", TraditionalForm]}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Sun\"", "\"Mercury\"", "\"Venus\"", "\"Earth\"", "\"Mars\"", 
       "\"Jupiter\"", "\"Saturn\"", "\"Uranus\"", "\"Neptune\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[1], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0.5], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.87799870106597*^9, {3.8779988314471583`*^9, 3.877998854676134*^9}, 
   3.8779990206202965`*^9, {3.8779990764983044`*^9, 3.8779991044605136`*^9}, 
   3.87865244697666*^9, 3.878652519874375*^9, 3.8804638186405945`*^9, 
   3.886092093009396*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"18e03e4d-19b2-40eb-88a9-8143e1e2ebe7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     CircleBox[{0, 0}, 4503443661000], {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 1, 0]], 
         LineBox[CompressedData["
1:eJxdkmk41e/XxSWRsVAKpQwZEo7hSCLfjYpQMqY0UMgQyZQ5U4ZKxEkZMiSc
cyKZi+99FxEpifqJzBJliCSZ8vi/ffabfX3e7GutvZa4vYeZAysLC4vuGhaW
/+3/P69aw05y/EvTyTKl/Puz82hN4mRi+/Rys46ppwT37M74GoGy4MJdD0Z0
th/f++XzxtIae9lwn7TlRR2H0tas8Z0tNe/P6CS6WHIT8uy028nnB2u+TQk3
hGVsIQTPUjvebpypaUhYk9eAJYiX50FkB30Nicbl9usuyRNTt7ha3+zkIxWp
/sdWxlQJ6ZHor3LiW8nUQk8fW/P9xKvmMHvv8xIkozSpjUNJl5gSDFwrMb6b
FCte2zGTepiQN3rxMX2jKrmPGi5qyXqUaM/K/WCqq0neyCyoYSPNCDP5V/cH
C4BMKjNuG/pzirDrCNmhv/MoKXI9XaH71TniR9DdZ8dUzEnvj2yM3SPnCYlR
OJm98wR5pg2uKxu5Em7vKv7M2NuTu6fmBvRSPIiz+zTO6tg4kvoH6kX9ZK8Q
/EvqqQfGXMhfY7aSHxP8COuNkkY9G7zIw5LE/WvZAQTV9kKMpacvebffTkJ3
JpjQe3TeQRQCSO+rnNo7S8KJPSMqbtP5YWRpH9uj2oEbRKdEZKy8WDypEHJ2
SOxOPJF2oPP3JEci2TNCCN6rSCBip0V5WihJpP5LZ5rWxyTCMZn/fLjYPfJm
vqC5lXwa4bjLgu/PuRyyi6bV2auTQah46H7QMcwlhzsnK5B7JlE1z1+dbJVH
vvchTy7z5RCarLPbn40wSFOBmJVa53xCxfDK/hGeUvJo+sCBueECQqOIs5i1
uIzkOrj2/GtPBsGyd/e++EsV5Fis5Ff3Z4VEi9CfcQut5+RP00fvU2NKCJpY
gp1m7kvyrVZUiOmdaqIgeKfb1OYW8ve9WemQxRoiquKa10WhVtLc1mMx/TIi
zj48mhOt9IE8NltYUIpfEBKmu4rpN9tJTsE+CRGRV4R37jG31yufyUJ3lmti
/G8Jmbzd31bSh8gsiznub0rviJylakNc+JVsSS+N4bVqIYzk/iOuNA2TRgMs
7s62rYSP2YTYF4lR8vvrI8WHJ9oIo7UOQ+yOEySVX+RjTutnYnPXiYL8fbNk
SbSMx0pmJyEv8iXtr/wf8iT/TGmpVxdxpCH1+BHpOZJGq04wku0mWMbNpXNU
58m9WCPQ9HUfEfpwLHBbxTKpcNnvX+6vIcL1krVsPbAhjrtd+9qmJwgzgaic
FwX8yGSwxUI+fZLYWSD9U15VAOlIcmeMG/wk2JP9n9W8EEDT6zTYv1hMEYP2
Q/Mhw4KoVj6E7cKraeJRxYlz3VZCSKTi1LHlvt9ERdrap7+HRFHBWz52vc1L
xL1dHHa/1+xCj3YU/TJOXiLkx6Vil6N2oaY7+aYvNy0TtsG52zx4pNG6Rt53
P4X/ERUmhwXpO2WQawmHdqMIC7Cedrxq6CSHJD2uq2TbsIJL7y25716K6NgX
em2mMweUbqnuFLOjIjVRcSsa5oA47i0RLO+piG+M/YOp0Hr4tNEZRR1QR1Kd
S0bbGtZDet0umxsSe1Ga392prUpccGpHq8rcPw20aDCz46AML6SUKbKy8moj
w/ffL+d08cPLyMviqkf1kNOXg/YFAgLQcEUrOuqhHjI5pOm8zUgA3t/v5Zqa
10Mxf1vETEkBsNqp1yHE0EcuH3xZp/IE4ZB53OLElkOofK+yot3tzfBpeWqx
R94Q9U9XziZXCkNNjfgsn6QpEg/aYLyBTQRUJpbxhKMp0tjOulX4uAgonXEK
ymKaos7RjO094yJQ/eX27Zi9x5H/nJAvVX4b3LlHGbxjY4bW5B5gzaoTAw0n
1nzBRgs0MzvSXKUqAVekAq3VT51En+mRr6o/yMLgJ+d3znYXkMn2wRsp6+Xg
rLG1TFDWBdSxcGNro44c8Av99NjRfwE9leN9JfdEDtb/tqZus3NAZRqyv1cS
d4PVSuVNdhdH1Dew5VnMxT1wjtlveO7eRZTqET6qr0SBrnDRt1aXLiEatp7U
7FSDi1nv8wZp3sioNd5+gp0KSbTOmVvvvVH8jqcbuahUmFLuUX/K6YMexcZK
3rhDhXJNCwX7UB/UqjNFnTJTh5dB1M7Qy74o09U8smpsL7wsFPDf73IVlbkH
/jwmrgHhOW+qSplX0WfHm1Zh1hoQ8TfSpmjiKprLO3Ootl4DTrTaXVTw8kdD
RiOq6ox9UGwZ5+kQGYAaqVpn9qXsh1Ft9isWL4LQwf94+eif94Ph18dhelzB
aGz/TiF2US1oPvepCVsEI6d29tmcHC0o0vZotB8LRvfHFS32IG2o9F3z12FH
KOqptPePEiKgtyNXNvTDNeR/RDVGeYMeFI4k+FXHR6Bqm+aMIn09kOGCYNua
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
1zw=
          "]]}, Annotation[#, "Charting`Private`Tag$26655#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
vtrtF9YGM8JJtTMqWliba/KoQE4bfPd5WEmdSRvf9rtps5GpHboUfGvgNqe8
29Uiy/aiHe72uTY6d4yGv3TemtIsb4dxc8XDUf40vLCstd/9czu8OXP9Xt0L
Gn57/PA812o7PHIzQ96LiY7390delrLtgCvsh3JrhOj4k1zTgSb3DripUk63
QY2OWzSiDaIDOuBwaJrpJzs6tkk4uXfXyw7o3VCeycig4yN8dcK+6zrhgLrn
QacCOuZP+/r2tUgnPMayQeLBB8rDDW9rFjU7IZzP6uWYoONjU0rp7507IVP1
+sgbGgQ+xKn3RqmwEzo25rNob6d8uu1642RDJ6wfevIkwIK6T4vt6K/61gnN
zjw+PH+awMPDyTL/8XZBa6xF6D8msKS7ZafN+S54PYxl5E82gXuvtb/YHNIF
SZkKJbci6v5eFn97NrkLWsVITss2EpizP6O4raoLdrg83effTuBbIeulBrq7
oNjvX52XBgn85HRT/dJUF9QsR+qOswS2mZlWPyzZDUf2WNXorxJ4ej77zwuy
G745UrajgpXEM0MXTFjMu+HmMB+Pt4Ik9v+hFvjDrxt+kcpbFpMgsdajwogr
0d3Q0R0JycmT+C/HVWPhzG7odCDuFTeN8hqh/i/kczcs287LNqND4k3uI5vt
x7rhNdefzy4aUPUPXJag3qxwf3Dpv7uUp3brOfApC/fA3MMNIWaUt9j7VtnV
NHug0axj5iPKY4pDvzfsNOmBnTGmrTGU146aF6kdP9QDI8odw8UozzWZ9Pmk
XOyBNak2xE7Kt9Yn5mcHb/fA0sZm81VHEocVJpRsy+iBlvf27bFzIrHsTsfm
pyU98MwL98fgEImzr3SYSn/qgf+5lTfUUb6s/Fuq+mq0BzJlTJqOHSZxitrT
CPN/PXDHxfqIh5RHS+/oX/gj3Av//t3FO07lLT/Ufr3T6oW5vpec6qk8xCnL
e3d3L1yorPy2i8o7cxuGfI70Qo/mZvV9VHvl13v8PPyo8j8phT+o/u8Vreu4
GNMLC7UvMEtTnrXWneaLft4LDwmI3P9+gMT761x0SmEvLEiom99JedbAZNFq
sb0XRixtzVKzJbH5O59ze373wpSgPJ0sKxLHJ4ekvuTog0/Xi6oUm5M47VvH
uKRMH9Qj5jYc2E35+LH0yUy9PnjX/87ZcCMSx6RyiO+wofK1ns4920ncn68v
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
xMTGMTEcz7QRxKuT9Cp8KvrZJzH8H+oqQtg=
          "]]}, Annotation[#, "Charting`Private`Tag$26678#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
e2jofwA8lzlD
          "]]}, Annotation[#, "Charting`Private`Tag$26701#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26724#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          GrayLevel[0.5]], 
         LineBox[CompressedData["
1:eJxd13dcje//B3DthEKl0tTee4nGudrjnLupIZJQkialoUlIpYnkU1Lak1To
XFfdTe09CJWUREmb6Hd///2dP855PB/X43Fd931f7/frus+Rsz7W52l37doV
S3z97/f/fw5t57+pxd+QvPqtlfxv29TD1+ld1XgnabqMS8r3dmr9jEHmIt3A
EMk0atCzqK6uPnnVZn8R/p7EuXb4lvvtwfr4lg2pPMcp0mTaLf/fo3P1mh5r
Qj/7Z0jOiRvNSXWb9Zw5Z6s0zL6SHJ99D5SfZaRGDkQKhuALpAzm2VGD2+xU
euXUihqtJVKpnrmKm6kgtStjyTrQcZnURd3xqRuVoDKfPJGbwLlC+vo9fEf2
ihK1U0Rk4Un/Kmkkvt1Avk6TmlsX1lWRsE46FZemzMJIolZevzv/ynSTpHiK
bP38ixGVLyN4BjL8Jt2voD0bIkuhZnAGuMDGP6Qbkh/zXt+yoTIx5G/XXv9L
upXU+LH8swN16Sk4XXJ0h6Q4O7lhZuJCffxGm70rZBcQn16ceevpRrWox/9A
BxpwUOjdUOWIO/UuV9fRcnVaUGicwlm55UU9sxCYlcFBB0Sant/TD/Cj8jRO
/Y78RQf6agJDfMauUD2zZIXO9dEDr/itrbyaa9SxQ8GfQDkDOMzVs5zDfZ26
5fxtN388I9gOiwvsoo+i3rN55vvrIhNI7P4a+bAjhjqV1TeDGzMDM+bWr/jn
WCprTZpGothu8HvOuDH1RBz10Cqvli0dC+DvumSZIJVIFStKoXJMsYC0tkiG
GqVk6qqMRGov3APiwhnMUm+mUvu/7Y6/8XgvCN+XNbLOfp/aFXY5WCVkH7Dw
Vue6P/mQeuRFrOyEPSvgKj4eo7+USQXF8YHhamygacf9/qJ+NvXSZWeOhN37
QeIerxkrvxxqfrpInP21/UBDQ9S01T2X2iqpvzhldwAc0lofejBQQDUa/1CW
03wACMQlD10wL6bqqJeXnlI5CAS9mykqq6XU1y0Og5xPDwIlBU07p94K6k5Q
DEvHfnZw68Dt6lyfKupCxbBWSAQ78Fle0dJif0GF5psW4ovsQKBbeb56sJrK
2+L4yq+TAxi+sA+4W1lHleX8NbNfixPQBCTnp/a+pkqifeklhZwgrHa5dGw/
lUr+kSo2ePMQ2Ct6J3Byp4GayXF+1GX1EOB7pLcl6oBTZ77HVs6d5QJxCgcr
Ljc3UYts/wv9qssN5Pt2PnNPtFKvtDPqupZzA70Z5QWWO+3Ui63FXUN8PKA1
VERFiNxB/b39ZL5kiwek79Yf+c3fQ53wDDJj8zgMqjtFjqgf6qN2fkjivjxy
GMQufoktle6njt8oyeZ6wQsGbBp3DlwfpH6+pLqrRJoP8Bp2eZ0bHaLKSIae
03jKBzpzJVY89Ueol6S5cK1kfvDvRc+hVetx6oni05FVzAIgL4q2unTjHdUo
3qRLKFIAYLttPG5WTlDjp1gefPUWBF8n3JcSFSepbdpL7/RmBUGXWH48u9wU
1WDFKLNdXggEPn1Zuqw6TW24lflpb74QkJjhAAc8ZqhZXTY+bmlHwEr4Jn3U
+XmqwriT7WLvEZDM/iTcq/UbVc+4uPfKHmEg38QdEK72nVq6HkK5Ei0MmMNq
hFJ1l6hzbmWqP6jCoMx8taHk8k/q6P24QNctYdBCmz5yVn+ZSuNFHTjmKwI2
+2/OczGtUNMVhnpzSkSAb/LeyNC1Feo3Ju5F2jkRkHkvQy7i+yrVha3BpuaU
KPgkFn1Lc22durOoKTNpJgbac5+5Wwb9oT6ws8rgjxUDLg26KKFymxpoT1Nt
1ygGUp2DfvOv/qUyDzK9fKkhDmTX6EYTyLtg8rxN+Ad/cTBj98M/fGcXtJ8S
fr1TJg46WD7p7q2lgeLFFExFVALoqQPXQA06aMlXfdfARQJQvs7PJ+6ihz+o
ZbssH0kAX0rPHmovPVwfvuNkt18SROypfjEcyQgdLAqPcm9LAiVh/9mLSizQ
drdr/pa6FBjpELyRJb8HPio3GRvykwISsrc85pT3wh8ZItbX5qRAqWd/j5YV
K8TruPb6D0gDj5uHcYsrB2A5i+F+oX0yQD1zcYbtwEHoyj57oc1YBijPy+R/
qToIS6HTAA1VBsT72C+z7eKAjufSDooWyAKDhSYGh75DEDCwh735IAv+bWa6
D0dzwez0yEoLDjkQl/M0+dRRbhgl+93cOUoOzNFapXQ+54GmSlO7FU7Kg0cn
p4P6x/jgR9vcW6nJ8oBbjHTPvowfXqFyX1lukwe2lKMD52MFYMOS7KUMVQWQ
yJnXLCciBM8VXTPpYlQEl9oMJd/sHIFFWRk5n48oAt9lqV6668KQZkn/xsZx
RRA48TdlYFsYQtdzvRwBiuAdb4+PKL0ofMJ66YPoJ0WwliJvGacsDl+GpE6l
1ygBcVDxm+2QDKSTeigV0K8EwDtbvX4kAwPVw59YfFcCm9/uR+V7ycJ7DFfo
V48oA86j95Se98rBG+nbTBwJysDdfu+w9GlF+OrZptRAgTKo1Pnx7SNShJzS
jJR4XBkM/CF9BCJK0PQXc+zqhjLY9ZOzRW5JCdLfmONJO6sCaE/Mt3M/VoHq
h7Irla6rgM6GnsGhPaqQyWqNr/OBCuiIoch7XFeFWz1nzix3qQDXD440UhfU
YPB7uMGioQrOKzU25VA0oMgw/aPLLGqghvfV5mbEMejY7vSSJKoGDlVytlD3
HofyExGhB3TUQO2NiPoHmcch0ye0kuunBmiHlrOzkTYs85JgSBtTA4wO5zvb
9uvBt6/4jz5+pg7SuzYf4oUA5uonZkkidfDx4WonI40+TJV+eqpyTB3oqJi+
inDSh0f2Pxmq2qMBJpJ5Sg4fMICZl3GeMD8NoFTyfZyUYAhT8Ut5Usc1QbG9
XXJLkwmcsuEiX7TTBAeZNwSfKppCwYrBnVxvTSBpYqY9mWUKex2HfFhyNEH3
OM3L+AgzGPSr5OcjhqOgkCNbaNPKAp6v3avU2n0U8L3x7hoRsITBa46K1bNH
we0fM89pXC2hntHIwuOdoyDKvoprLdcSvmU5cuO0khZgTr4ReEzWChaglhc5
aVpAS6Qp1s/IGmasXv4s4nQMYF99Vj8+tYXTk2Ww78oxEHyi5OCBLVvoWbK0
L+jeMSD5l6PQwtIOBlvG/KxoPga2Y508vtKcgPu0WwQG5I+DWbvvCwt+9vCO
Et/SAI02kJ8I/bQW6wSTj/OSOPi0we/+rKi6RSd4cfVqIUVdG6iqXeDNtz8J
9ywuZ5d7aoOSpNBeFjlnWKdx497hQW2gMxHRpj57Cr6pYrrw31Md4PtfmS1N
xxm45OztcLleByxRGPZRmVxhRNMxevURHUB6f7Jf0MgVKnh6+1Xt1gVfwtv+
fmx2hQHKcfSWvrqgkf3ePbeOs5BtoDeNXUAPjOpW+N5cPwe/SP5lbpDWA0eW
M8K0dM9D2TLTMg8NPTB+S/lH4e3zUOICObTcUg/4FFmX1fBfgLhE2eSeGD1w
o7ysqMbSHTq/YwrYM6cHQiOamW3eX4RaK5oXnv3SA2xtpBdh0p4QuTBNH/un
B9hvHPdwCPGEgVtTnqc5SaBe+eBXKb5LUErr/s1gfRKIyvx62MrDC/4q+U3L
mE0C1Edza0kiPjAGN4t0LyYByfhyM5twH/h10uZcy0sSqF1bwEfHCQfrOQR2
kUAqzbXMdFNfmKZ072XpFglYhoZdj2fygwr40ZCLNgAoaKiwhd33h6RkNq+k
0wDkJ/xyku3wh42kz7kvLgIwHOey2+ifP3RrCP+wGAGAjvKzklr3AMgj+FRP
sxSA1zdpp5/qXoFjD8/t4aTXB8p77Xr20wfCIgVz7vlKfXDzX0YV5+dgqCUj
eju4Xh/M7g8LvCUdApvGKikM7fqgW+pa+B3/EHg5+uoI6yd9wGfZq0SiD4XT
xduJ83sNQOuOuEKqfBikM+B//MbdADz++GnmbHY4pK38z2VXgAF49vEZj8LP
cFhvOmarF24ArKv1hR6QIuDVH36dVWkG4OYL2VTt2QgYUvmi2KnRAPAkCtiE
ZUZCes0TJJzHELy6qE698CcKMoo0cr4SNQTMGxfRqGQ0VErK2yxWMAQDJ+Iy
H5+IhjPSpKkIQ0PQlX3OTeRFNAzzlqRd9DUEoUXsbQq+MZDVWKhkvNUQvCs4
w5rx+wZ8KH7o6KS3EbBY+XXcxeY25Cv5nE8fbAQ+cnLP7sTdhj6ttAdFY4yA
0EF/47/4bVjC833M5oER+OPg85xN9Q6s829aD0RG4IjITvl/h+Ngxaui6bes
xiBo8tfU8627UA63pfzHbQy2SWVkC4146KIw/+iSsDE4PWgSaXI1Hq5X/ejd
VDMGQy0ZuOevePh95L/gYWdjYGN+Ldx1OQGmxLZY3y8yBsF55XIaNElQJUeQ
luuFMViaPqWtJJIEa+mfBKXUGwPJl7pvXQyToHPs4/LgXmOwC4kKnIxLgv/G
swR3rxmDNN1fx/oOJcOPzPSl0romYJxdL3TyaArsvfSs5nKvCTD39ub9V5QG
+WTsDEtHTQCp1UlSsi8NnjRu5p/9ZAKShFa8bq6nQc4c8wLznybgyvYLo3f6
6TCyXunvh/2mwKySaXp5Mh2+/MLwWsDKFExYXtn3T/QBDKd/e+qAoyl4b3gh
wYfyAI6+uHV054wpsC5///PQtQdwSf15WpevKbDN2WJl7noAtbQP18slmYJS
OVu3a4EP4Qqj5ixzjylIzk33qR3OgNmzfPHlw8R4Gdf1TNpHMDUk0BH7YAry
8+3F6xQewTzl5AvR303BbHjPn8y4R/DEwoJ8OYsZ+O+WX8xB/Ux4yyfwCa+R
GRB7Elo9BR9DEov0HeNXZiCSlzld73M2fOsosTnXYAYsrhTr/t33BL7oG0+O
bjcDZYrH28Kln0CuIW5S/qgZ+Olxj+an2xOoIx/kV7BmBlIeGlsmjj2B8hGL
ykmK5iAx4tP7wfYcyJyV3DegYQ7uXOvPujWXA//rT7/NpmsOtjWL21wZn8KS
+7P6QWRzwMN1oPGOwVM4ScfSvXPRHNzcvJNYgj+FE9R7jqs55kByxOieZWsu
fMvFLDdWaA4imMbSr83lwq/SantrKsyBAsv+j+3MefB467FvLlRivZaYkmnz
PHj+stY+rzFzkM1eeePfYB5kTbNUP7/PAgQ0JD1eXngGZaZP5w37W4CD16x9
Hx0rhMVXw4WTr1mA5oaRpECXQhhi9cnJONwCOLMiruCYQtgYpLOZe8cCZMxU
Upc7C6HZeOEI/xMLcK5ZUL76dBHcuNBTwd5lAaxHeYZT7xbDYJa/qSH9FiAw
d7/2dFUxLOM8LT0xYgEqr27lOIwVwznsw6V7UxbgSzPnW6pYCSxZ4VWrWbcA
BWurTl54CXzXORhOL0QGa5dvcfjRlUFDjj1Wh8TIIBGPcjSXLYMy39N6hKXJ
gOfgdw3MrgzygAMdMqpkMNCzLTlUUAaFjenr/hqTgQBfe/UwpRza9ToL5HiT
wdTCS/OevArI3OnS8rmWDNpq217ka1bBrg4BLdV6MgiSeCdkjVVBFaGQmxEN
ZDDCUiLIfqEK7lPkymZ8SwbRTn30I6lV0NIua3RknAzuRFV0n/lZBc/ov5OP
+E0GdcLSF9LLnsMvLbdXwv6RwXHNjrHsluewVjDp7lVaCgiKvlTQ8OE53MW/
rWrPQgFbCw/vGrK+gBs8LR4TPBSA/Q4eOuX7AoZ9NVRZ1KCAw4m8DwY1q2HR
qClvxjEKaNdfaDG1roZyAheGdHQpwFPKj3/0UjXM9At5FWJEAW+AUIhGdjUM
fm1hUW1LAd1uHDb7mV5Ca+9nUfK+FHDsk+6g3PuX8OLx6ladXAqQLk6jD0iv
hYVPCsRu5lPAxJhrk011LdwlXOXRUkSs16ZaZTVYCzWzeTJVKimg+aTUqWcH
6mDCDbbnrfUUYOGU1112rw4+rjN50TZEAQ5jHsNWya/gg6h4h9JRCkh23Lq0
7/kr+Mz47XTcOwoglX7SnRt4BQ9fTc1Xm6SAprHCz2scr2Eea/AiaYECon+U
bkQ+eg1lBUQeq+3CgIDKF51TJW+ggnd4dh0tBgx2VArpe95Ax+w/d9QYMHAy
8cCZzp9v4MeUA5z8LBiYN5HeVateD6WtvzHnsmPAJsj4M3NzPbyWFGe2xomB
FFrvp6Vz9dA1fuwKiRsDGeo9R333UCH/stONNj4MWMcaqtvbUOGsmGl6nBgG
Ogt/mebPUCEiZQuXSmDAfL2q3Gw3hH/2Xn/UJoWBW00MgWzyEH5+OGj2XQ4D
PhOdfr+DIFT6ZvbyuxoGeOrZ6B32ITgcoP3zrQEGnEU43YUEG6A6p0mQlxEG
ZB5fbJNTaoB/nMg1u00wsGRY8MpUvwE+37E/pWqOgSRRK98y9wb4TmW/vZkV
BvLIb36IVjXABPP4Z7g1Bn6kl+cVNDXAgKNa5Wq2GBB7ESd+dKQB5vTYL+2x
x8DvX/cKbv9pgLGbO5rBzhhw+Mfo/s6oEU4jT9e2Uxh4HOOvPeTYCBOxQKP9
LhhIwBi4P3g1woAntcYprhiI9rNe501thJdGdyvaX8AA3e7/hLDJRqhfkmkU
6o4BJ2HKVONKIxyQuML3yAMDxqy5n/SZcBgu68zU7omB3J/Mz6/K47CS+cfn
GW8MmCSVByVfx+HsWMq/jz4Y6FFxXQpPxuE1ysn3g74Y8Hrh9zH0GQ4/sQxM
lPljgNMnUzevG4e7z63vFgkk7keuf6xCoAkGiZjrrRDeOikzwqPSBFV7B4/B
IAw8dX93I9W4CZaq8NwwCMbA8QwD9hrfJmgy03nuYBgGVPsmUF1TE1zbOtBX
R9i5xpM9Z6wJerzpp3O6joGf9FHWGT+a4MQt39b4cAwU3PSvfMXVDNlfSZ8Q
iMCA9uyXD1OyzbBoiqOymPCPPQc5DoNm+Elds/lFJAbCT/TWvvZqhqHL1hGK
URi4JrNLVSS6mThxzjAWEo4QkxrJfNAMBbyOhNyKxsCgelkRFW+GmFq9+xJh
6bCK+QtjzXBkikfEOgYD3mDTS2ixGZ44t07PfAMDnhsvnZp5WiC/h+WCK2Fu
cn9+rFILbMr7UveS8KjBvJKzaQtUuWTpTXcTAyspTgyGri1wVVB2rzlhpBYj
TQpugXe0OFPjCV+9ihdbJrfAMYMiunbCQjPX7gUUtcCkd7Gn/xJOOMU8XdTY
AuMLyXmysUT/MQ2VrIy3QCWvrGE7wlGWeuuWv1pg36/DK9cIK/563tHI0go5
eC78TSe8tZiibCTSCl06RNZKCcunmmh8PNYKNXZtvaMSbryiPX3HthWWNN6t
aCdMCZg4bnq5FdYIxwR0ExaoS7bki22FZfq3JLr+55oOcbrsVvjYktTVTHhc
ar39by0xHnnybC3hfJ4benv7W2EsZ9S3XML1w1/uy39rhdVOp8/HEdbaTBg+
R9cGWZ89GfQkLHf+J0MFXxsUtF5XMyRcbRattE+9DSa0sSbwEN575LVrBNYG
w/0fjc8RzyOzmO0Jw8U2SN9mxldJ+NDqn7Xs6DYYoTtg50841nbLi/K4DTI4
z8TKE/a7HMN6oKYNNuSoVc4Q+8MlwzUz19sGHR6FDqQRjm9W3hiYb4P2g16L
OoTfv7GzGqBrh1kWioeiiP1XNajZxarZDg/XXBHhIVxkteVhZt0O1atM5EqI
ejlcQ9HJ9GqHB6iJR6lEfbFSTU+E5LTD8/9CtLUJk7R2Spjr26G50oJeLVGf
zs2zaSUj7fB9wwnTDKJ+qf+CjRT2voWGYAijIWy2pCu8X+ItfPB33MGNqP+O
y161DOAtPGuYcJWT6A/7+WOqCtfewsJNlSWlEAwYNfXHhH15C3/oJAh6Ev0G
lz6p09N0wDi/fIfH14jnabG99ISvA0p9M/q6SPRrKLnrEY9tB9STfZ1qEYAB
Roa9k8zNHfD+0smBb0Re/JcS8GCuoBPOKvGdfXsRA/oebVPHmzuhAsjSeUrk
i69GMV3BZCd86C8yBYg8SoNtv17xdEGRRrrPukRe/T1oF/E+vgsW8AemSp3A
AP2ixynOoG5YXMppXUbk4x9zC5/6tG6o5tfuKWODgdSxPwvXnndDJrfxskOW
RP9uvTZTXuyG9VUrKUWmGJhQnXpScKEHfgg8kNV4DANdfKA772Qv7In6cWHh
KAZeHWCeyQ/pha+/0T5k0yTqXYL/N8zohf6lEerGqkS/vos2VRrrhRVMSuEB
shj4fGCSyibTByOuOLE08mKAPz9bhrOkD1YI60D1dQoYGPZ6/9+Lfih/YUTu
/QoF1BQXNrs19cMgGfguZJkC7K4FNKoM9kPrtYalku8U8EGKn+HXr3546Wgq
//A0BaBvz4W+Kg/A8W1NYNBDAXKJaiywegDuNfZ4lJlDAYY5Kd0yDYOQ1SPs
vosWBQx3J4t+Wx+G9d0azxLUKQAs43PTLCPw/e23zjXKFFAHF0q/CozAS7h+
54Y0BbSV3rLiNR6BM5LRbVq8FMB4pS+F/+EI7OekUnDi/eczZ4PPo+OjMN1S
3WjyJRn8Vn2QknFvDMb2+Ftk85EB6xeliL7T76Hw01OjZm/NwTxt8Ljm40mY
cjFze5bNDIQsGee4gRkYw/7j4xyPCSg8y03D4PIV6iXFu3/cZwSGyu6mldZ9
h3K3/jlaZOuDI8fsOmkZl2HaZQfjHVkSuOWVa1jfvwIZtULPqhhqA12m0mX4
aR3uVuyzbb+uAbJ0k3r0kn/DO6FJWTVflIAsv6j45vl/0D8g3f2+vQQQ2b4e
4hZJgy6qpYp3d3GCf2CNyZmWHtEwXWmriRpvxPZphCveZ0Rf+30OnV8+jLMl
eGw9KdqNSiMnZYYUpXB2NPDzSv9elBqchplqK+N8sn1O/jz70UPP9Zl+ZU1c
4rGC/hnegyiyvq/1fYI2Xs56w61DggN5O56OvRNHwgOrzdLU0g8hh7Z5pbgN
fVyHR3aKj40HNX8O/li3ywDnsZo7rcvDgyrUhD/O7DbAa7l2Hz0vwoMsWrX6
VfkM8KbX3oxvNHiQTDDrmWo9A1zwz4kj987woPP9Pd8V7xjgQpVyau+e86DX
V6jyh7gNcd7ay320ToeRddRTFUM5I1zJD3s68pwXJZ4RuHpV3Qjvdz230gp5
kVnKJemnukY4V8rdm286eBFuVTD/08oIV90M8K+a5kV9EUtxboFGuOFySFrf
QT5koL7wPhMa4Z9b5KU+BPAh6RyWjxYWxvgUY5TU0aP8yMWW7Yq1swkOvbTv
mvULoFgzkWKGcyZ4j6+LSNAHAXSzbOHSy0smuIsvEyyYF0BZF4wSWEJNcIpi
7g4HrSCinpw/cjfDBA+jVRoWVBFEXRFjF2eGTfAuia3BjXRB5GoXr7lobopz
nT6OOysIoS8LZDtFG1N89MLo6Wo1IdRhmDXo7WSKt2UusrEeF0KfVWqXJj1M
8Wlm+udtJkJofuRSVMZNU/wD7Tqj7VkhdPNZx1cnaIorMn263p8uhGjuFjRz
ypnhEhmHNt3+CaHfdMPr/qpm+LaUxq94hiOIFP+srvOYGT5mzX21bu8RNDtX
P+NjZoZz053g5uI9gpxqaqqi3YnxSJeFXxpH0GFUXdv3xAw/lxMaLOZ/BPkx
S1nS7TfHqy+JL4d+PYLElypO9x4yx3sihx9sLB1B/2x2d9znN8dPF92eurpx
BOk0rVVyyZjjlzhsXUMYhZHiH760KUNznNH0j1SuqDB6YGpvmxZijm/LHHt8
xVUYzX/r3fKcNMcnLhzc4PsgjDT/63oTPWuO36K1E+qYEUbTTzVG0r+b4zEF
IYvB34VRr00ha/mmOf5IpC5s6o8w2saOXcjfb4HT/sd8re+wCMo2/BTwUtcC
97smnSvvKIJUosx19R9Z4KbPRXKWR0XQitmZE03ZFvju+1m0a59E0K02/Qyd
Zxa4N32dyJ85EaTKS/efeKUFvt0qV8i2KYKYvtkG1rdY4ANcDAOO3KLolVoI
6d+SBX5IVvZigKMoan5y4WOfHhnvjRWrbPwgithtbTZcDMm4lXZ3Z+IXUcSg
FVP7zZSM9z1tdjv9QxSN5F2VWrEm4/fdwvcw/BVFYZ7HanrPkXE7HRmKL58Y
avI6fafmFhlXj/QmoZNiCDXRfFDpIOOf53SW9SfE0BXTqvdqPWT8EX/3tuuM
GEoRrz+jMkDGvUqnM6O/iyFnysyW0DsyPvDj/oPObTFkevuRRes8GQc9gxlh
/OKISXjXfU1mCu4U99LnpIs4Cn8gOFNNouBcihaZB76IoxyDD4M+hhT8xM2V
r0cXxVGb1y5nMVMKLsOo43R+Qxyx3C1RjLSk4Fmtj0tadksgledSHaunKTj3
WKVoqbwEWmAuqx4LoeC9zZFmB4IlUOSO5ePj4RRcq1LM2CtaAnH2he7OjKLg
PIl7gjruSqCcvlYf49sUPBbEXUnKkkCMqzvmp9Mp+FnrXzT6zRLIr6lNP6ac
gh8fVzbQ3y+J5MXKfydWUXDPDwkL/TySyFjpl2h6NQU/Q8c04iYiiUyThHuT
XlNw/Ryba8nqksjkofBJw1YKblHty8pxShLFK4JTTycoeLTzU9faYkkkp60T
J8qA4c5fpl9fN5FCiyrW87ZMGH5f2Zy720oK6XrdsY3cjeGCNYMXBU9KIWsa
Tov2fRi+OJ79veuyFBIfKC7kO4Ths1KFt81TpdC8hfTZETEMV1yRHx39SPgO
OlIrgeEtjenvT3yVQjfvJkymSGH4u/HMqbFlKaSvW+FwTA7DxZi/r32hl0YV
n2X5LVUxXNPDz15URhr9HDQ1u03C8PV9llTla9Jo8O7VJ9z6GO7CTAemo6RR
jEvKfK4Bhuu/oR1JuyuNHprlWZUYY/j3H44KdNnSyGPO99x1Moazbccj+lZp
xJXhof2FguG/F9+OdPVKI6UULzoTS+J6Y47RPxyXRlUFL2z+WWP4yRmVZxo/
pNEpS75lOQcM/9fcyvWYQwYlhGIClx0xPAutboYJyKAO0WHlAicMP5hltnFG
Ugbd2GFi23sKw8NoFijKx2UQlRod+dAVw3k5A6J/u8mg4s03Q+VnMdz7mc35
1csyaPbNK5YGNwzny3byWg6SQY9ZTXkGzxPXe+70t9W7Mkg34m3Zm4sYPrdn
HB6plkEKd5Nd8jwxvGOuS5AWyqDC7Q2h25cwfGjePv5LmwxiaxDp07uM4XHq
t+6+fC+DJtxf9gT6YvjMm6yjIXSySL5U+ruGH4ZPBGSxBuyTReKjJzhWCRcK
T615c8mi8Rqv6FMBGD5qdfufj4ws8hyaal69SsxPGWZ7YCOLyJ+cJRIDMdxq
62xi4SlZFP+x/55wEIavJc2LUd1l0Ritg+/xaxj+JUo3dylUFkltk+YaCX89
DuP2xcqirpRRVxCM4dcL0xLlk2SRUxV0UQ3B8L+sRYvBebIIBi1OPSMsW/bA
Iq9cFtU4xJ4/GIrhDkC3o79OFpm7PPeeIHzdik9SvVsWPVCWXjkahuEPK+hY
Lo/KIvaw/sAUwjNdTGwFU7Jo1i0sWPU6hu+277opui6Lwlg8N64TtrPX3XLf
JYdmLzr644SfuKillrPIodb2hnmacAwXvnDbdpNDDg3zcZ06Trjl9kEdQ0HC
e4Y6/Qg77iu3TJeSQ+8WfNSeEr7mqpbwVUUONTW5ZXQTvnQ4ZlVHRw7VmEtt
rBDmXvO79dBEDr34oUXhjMDw1eEJozVrOcTfyp6lRHi6PUvF7pQcOpGnMGtC
WIQmlVLnLodO7dkjfpKw9njaQwF/OXRBWeSUB+HPAxEHb4fJoesM63G+hEfu
K1BXY4n5xGkrAggPrkZknEuWQ50Lre1+hMM+WxSOZsqhinPNo57/my/S/xs5
Xw6JnQh9f5qwDFv3mbZKOWSlfXmQTJjxj+ZegzdyqAjjQxqEGYZTfjS1EOuF
7sniI/zetpbBuE8ORXlAn23i/u44xNh1v5ND5GuvVEYJ280MfjjxRQ59aI2a
LyVMFY7N/rwkh1hk/ku6TtjiXFBmwG85xKaRImlKOEvw5gAjgzxa0fxayUb4
+HK84X9s8mjvMQmpfmJ/UjK91tQPy6NL9GNJCYR7GGk/D4rKIyueG3MGhN/p
ybBdUZBHJgsbLnnE/stzPheHBvJIM5+nx4DwpSozIUtLefSND9P/RNSPPTda
+nJSHrVHl+rREn5RUMbBHyCPKsqet8UR9fchytULhsujA/vu2Owj/P7OuSy3
OHnU4uwdtIuo3y9vutNf5cgjqVk3Vj+ivn8r+ZzyLJNHZ0fXC94T/dB1eYRO
8JU88n3dPZlF9Mv8P+/l1D55pOrs4fSB6C9GjiM+pTvy6EeW5wY/YTBpbBG2
RwENhY6mOPhj+GsRmQOWXAro18IC/obo30nh/BN0Cgro7Rnu30eJ/g4592vp
4WkFdKAyMszMC8MDFiOkb3sqILab57dsiTyQE+i2Cw1UQNTT+KQ9kR/B5TIx
lxMVEEwdduAk8sV/u9AhCiogF2WJp2tE/pi1TmkmdSggd2nydC+RT8b58wdz
RxRQ20F7Q/8zGK6+sVw3tKiAZsrc47xPYnjvcZf1F2yKqNTKutqAyM/7zfbB
BXqKyE57VLOZyFfeQuPtHiNFRHe/pkybyF9Tb72bmxaK6PjYPncBM2J+qYcl
Vo6K6JOYEOsDIs9TWdYd+fwVkdHbsqlzakR/ebpB9jxFtJS9U5CrQpwPZNz8
Z5EiSs96KvxBCcNpRhTzeioUEeenORU9eeI8oArUJb1RRP88V1GrOIaffeUd
LD2oiNiuqpOHifOJoS+zs5pWCU3mBH1Z/0XBP0o67Ei4KaET+u/67v6k4BQ6
k3Gdi0ooi73Ek3eRgp/Tuppg76OEhhx5iqTnKXhMtF9sYqgSWg/+Tt79iYJb
czi2H0xTQn+KKoXa3hJ/uf5ablxpUUId3+PdDTKJcWb1M7lSyqjc+HfXwAMK
PrG3Z+K5ojIa9T58zymNgh88lfumWUMZ/azzlzqRQMHfzdU9XTJURuEJozV/
ifeFWs1gqbNnlRH7VY3jrK4U/Ejk+8rXmcpo+ktktJoQBeeP83DX2a+CTA17
M5d4KbjQVGdoJpcKOvC4jyOXi7iecknmPwIqqOlPrfg6KwXP64q72yingii/
mfos/pLxoQs8ll7mKuiw3p3L9WNk/KX6yMWjt1RQQKnVf3uHyLiB0F8MJqqg
7vw3iid6yTgfM+crw/uEBYpjhlvIOH396CHnZyqoSqF9+sZzMp4mtcBe0KSC
Jt09NJ+UkfF7HBOiep0qKPEZabW6kIy/19SF7wdU0M3de550ZBGb2cmfcHha
BaU6vkzqzCDjZpK/m6jzKsiGft98SxoZN3rMEuu2rIJizwQUvbpHxqPgzuCe
LRU0EGw+kB9HxsuV48prdqmi/wN1JeR6
          "]]}, Annotation[#, "Charting`Private`Tag$26747#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26770#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
NOROzOt60azbkOCsmkRj9bg78T+gZkba
          "]]}, Annotation[#, "Charting`Private`Tag$26793#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.6, 0.4, 0.2]], 
         LineBox[CompressedData["
1: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
rcM5WPrYZ2vxOAlxzx9YXInk4H8BwAC3vA==
          "]]}, Annotation[#, "Charting`Private`Tag$26816#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26839#1"]& ]}}, {{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          FaceForm[
           Opacity[0.3]], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$26862#1"]& ]}}}, {
    Background -> GrayLevel[0], ImageSize -> 800, Axes -> True, PlotLabel -> 
     FormBox["\"2 anos - Gr\[AAcute]fico dos Eixos YZ\"", TraditionalForm]}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Sun\"", "\"Mercury\"", "\"Venus\"", "\"Earth\"", "\"Mars\"", 
       "\"Jupiter\"", "\"Saturn\"", "\"Uranus\"", "\"Neptune\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[1], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                   None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0.5], Editable -> False, Selectable -> False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0.5, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> 
                   RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                   NumberMarks -> False]], Appearance -> None, 
                 BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                False], ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.87799870106597*^9, {3.8779988314471583`*^9, 3.877998854676134*^9}, 
   3.8779990206202965`*^9, {3.8779990764983044`*^9, 3.8779991044605136`*^9}, 
   3.87865244697666*^9, 3.878652519874375*^9, 3.8804638186405945`*^9, 
   3.886092095530381*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"69291efb-f763-4da9-829e-ebd0ad42155a"]
}, Open  ]]
},
WindowSize->{1920, 992},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 357923, 8886, 12395, "Input",ExpressionUUID->"cfa9ee3e-55df-47b3-bde7-1ff18751cc2e"],
Cell[358506, 8910, 165614, 2858, 1077, "Output",ExpressionUUID->"b08711b3-3ce7-45b1-bc29-4236e324bfdd"],
Cell[524123, 11770, 190997, 3278, 916, "Output",ExpressionUUID->"d5801a27-efdc-45ae-a9ed-b73e353f64db"],
Cell[715123, 15050, 146130, 2543, 916, "Output",ExpressionUUID->"18e03e4d-19b2-40eb-88a9-8143e1e2ebe7"],
Cell[861256, 17595, 160350, 2775, 916, "Output",ExpressionUUID->"69291efb-f763-4da9-829e-ebd0ad42155a"]
}, Open  ]]
}
]
*)

